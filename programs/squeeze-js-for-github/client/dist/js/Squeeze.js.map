{"version":3,"sources":["../../../ecma/Squeeze/concat/Squeeze.js"],"names":["Squeeze","EffectSequence","each","obj","callback","x","LayeredAnimation","animations","console","log","SequencedAnimation","Animation","args","_anime","defaultArgs","name","description","frames","type","delay","frameSize","Vector3","frameBounds","VectorFrameBounds","frameOffset","flipX","duration","size","hasOwnProperty","image","GameImage","__gameStack","getArg","src","domElement","extras","apply2DFrames","parent","cix","selected_frame","timer","seesaw_mode","__frametype","framePos","y","key","fallback","fcount","quitLoop","min","max","push","termPoint","frames_reversed","slice","reverse","pop","concat","Math","round","length","resetFrames","update","engage","complete","__inst","call","tween","TWEEN","Tween","easing","curve","Easing","Linear","None","to","onUpdate","onComplete","isComplete","start","fun","Gamestack","animation","effects","JSManipulate","setEffect","selected_effect_key","selected_effect","triangleripple","getSelectedEffectKey","effects_list","effect_guis","numberSteps","counter","canvas","document","createElement","testCtx","getContext","values","initValues","minFloat","portion","startValues","valueRanges","maxFloat","endValues","iterables","__canvasList","__dataList","effect","JSON","parse","jstr","sprite","completeCallback","copyImageData","ctx","dst","createImageData","width","height","data","set","callCompletion","ondone","image_data_list","frameToCanvas","img","c","ct","source_image","style","background","restore","save","putImageData","onchunk","timer_diff","getImageData","position","filter","selected_animation","tween2","Rectangle","VectorBounds","z","Curves","linearNone","t","easeInQuadratic","easeOutQuadratic","easeInOutQuadratic","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuartic","easeOutQuartic","easeInOutQuartic","easeInQuintic","easeOutQuintic","easeInOutQuintic","Line","curve_string","get_curve_from_string","motion_curve","points","Vector","is_highlighted","offset","pointDist","rotation","iterations","growth","curve_options","n","p","num","minPointDist","get_curve_string","d","str","toLowerCase","replace","curveCall","existing_canvas","id","setAttribute","context","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","position_old","test_graph_size","get_line_segment","current_point","target","add","curveMethod","ptrack","dist","sub","pct","trig_distance_xy","GeoMath","rotatePointsXY","yTrack","mult","origin","t_points","next_segment","t_len","point","point_highlighter","sqrt","Vector2","Canvas","draw","angle","theta","PI","cos","sin","Sprite","active","gravity","__initializers","_spr","ix","item","motions","projectiles","create_id","sounds","collision_bounds","speed","acceleration","rot_speed","rot_accel","padding","GameStack","Sound","Motion","Projectile","onInit","onload","setAnimation","indexOf","keys","split","error","f","options","SpriteInitializers","f_init","init","info","framesize","__mapSize","Quick2d","pos","mx","my","currentSize","wth","htw","anime","w","h","WIDTH","HEIGHT","camera","__gameWindow","onScreen","keyString1","keyString2","extendedFunc","ef","Collision","spriteRectanglesCollide","prep_key","bullet","rot_offset","__gameInstance","isAtPlay","bx","by","bw","bh","shot","stats","damage","Error","subsprite","alert","animate","accel","abs","assertSpeed","diff","prop","rate","amt","diff_min_y","diff_min_x","diff_max_y","diff_max_x","dimens","top","left","bottom","right","minkey","paddingX","paddingY","apart","diffX","center","distX","collidesRectangular","overlap_x","diffY","distY","__inAir","overlap_y","collide_stop_x","groundMaxY","file_path","$","getJSON","SpriteInitializersOptions","Clastics","top_collideable","forces","force","topClastics","fourside_collideable","clasticObjects","MainGravity","very_light","Force","subjects","light","medium","strong","very_strong","ControllerStickMotion","player_move_x","__lib","GamepadAdapter","on","accelX","spr","decelX","__falling","decelY","player_move_xy","accelY","decel","player_rotate_x","r","v","floor","ceil","v1","v2","Pos","Size","Position","Rotation","AsyncSteps","mainObject","err","onerror","done","chunk","promise","Promise","__errorMessage","__promise"],"mappings":"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","file":"Squeeze.js","sourcesContent":["\r\n/**@author\r\nJordan Edward Blake\r\n * */\r\n\r\n\r\n\r\nfunction Squeeze()\r\n{\r\n    this.EffectSequence = EffectSequence;\r\n\r\n\r\n    this.each = function(obj, callback)\r\n    {\r\n        for(var x in obj)\r\n        {\r\n\r\n            callback(x, obj[x]);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    this.LayeredAnimation = function(animations)\r\n    {\r\n\r\n\r\n        console.log('TODO');\r\n\r\n    };\r\n\r\n    this.SequencedAnimation = function(animations)\r\n    {\r\n\r\n\r\n        console.log('TODO');\r\n\r\n    };\r\n\r\n}\r\n\r\n\r\n\r\n\r\n;/**\r\n * Takes an object of arguments and returns Animation() object.\r\n * @param   {Object} args object of arguments\r\n * @param   {string} args.name optional\r\n * @param   {string} args.description optional\r\n * @param   {string} args.type optional\r\n * @param   {Vector} args.size of the Animation object, has x and y properties\r\n * @param   {Vector} args.frameSize the size of frames in Animation, having x and y properties\r\n * @param   {VectorFrameBounds} args.frameBounds the bounds of the Animation having min, max, and termPoint properties\r\n * @param   {number} args.delay optional, the seconds to delay before running animation when started by the start() function\r\n\r\n * @param   {number} args.duration how many milliseconds the animation should take to complete\r\n *\r\n * @returns {Animation} an Animation object\r\n */\r\n\r\nclass Animation {\r\n    constructor(args = {}) {\r\n\r\n        args = args || {};\r\n\r\n        var _anime = this;\r\n\r\n        this.defaultArgs = {\r\n\r\n            name:\"my-animation\",\r\n\r\n            description:\"my-description\",\r\n\r\n            frames:[],\r\n\r\n            type:\"none\",\r\n\r\n            delay:0,\r\n\r\n            frameSize:new Vector3(44, 44, 0),\r\n\r\n            frameBounds:new VectorFrameBounds(new Vector3(0, 0, 0), new Vector3(0, 0, 0), new Vector3(0, 0, 0)),\r\n\r\n            frameOffset:new Vector3(0, 0, 0),\r\n\r\n            flipX:false,\r\n\r\n            duration:1000,\r\n\r\n            size:new Vector3(20, 20, 20)\r\n        };\r\n\r\n        for(var x in this.defaultArgs)\r\n        {\r\n            if(!args.hasOwnProperty(x))\r\n            {\r\n                args[x] = this.defaultArgs[x];\r\n\r\n            }\r\n\r\n        };\r\n\r\n        for(var x in this.args)\r\n        {\r\n           this[x] = args[x];\r\n\r\n        }\r\n\r\n\r\n        this.name = args.name || \"__\";\r\n\r\n        this.description = args.description || \"__\";\r\n\r\n\r\n        this.image = new GameImage(__gameStack.getArg(args, 'src', __gameStack.getArg(args, 'image', false)));\r\n\r\n        this.src = this.image.domElement.src;\r\n\r\n        this.domElement = this.image.domElement;\r\n\r\n        this.frameSize = this.getArg(args, 'frameSize', new Vector3(44, 44, 0));\r\n\r\n        this.frameBounds = this.getArg(args, 'frameBounds', new VectorFrameBounds(new Vector3(0, 0, 0), new Vector3(0, 0, 0), new Vector3(0, 0, 0)));\r\n\r\n        this.frameOffset = this.getArg(args, 'frameOffset', new Vector3(0, 0, 0));\r\n\r\n        this.extras = this.getArg(args, 'extras', false);\r\n\r\n      if(typeof(args) == 'object' && args.frameBounds && args.frameSize){  this.apply2DFrames(args.parent || {}); }\r\n\r\n        this.flipX = this.getArg(args, 'flipX', false);\r\n\r\n        this.cix = 0;\r\n\r\n        this.selected_frame = this.frames[0];\r\n\r\n        this.timer = 0;\r\n\r\n        this.duration = args.duration || 2000;\r\n\r\n        this.seesaw_mode = args.seesaw_mode || false;\r\n\r\n    }\r\n\r\n    singleFrame(frameSize, size)\r\n    {\r\n\r\n        this.__frametype = 'single';\r\n\r\n        this.frameSize = frameSize;\r\n\r\n        this.size = size || this.frameSize;\r\n\r\n        this.selected_frame = {\r\n            image: this.image,\r\n            frameSize: this.frameSize,\r\n            framePos: {x: 0, y: 0}\r\n        };\r\n\r\n        this.frames[0] = this.selected_frame;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    getArg(args, key, fallback) {\r\n\r\n        if (args.hasOwnProperty(key)) {\r\n\r\n            return args[key];\r\n\r\n        }\r\n        else {\r\n            return fallback;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    apply2DFrames() {\r\n\r\n        this.frames = [];\r\n\r\n        var fcount = 0;\r\n\r\n        var quitLoop = false;\r\n\r\n        for (let y = this.frameBounds.min.y; y <= this.frameBounds.max.y; y++) {\r\n\r\n            for (let x = this.frameBounds.min.x; x <= this.frameBounds.max.x; x++) {\r\n\r\n                let framePos = {x: x * this.frameSize.x + this.frameOffset.x, y: y * this.frameSize.y + this.frameOffset.y};\r\n\r\n                this.frames.push({image: this.image, frameSize: this.frameSize, framePos: framePos});\r\n\r\n                if( x >= this.frameBounds.termPoint.x && y >= this.frameBounds.termPoint.y)\r\n                {\r\n\r\n                    quitLoop = true;\r\n\r\n                    break;\r\n                }\r\n\r\n                fcount += 1;\r\n\r\n                if(quitLoop)\r\n                    break;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.frames[0] = !this.frames[0] ? {\r\n                image: this.image,\r\n                frameSize: this.frameSize,\r\n                framePos: {x: this.frameBounds.min.x, y: this.frameBounds.min.y}\r\n            } : this.frames[0];\r\n\r\n\r\n        if(this.seesaw_mode)\r\n        {\r\n            console.log('ANIMATION: applying seesaw');\r\n\r\n            var frames_reversed = this.frames.slice().reverse();\r\n\r\n            this.frames.pop();\r\n\r\n            this.frames = this.frames.concat(frames_reversed);\r\n\r\n        }\r\n\r\n       // this.selected_frame = this.frames[this.cix % this.frames.length] || this.frames[0];\r\n\r\n    }\r\n\r\n    resetFrames() //special reset function:: frames are re-rendered each reset()\r\n    {\r\n\r\n        this.apply2DFrames();\r\n\r\n    }\r\n\r\n    update() {\r\n\r\n        this.selected_frame = this.frames[Math.round(this.cix) % this.frames.length];\r\n\r\n\r\n    }\r\n\r\n\r\n    reset()\r\n{\r\n\r\n    this.resetFrames();\r\n\r\n    this.cix = 0;\r\n\r\n}\r\n\r\ncontinuous(duration)\r\n{\r\n\r\n    if(this.__frametype == 'single')\r\n    {\r\n        return 0;\r\n\r\n    }\r\n\r\n  this.apply2DFrames();\r\n\r\n    //update once:\r\n    this.update();\r\n\r\n\r\n    if(this.cix == 0)\r\n  {\r\n\r\n      this.engage();\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nengage(duration, complete)\r\n{\r\n\r\n    if(this.__frametype == 'single')\r\n    {\r\n        return 0;\r\n\r\n    }\r\n\r\n    let __inst = this;\r\n\r\n    this.complete = complete || this.complete || function(){  };\r\n\r\n    duration = duration || typeof(this.duration) == 'number' ? this.duration : this.frames.length * 20;\r\n\r\n    if(this.cix == 0 && this.extras)\r\n    {\r\n        this.extras.call(); //fire any extras attached\r\n\r\n    }\r\n\r\n    //we have a target\r\n  this.tween = new TWEEN.Tween(this)\r\n        .easing(__inst.curve || TWEEN.Easing.Linear.None)\r\n\r\n        .to({cix:__inst.frames.length - 1}, duration)\r\n        .onUpdate(function() {\r\n            //console.log(objects[0].position.x,objects[0].position.y);\r\n\r\n         //   __inst.cix = Math.ceil(__inst.cix);\r\n\r\n        __inst.update();\r\n\r\n        })\r\n        .onComplete(function() {\r\n            //console.log(objects[0].position.x, objects[0].position.y);\r\n\r\n            if(__inst.complete)\r\n            {\r\n\r\n                __inst.complete();\r\n\r\n            }\r\n\r\n            __inst.cix = 0;\r\n\r\n            __inst.isComplete = true;\r\n\r\n        });\r\n\r\n\r\n  this.tween.start();\r\n\r\n\r\n}\r\n\r\nonComplete(fun)\r\n{\r\n    this.complete = fun;\r\n\r\n}\r\n\r\n    animate() {\r\n\r\n        this.apply2DFrames();\r\n\r\n        this.timer += 1;\r\n\r\n        if(this.delay == 0 || this.timer % this.delay == 0) {\r\n\r\n                if(this.cix == 0 && this.extras)\r\n                {\r\n                    this.extras.call(); //fire any extras attached\r\n\r\n                }\r\n\r\n                if(this.cix >= this.frames.length - 1 && typeof(this.complete) == 'function')\r\n                {\r\n                    this.complete(this);\r\n\r\n                }\r\n\r\n                this.cix = this.cix >= this.frames.length - 1 ? this.frameBounds.min.x : this.cix + 1;\r\n\r\n                this.update();\r\n\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nGamestack.Animation = Animation;;/*\r\n * Canvas\r\n *    draw animations, textures to the screen\r\n * */\r\n\r\nclass EffectSequence\r\n{\r\n    constructor(args = {})\r\n    {\r\n        console.log('Effect Sequence');\r\n\r\n        for(var x in args)\r\n        {\r\n            this[x] = args[x];\r\n\r\n        }\r\n\r\n        this.animation = args.animation || false;\r\n\r\n        this.name = args.name || \"__none\";\r\n\r\n        this.effects = Gamestack.JSManipulate;\r\n\r\n        this.setEffect(args.selected_effect_key || args.selected_effect || this.effects.triangleripple);\r\n\r\n\r\n        console.log('created effect of: ' + this.getSelectedEffectKey());\r\n\r\n        this.effects_list = [];\r\n\r\n        this.effects_list[0] = this.selected_effect;\r\n\r\n        this.effect_guis = [];\r\n\r\n        this.numberSteps = 10;\r\n\r\n        this.curve = args.curve || TWEEN.Easing.Linear.None;\r\n\r\n        this.counter = 0;\r\n\r\n        this.duration = 3000;\r\n\r\n        this.seesaw_mode = args.seesaw_mode || true; //loop effects back to original state\r\n\r\n        this.canvas = document.createElement('canvas');\r\n\r\n        this.testCtx = this.canvas.getContext('2d');\r\n\r\n        this.values = {};\r\n\r\n        this.initValues(args);\r\n\r\n            this.minFloat = function (portion) {\r\n                for (var x in this.startValues) {\r\n\r\n                    this.startValues[x] = this.valueRanges[x].max * portion;\r\n\r\n                }\r\n\r\n            };\r\n\r\n            this.maxFloat = function (portion) {\r\n                for (var x in this.endValues) {\r\n\r\n                    this.endValues[x] = this.valueRanges[x].max * portion;\r\n                }\r\n            };\r\n\r\n            this.iterables = {\r\n\r\n                __canvasList:[],\r\n\r\n                __dataList:[]\r\n\r\n            }\r\n\r\n    }\r\n\r\n    getSelectedEffectKey()\r\n    {\r\n       return this.selected_effect_key;\r\n    }\r\n\r\n    setEffect(effect)\r\n    {\r\n\r\n        for(var x in this.effects)\r\n        {\r\n            if(x==effect || effect == this.effects[x])\r\n            {\r\n\r\n                this.selected_effect_key = x;\r\n\r\n                this.selected_effect = this.effects[x];\r\n\r\n                this.effects_list = [];\r\n\r\n                this.effects_list[0] = this.selected_effect;\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initValues(args)\r\n    {\r\n        this.startValues = args.startValues || {};\r\n\r\n        this.endValues = args.endValues || {};\r\n\r\n            for (var x in this.selected_effect.valueRanges) {\r\n\r\n               if(typeof(this.startValues[x]) !== 'number') {\r\n\r\n                   this.startValues[x] = this.selected_effect.valueRanges[x].min;\r\n\r\n                   this.endValues[x] = this.selected_effect.valueRanges[x].max;\r\n\r\n               }\r\n\r\n            }\r\n\r\n            this.values = JSON.parse(jstr(this.startValues));\r\n\r\n            this.valueRanges = this.selected_effect.valueRanges;\r\n\r\n\r\n    }\r\n\r\n    ondone(){}\r\n    onerror(){}\r\n    onchunk(){}\r\n\r\n    apply(sprite, canvas, completeCallback)\r\n    {\r\n        var __inst = this;\r\n\r\n        __inst.sprite = sprite;\r\n\r\n        __inst.canvas = canvas;\r\n\r\n        var frames = [];\r\n\r\n        function copyImageData(ctx, src) {\r\n            var dst = ctx.createImageData(src.width, src.height);\r\n            dst.data.set(src.data);\r\n            return dst;\r\n        };\r\n\r\n        function callCompletion()\r\n        {\r\n            if(__inst.ondone) {\r\n\r\n            __inst.ondone(__inst.iterables);\r\n\r\n            }\r\n\r\n            if(completeCallback){ completeCallback(__inst.image_data_list); }\r\n\r\n        }\r\n\r\n        function frameToCanvas(img)\r\n        {\r\n            if(!__inst.iterables.__canvasList[__inst.counter]) {\r\n\r\n                var c = document.createElement('CANVAS'), ct = c.getContext('2d');\r\n\r\n                c.width = __inst.source_image.width;\r\n\r\n                c.height = __inst.source_image.height;\r\n\r\n                c.style.background = \"blue\";\r\n\r\n                ct.restore();\r\n\r\n                ct.save();\r\n\r\n                ct.putImageData(img, 0, 0);\r\n\r\n                __inst.iterables.__canvasList.push(c);\r\n\r\n                __inst.iterables.__dataList.push(img);\r\n\r\n                if (__inst.onchunk) {\r\n                    __inst.onchunk(c, img);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                //do nothing\r\n            }\r\n        }\r\n\r\n        if(this.counter == 0) {\r\n\r\n            if (canvas && this.selected_effect && this.selected_effect.hasOwnProperty('filter')) {\r\n\r\n                this.timer_diff = 0;\r\n\r\n                var ctx = canvas.getContext('2d');\r\n\r\n                __inst.values = JSON.parse(jstr(__inst.startValues));\r\n\r\n              var tween =  new TWEEN.Tween(this.values).to(this.endValues, this.duration).easing(this.curve).onUpdate(function () {\r\n\r\n                    if (!__inst.source_image) {\r\n\r\n                        __inst.source_image = ctx.getImageData(sprite.position.x, sprite.position.y, sprite.size.x, sprite.size.y);\r\n\r\n                        console.log('image is set');\r\n\r\n                    }\r\n\r\n                    var img = copyImageData(ctx, __inst.source_image);\r\n\r\n                  __inst.selected_effect.filter(img, __inst.values);\r\n\r\n                  sprite.selected_animation.selected_frame.image.data = img;\r\n\r\n                 frameToCanvas(img);\r\n\r\n                  __inst.counter += 1;\r\n\r\n              }).onComplete(function(){\r\n\r\n\r\nif(__inst.seesaw_mode)\r\n{\r\n\r\n    var tween2 =  new TWEEN.Tween(__inst.values).to(__inst.startValues, __inst.duration).easing(__inst.curve).onUpdate(function () {\r\n\r\n        if (!__inst.source_image) {\r\n\r\n            __inst.source_image = ctx.getImageData(sprite.position.x, sprite.position.y, sprite.size.x, sprite.size.y);\r\n\r\n            console.log('image is set');\r\n\r\n        }\r\n\r\n        var img = copyImageData(ctx, __inst.source_image);\r\n\r\n        __inst.selected_effect.filter(img, __inst.values);\r\n\r\n        sprite.selected_animation.selected_frame.image.data = img;\r\n\r\n        frameToCanvas(img);\r\n\r\n        __inst.counter += 1;\r\n\r\n\r\n    }).onComplete(function(){\r\n\r\n        callCompletion(__inst.source_image);\r\n\r\n        __inst.counter = 0;\r\n\r\n    }).start();\r\n\r\n}\r\n                  else\r\n                  {\r\n\r\n                      callCompletion(__inst.source_image);\r\n\r\n                      __inst.counter = 0;\r\n\r\n                  }\r\n\r\n\r\n              }).start();\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n;\r\n\r\n/**\r\n * Takes the min and max vectors of rectangular shape and returns Rectangle Object.\r\n * @param   {Object} args object of arguments\r\n * @param   {Vector} args.min the minimum vector point (x,y)\r\n * @param   {Vector} args.max the maximum vector point (x,y)\r\n *\r\n * @returns {Rectangle} a Rectangle object\r\n */\r\n\r\nclass Rectangle {\r\n\r\n    constructor(min, max) {\r\n\r\n        this.min = min;\r\n        this.max = max;\r\n\r\n    }\r\n\r\n\r\n}\r\n;\r\n\r\n\r\nlet VectorBounds = Rectangle;\r\n\r\n\r\n\r\nGamestack.Rectangle = Rectangle;\r\n\r\n\r\n\r\n/**\r\n * Takes the min and max vectors plus termPoint ('termination-point'), returns VectorFrameBounds\r\n *  *use this to define the bounds of an Animation object.\r\n * @param   {Object} args object of arguments\r\n * @param   {Vector} args.min the minimum vector point (x,y)\r\n * @param   {Vector} args.max the maximum vector point (x,y)\r\n * @param   {Vector} args.termPoint the termPoint vector point (x,y)\r\n * -While a min and max Vector(x,y) will describe the grid of Animation frames, the termPoint will indicate the last frame to show on the grid (Animations may stop early on the 'grid')\r\n * @returns {VectorFrameBounds} a VectorFrameBounds object\r\n */\r\n\r\n\r\nclass VectorFrameBounds extends Rectangle {\r\n\r\n    constructor(min, max, termPoint) {\r\n\r\n        super(min, max);\r\n\r\n        this.termPoint = termPoint || new Vector3(this.max.x, this.max.y, this.max.z);\r\n\r\n    }\r\n\r\n\r\n}\r\n;\r\n\r\n\r\n\r\nGamestack.VectorFrameBounds = VectorFrameBounds;\r\n\r\n\r\n\r\n\r\nvar Curves = { //ALL HAVE INPUT AND OUTPUT OF: 0-1.0\r\n    // no easing, no acceleration\r\n    linearNone: function (t) { return t },\r\n    // accelerating from zero velocity\r\n    easeInQuadratic: function (t) { return t*t },\r\n    // decelerating to zero velocity\r\n    easeOutQuadratic: function (t) { return t*(2-t) },\r\n    // acceleration until halfway, then deceleration\r\n    easeInOutQuadratic: function (t) { return t<.5 ? 2*t*t : -1+(4-2*t)*t },\r\n    // accelerating from zero velocity\r\n    easeInCubic: function (t) { return t*t*t },\r\n    // decelerating to zero velocity\r\n    easeOutCubic: function (t) { return (--t)*t*t+1 },\r\n    // acceleration until halfway, then deceleration\r\n    easeInOutCubic: function (t) { return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1 },\r\n    // accelerating from zero velocity\r\n    easeInQuartic: function (t) { return t*t*t*t },\r\n    // decelerating to zero velocity\r\n    easeOutQuartic: function (t) { return 1-(--t)*t*t*t },\r\n    // acceleration until halfway, then deceleration\r\n    easeInOutQuartic: function (t) { return t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t },\r\n    // accelerating from zero velocity\r\n    easeInQuintic: function (t) { return t*t*t*t*t },\r\n    // decelerating to zero velocity\r\n    easeOutQuintic: function (t) { return 1+(--t)*t*t*t*t },\r\n    // acceleration until halfway, then deceleration\r\n    easeInOutQuintic: function (t) { return t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t }\r\n}\r\n\r\n\r\nGamestack.Curves = Curves;\r\n\r\n\r\n/**\r\n * Takes several args and returns Line object. Intended for curved-line / trajectory of Projectile Object.\r\n * @param   {Object} args object of arguments\r\n * @param   {Easing} args.curve the curve applied to line see TWEEN.Easing , limited options for immediate line-drawing\r\n * @param   {number} args.duration the millisecond duration of Line\r\n * @param   {Vector} args.position the position vector\r\n *\r\n * @param   {number} args.pointDist the numeric point-distance\r\n *\r\n * @param   {Vector} args.size the size vector\r\n *\r\n * @param   {number} args.rotation the numeric rotation of -360 - 360\r\n *\r\n * @param   {number} args.growth the numeric growth\r\n *\r\n * -While a min and max Vector(x,y) will describe the grid of Animation frames, the termPoint will indicate the last frame to show on the grid (Animations may stop early on the 'grid')\r\n * @returns {VectorFrameBounds} a VectorFrameBounds object\r\n */\r\n\r\nclass Line\r\n{\r\n    constructor(args = {})\r\n    {\r\n\r\n        this.curve_string = args.curve_string || \"Linear_None\";\r\n\r\n        this.curve = this.get_curve_from_string(this.curve_string);\r\n\r\n        this.motion_curve = args.motion_curve || TWEEN.Easing.Linear.None;\r\n\r\n        if(typeof(args.curve) == 'function')\r\n        {\r\n            this.curve = args.curve;\r\n        }\r\n\r\n        this.points = [];\r\n\r\n        this.position = args.position ||  new Vector();\r\n\r\n        this.is_highlighted = args.is_highlighted || false;\r\n\r\n        this.offset = args.offset || new Vector();\r\n\r\n        this.pointDist = 5;\r\n\r\n        this.size = args.size || new Vector();\r\n\r\n        this.rotation = args.rotation || 0;\r\n\r\n        this.iterations = 1;\r\n\r\n        this.growth = args.growth || 1.2;\r\n\r\n        this.curve_options = Curves;\r\n\r\n    }\r\n\r\n    Iterations(n)\r\n    {\r\n\r\n       this.iterations = n;\r\n       return this;\r\n    }\r\n\r\n    Growth(n)\r\n    {\r\n        this.growth = n;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    Pos(p)\r\n    {\r\n\r\n        this.position = p;\r\n        return this;\r\n    }\r\n\r\n    PointDisp(num)\r\n    {\r\n        this.minPointDist = num;\r\n        return this;\r\n    }\r\n\r\n    Curve(c)\r\n    {\r\n        this.curve = c;\r\n        this.curve_string = this.get_curve_string(c);\r\n        return this;\r\n    }\r\n\r\n    Duration(d)\r\n    {\r\n        this.duration = d;\r\n\r\n        return this;\r\n    }\r\n\r\n    get_curve_from_string(str)\r\n    {\r\n\r\n        for(var x in this.curve_options) {\r\n\r\n            if(x.toLowerCase() == str.toLowerCase().replace('_', ''))\r\n            {\r\n                return this.curve_options[x];\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    get_curve_string(c)\r\n    {\r\n        for(var x in this.curve_options) {\r\n\r\n            if(this.curve_options[x] == c)\r\n            {\r\n                return x;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getGraphCanvas(curveCall, existing_canvas) {\r\n\r\n        var canvas = existing_canvas || document.createElement('canvas');\r\n\r\n        canvas.style.position = \"relative\";\r\n\r\n        canvas.id = 'curve-display';\r\n\r\n        canvas.setAttribute('class', 'motion-curve');\r\n\r\n        canvas.width = 180;\r\n        canvas.height = 100;\r\n\r\n        canvas.style.background = \"black\";\r\n\r\n        var context = canvas.getContext('2d');\r\n        context.fillStyle = \"rgb(0,0,0)\";\r\n        context.fillRect(0, 0, 180, 100);\r\n\r\n        context.lineWidth = 0.5;\r\n        context.strokeStyle = \"rgb(230,230,230)\";\r\n\r\n        context.beginPath();\r\n        context.moveTo(0, 20);\r\n        context.lineTo(180, 20);\r\n        context.moveTo(0, 80);\r\n        context.lineTo(180, 80);\r\n        context.closePath();\r\n        context.stroke();\r\n\r\n        context.lineWidth = 2;\r\n        context.strokeStyle = \"rgb(255,127,127)\";\r\n\r\n        var position = {x: 0, y: 80};\r\n        var position_old = {x: 0, y: 80};\r\n\r\n        this.test_graph_size = new Vector(185, 80 -20);\r\n\r\n       var points = this.get_line_segment(this.test_graph_size, 5, curveCall);\r\n\r\n        for(var x in points)\r\n        {\r\n            var position = new Vector(points[x].x, this.test_graph_size.y + 20 - points[x].y);\r\n\r\n            context.beginPath();\r\n            context.moveTo(position_old.x, position_old.y);\r\n            context.lineTo(position.x, position.y);\r\n            context.closePath();\r\n            context.stroke();\r\n\r\n            position_old.x = position.x;\r\n            position_old.y = position.y;\r\n        }\r\n\r\n        return canvas;\r\n    }\r\n\r\n    get_line_segment(size, pointDist, curveCall)\r\n    {\r\n        if(!size || !pointDist) //***PREVENT DOUBLE RUN\r\n        {\r\n\r\n            return 0;\r\n        }\r\n\r\n        var points = [];\r\n\r\n        var current_point = new Vector(0, 0, 0);\r\n\r\n        var position = new Vector(current_point),\r\n\r\n            target = new Vector(position.add(size)),\r\n\r\n            start = new Vector(position),\r\n\r\n            curveMethod = curveCall,\r\n\r\n            ptrack = new Vector(start);\r\n\r\n        for (position.x = position.x; position.x < target.x; position.x += 1) {\r\n\r\n            var dist = position.sub(start);\r\n\r\n            var pct = dist.x / size.x;\r\n\r\n            console.log(pct);\r\n\r\n            position.y = Math.round(curveMethod(pct) * size.y);\r\n\r\n            if (ptrack.trig_distance_xy(position) >= pointDist) {\r\n\r\n                var p = new Vector(Gamestack.GeoMath.rotatePointsXY(position.x, position.y, 0));\r\n\r\n                points.push(p);\r\n\r\n                current_point = new Vector(position);\r\n\r\n                ptrack = new Vector(current_point);\r\n\r\n            }\r\n        }\r\n\r\n        return points;\r\n\r\n    }\r\n\r\n    fill(size, pointDist)\r\n    {\r\n\r\n        if(!size || !pointDist) //***PREVENT DOUBLE RUN\r\n        {\r\n\r\n            return 0;\r\n        }\r\n\r\n        this.size = size;\r\n\r\n        this.pointDist = pointDist;\r\n\r\n        var __inst = this;\r\n\r\n        this.points = [];\r\n\r\n        var current_point = new Vector(this.position), yTrack = 0;\r\n\r\n\r\n        for(var x= 0; x <= this.iterations; x++) {\r\n\r\n            var position = new Vector(current_point),\r\n\r\n                target = new Vector(position.add(size)),\r\n\r\n                start = new Vector(position),\r\n\r\n                curveMethod = this.curve,\r\n\r\n                ptrack = new Vector(start);\r\n\r\n            for (position.x = position.x; position.x < target.x; position.x += 1) {\r\n\r\n                var dist = position.sub(start);\r\n\r\n                var pct = dist.x / size.x;\r\n\r\n                position.y = start.y +  Math.round(curveMethod(pct) * size.y);\r\n\r\n                if (current_point.trig_distance_xy(position) >= this.pointDist) {\r\n\r\n                    var p = new Vector(Gamestack.GeoMath.rotatePointsXY(position.x, position.y, this.rotation));\r\n\r\n                    this.points.push(p);\r\n\r\n                    current_point = new Vector(position);\r\n\r\n                }\r\n            }\r\n\r\n            size = size.mult(this.growth);\r\n\r\n\r\n        }\r\n    }\r\n\r\n    transpose(origin)\r\n    {\r\n\r\n        var t_points = [];\r\n\r\n        for(var x = 0; x < this.points.length; x++) {\r\n\r\n            t_points.push(this.points[x].add(origin));\r\n\r\n        }\r\n\r\n        return t_points;\r\n\r\n    }\r\n\r\n    add_segment(next_segment, offset)\r\n    {\r\n        for(var x = 0; x < next_segment.length; x++) {\r\n\r\n            next_segment[x] = new Vector(next_segment[x]).add(offset);\r\n\r\n            this.points.push(next_segment[x]);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    get_flipped_segment(points)\r\n    {\r\n\r\n        var t_points = points.slice(), t_len = t_points.length;\r\n\r\n        for(var x = 0; x < points.length; x++) {\r\n\r\n            t_points[t_len - x].x = points[x].x\r\n\r\n        }\r\n\r\n        return t_points;\r\n\r\n    }\r\n\r\n    Highlight(origin, ctx)\r\n    {\r\n\r\n        ctx = ctx || Gamestack.ctx;\r\n\r\n        for(var x in this.points)\r\n        {\r\n\r\n            var point = origin.add(this.points[x]).sub(Gamestack.point_highlighter.size.mult(0.5));\r\n\r\n            var dist = point.sub(Gamestack.point_highlighter.position);\r\n\r\n            var d = Math.sqrt( dist.x * dist.x + dist.y * dist.y );\r\n\r\n\r\n            if(d >= 10)\r\n            {\r\n                Gamestack.point_highlighter.position = new Vector2(origin.add(this.points[x]).sub(Gamestack.point_highlighter.size.mult(0.5)));\r\n            }\r\n\r\n\r\n               Canvas.draw(Gamestack.point_highlighter, ctx);\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nvar GeoMath = {\r\n\r\n        rotatePointsXY:function(x,y,angle) {\r\n\r\n            var theta = angle*Math.PI/180;\r\n\r\n            var point = {};\r\n            point.x = x * Math.cos(theta) - y * Math.sin(theta);\r\n            point.y = x * Math.sin(theta) + y * Math.cos(theta);\r\n\r\n            point.z = 0;\r\n\r\n            return point\r\n        }\r\n\r\n}\r\n\r\nGamestack.GeoMath = GeoMath;\r\n;/**\r\n * Takes an object of arguments and returns Sprite() object. Sprite() is a container for multiple Animations, Motions, and Sounds. Sprites have several behavioral functions for 2d-Game-Objects.\r\n\r\n * @param   {Object} args object of arguments\r\n * @param   {string} args.name optional\r\n * @param   {string} args.description optional\r\n\r\n * @param   {string} args.src the source file for the GameImage:Sprite.image :: use a string / file-path\r\n\r\n * @param   {Vector} args.size the size of the Sprite\r\n * @param   {Vector} args.position the position of the Sprite\r\n * @param   {Vector} args.padding the 'float-type' Vector of x and y padding to use when processing collision on the Sprite. A padding of new Vector(0.2, 0.2) will result in 1/5 of Sprite size for padding\r\n\r\n\r\n\r\n * @param   {Animation} args.selected_animation the selected_animation of the Sprite:: pass during creation or use Sprite.setAnimation after created\r\n *\r\n * @returns {Sprite} a Sprite object\r\n */\r\n\r\nclass Sprite {\r\n    constructor(args) {\r\n\r\n        if (!args) {\r\n            args = {};\r\n        }\r\n\r\n        if(args instanceof Animation)\r\n        {\r\n\r\n            args = {selected_animation:args, size:new Vector(args.frameSize)};\r\n        }\r\n\r\n        this.active = true; //active sprites are visible\r\n\r\n        this.name = args.name || \"__\";\r\n\r\n        this.description = args.description || \"__\";\r\n\r\n        this.gravity = \"medium\";\r\n\r\n        this.__initializers = __gameStack.getArg(args, '__initializers', []);\r\n\r\n        var _spr = this;\r\n\r\n        Gamestack.each(args, function (ix, item) { //apply all args\r\n\r\n            if (ix !== 'parent') {\r\n                _spr[ix] = item;\r\n            }\r\n\r\n        });\r\n\r\n        this.type = __gameStack.getArg(args, 'type', 'basic');\r\n\r\n        this.animations = __gameStack.getArg(args, 'animations', []);\r\n\r\n        this.motions = __gameStack.getArg(args, 'motions', []);\r\n\r\n        this.projectiles = __gameStack.getArg(args, 'projectiles', []);\r\n\r\n        let __inst = this;\r\n\r\n        this.id = __gameStack.getArg(args, 'id', this.create_id());\r\n\r\n        this.sounds = __gameStack.getArg(args, 'sounds', []);\r\n\r\n        this.image = new GameImage(__gameStack.getArg(args, 'src', __gameStack.getArg(args, 'image', false)));\r\n\r\n        this.size = new Vector(__gameStack.getArg(args, 'size', new Vector3(100, 100)));\r\n\r\n        this.position = new Vector( __gameStack.getArg(args, 'position', new Vector3(0, 0, 0)));\r\n\r\n        this.collision_bounds = __gameStack.getArg(args, 'collision_bounds', new VectorBounds(new Vector3(0, 0, 0), new Vector3(0, 0, 0)));\r\n\r\n        this.rotation =  new Vector(__gameStack.getArg(args, 'rotation', new Vector3(0, 0, 0)));\r\n\r\n        this.selected_animation = {};\r\n\r\n        this.speed = __gameStack.getArg(args, 'speed', new Vector3(0, 0, 0));\r\n\r\n        this.acceleration = __gameStack.getArg(args, 'acceleration', new Vector3(0, 0, 0));\r\n\r\n        this.rot_speed = __gameStack.getArg(args, 'rot_speed', new Vector3(0, 0, 0));\r\n\r\n        this.rot_accel = __gameStack.getArg(args, 'rot_accel', new Vector3(0, 0, 0));\r\n\r\n\r\n        this.padding = __gameStack.getArg(args, 'padding', new Vector3(0, 0, 0));\r\n\r\n        //Apply / instantiate Sound(), Motion(), and Animation() args...\r\n\r\n        GameStack.each(this.sounds, function (ix, item) {\r\n\r\n            __inst.sounds[ix] = new Sound(item);\r\n\r\n        });\r\n\r\n        GameStack.each(this.motions, function (ix, item) {\r\n\r\n            __inst.motions[ix] = new Motion(item);\r\n\r\n        });\r\n\r\n        GameStack.each(this.animations, function (ix, item) {\r\n\r\n            __inst.animations[ix] = new Animation(item);\r\n\r\n\r\n        });\r\n\r\n        GameStack.each(this.projectiles, function (ix, item) {\r\n\r\n            __inst.projectiles[ix] = new Projectile(item);\r\n\r\n        });\r\n\r\n        //Apply initializers:\r\n\r\n        GameStack.each(this.__initializers, function (ix, item) {\r\n\r\n            __inst.onInit(item);\r\n\r\n        });\r\n\r\n\r\n        if (args.selected_animation) {\r\n            this.selected_animation = new Animation(args.selected_animation);\r\n\r\n        }\r\n        else {\r\n\r\n            this.image.domElement.onload = function(){\r\n\r\n                __inst.setAnimation(__inst.animations[0] || new Animation({\r\n\r\n                        image:  __inst.image,\r\n\r\n                        frameSize: new Vector3( __inst.image.domElement.width,  __inst.image.domElement.height),\r\n\r\n                        frameBounds: new VectorFrameBounds(new Vector3(), new Vector3())\r\n\r\n\r\n                    }));\r\n\r\n            };\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * This function initializes sprites. Call to trigger all functions previously passed to onInit().\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     **********/\r\n\r\n    init() {\r\n\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * This function extends the init() function. Takes single function() argument OR single string argument\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {function} fun the function to be passed into the init() event of the Sprite()\r\n     **********/\r\n\r\n    onInit(fun) {\r\n\r\n        if (typeof fun == 'string') {\r\n\r\n            if (this.__initializers.indexOf(fun) < 0) {\r\n\r\n                this.__initializers.push(fun)\r\n            }\r\n            ;\r\n\r\n            var __inst = this;\r\n\r\n            var keys = fun.split('.');\r\n\r\n            console.log('finding init from string:' + fun);\r\n\r\n            if (!keys.length >= 2) {\r\n                return console.error('need min 2 string keys separated by \".\"');\r\n            }\r\n\r\n            var f = GameStack.options.SpriteInitializers[keys[0]][keys[1]];\r\n\r\n            if (typeof(f) == 'function') {\r\n\r\n                var __inst = this;\r\n\r\n                var f_init = this.init;\r\n\r\n                this.init = function () {\r\n\r\n                    f_init(__inst);\r\n\r\n                    f(__inst);\r\n\r\n                };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        else if (typeof fun == 'function') {\r\n\r\n            console.log('extending init:');\r\n\r\n\r\n            var f_init = this.init;\r\n            var __inst = this;\r\n\r\n            this.init = function () {\r\n\r\n                f_init(__inst);\r\n\r\n                fun(__inst);\r\n\r\n            };\r\n\r\n\r\n        }\r\n\r\n        else if (typeof fun == 'object') {\r\n\r\n            console.log('extending init:');\r\n\r\n            console.info('Quick2D does not yet implement onInit() from arg of object type');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*****************************\r\n     * Getters\r\n     ***************************/\r\n\r\n    /**\r\n     * This function gets the 'id' of the Sprite()\r\n     * @function\r\n     * @memberof Sprite\r\n     * @returns {string}\r\n     **********/\r\n\r\n    get_id() {\r\n        return this.id;\r\n    }\r\n\r\n\r\n\r\n    to_map_object(size, framesize) {\r\n\r\n        this.__mapSize = new Vector3(size || this.size);\r\n\r\n        this.frameSize = new Vector3(framesize || this.size);\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    /*****************************\r\n     * Setters and Creators\r\n     ***************************/\r\n\r\n    /**\r\n     * This function creates the 'id' of the Sprite():Called automatically on constructor()\r\n     * @function\r\n     * @memberof Sprite\r\n     * @returns {string}\r\n     **********/\r\n\r\n    create_id() {\r\n\r\n        return Quick2d.create_id();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * This function sets the size of the Sprite()\r\n     * @function\r\n     * @memberof Sprite\r\n     **********/\r\n\r\n    setSize(size) {\r\n\r\n        this.size = new Vector3(size.x, size.y, size.z);\r\n\r\n    }\r\n\r\n    /**\r\n     * This function sets the position of the Sprite()\r\n     * @function\r\n     * @memberof Sprite\r\n     **********/\r\n\r\n    setPos(pos) {\r\n        this.position = new Vector3(pos.x, pos.y, pos.z || 0);\r\n\r\n    }\r\n\r\n    /**\r\n     * This function sizes the Sprite according to minimum dimensions and existing w/h ratios\r\n     * @param {number} mx the maximum size.x for the resize\r\n     * @param {number} my the maximum size.y for the resize\r\n     * @function\r\n     * @memberof Sprite\r\n     **********/\r\n\r\n   getCappedSizeXY(mx, my, currentSize)\r\n    {\r\n\r\n        var size = new Vector3(currentSize || this.size);\r\n\r\n        var wth = size.y /  size.x;\r\n\r\n        var htw = size.x /  size.y;\r\n\r\n        if( size.x > mx)\r\n        {\r\n            size.x = mx;\r\n\r\n            size.y = size.x * wth;\r\n\r\n        }\r\n\r\n        if( size.y > my)\r\n        {\r\n            size.y = my;\r\n\r\n            size.x = size.y * htw;\r\n\r\n        }\r\n\r\n        return size;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    /*****************************\r\n     *  assertSpeed()\r\n     *  -assert the existence of a speed{} object\r\n     ***************************/\r\n\r\n    assertSpeed() {\r\n        if (!this.speed) {\r\n\r\n            this.speed = new Vector3(0, 0, 0);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    /*****************************\r\n     *  setAnimation(anime)\r\n     *  -set the select_animation of this sprite\r\n     ***************************/\r\n\r\n    /**\r\n     * This function sets the 'selected_animation' property of the Sprite():: *all Sprites must have a 'selected_animation'\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Animation}\r\n     **********/\r\n\r\n    setAnimation(anime) {\r\n\r\n        if (anime instanceof Animation && this.animations.indexOf(anime) < 0) {\r\n            this.animations.push(anime);\r\n        }\r\n\r\n        this.selected_animation = anime;\r\n\r\n        Gamestack.log('declared default animation');\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    /**\r\n     * This function indicates if this Sprite is onScreen within the Gamestack.WIDTH && Gamestack.HEIGHT dimensions, OR any w & h passed as arguments\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {number} w optional WIDTH argument, defaults to Gamestack.WIDTH\r\n     * @param {number} h optional HEIGHT argument, defaults to Gamestack.HEIGHT\r\n     **********/\r\n\r\n    onScreen(w, h) {\r\n\r\n        w = w || __gameStack.WIDTH;\r\n\r\n        h = h || __gameStack.HEIGHT;\r\n\r\n\r\n        var camera = __gameStack.camera ||__gameStack.__gameWindow.camera || new Vector3(0, 0, 0);\r\n\r\n        var p = new Vector3(this.position.x - camera.position.x, this.position.y - camera.position.y, this.position.z - camera.position.z);\r\n\r\n        var onScreen = p.x  > 0 - this.size.x && p.x < w + this.size.x\r\n        &&  p.y  > 0 - this.size.x && p.y < h + this.size.y ? true : false;\r\n\r\n        return onScreen;\r\n\r\n    }\r\n\r\n    /*****************************\r\n     * Updates\r\n     ***************************/\r\n\r\n    /*****************************\r\n     * update()\r\n     * -starts empty:: is used by Quick2d.js as the main sprite update\r\n     ***************************/\r\n\r\n    /**\r\n     * This function is the main update() function for the Sprite\r\n     * @function\r\n     * @memberof Sprite\r\n     **********/\r\n\r\n\r\n    update(sprite) {\r\n    }\r\n\r\n    /*****************************\r\n     * def_update()\r\n     * -applies speed and other default factors of movement::\r\n     * -is used by Quick2d.js as the system def_update (default update)\r\n     ***************************/\r\n\r\n    /**\r\n     * This function updates various speed and rotational-speed properties for the Sprite()\r\n     * @function\r\n     * @memberof Sprite\r\n     **********/\r\n\r\n    def_update(sprite) {\r\n\r\n\r\n        for (var x in this.speed) {\r\n\r\n            if (this.speed[x] > 0 || this.speed[x] < 0) {\r\n\r\n                this.position[x] += this.speed[x];\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for (var x in this.acceleration) {\r\n\r\n            if (this.acceleration[x] > 0 || this.acceleration[x] < 0) {\r\n\r\n                this.speed[x] += this.acceleration[x];\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for (var x in this.rot_speed) {\r\n\r\n            if ( this.rot_speed[x] > 0 || this.rot_speed[x] < 0) {\r\n\r\n                this.rotation[x] += this.rot_speed[x];\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        for (var x in this.rot_accel) {\r\n\r\n\r\n            if (this.rot_accel[x] > 0 || this.rot_accel[x] < 0) {\r\n\r\n                this.rot_speed[x] += this.rot_accel[x];\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function resolves a function nested in an object, from a string-key, and it is applied by Gamestack.js for persistence of data and Sprite() behaviors\r\n     * @function\r\n     * @memberof Sprite\r\n     **********/\r\n\r\n    resolveFunctionFromDoubleKeys(keyString1, keyString2, obj, callback) {\r\n\r\n        callback(typeof obj[keyString1][keyString2] == 'function' ? obj[keyString1][keyString2] : {});\r\n\r\n    }\r\n\r\n    /**\r\n     * This function extends an existing function, and is applied by Gamestack in onInit();\r\n     * @function\r\n     * @memberof Sprite\r\n     **********/\r\n\r\n    extendFunc(fun, extendedFunc) {\r\n\r\n        console.log('extending func');\r\n\r\n        var ef = extendedFunc;\r\n\r\n        var __inst = this;\r\n\r\n        return function () {\r\n\r\n\r\n            ef(__inst);\r\n\r\n            //any new function comes after\r\n\r\n            fun(__inst);\r\n\r\n\r\n        };\r\n\r\n    }\r\n\r\n\r\n    /*****************************\r\n     *  onUpdate(fun)\r\n     * -args: 1 function(sprite){ } //the self-instance/sprite is passed into the function()\r\n     * -overrides and maintains existing code for update(){} function\r\n     ***************************/\r\n\r\n\r\n    /**\r\n     * Extends the update() of this sprite with a new function to be called during update()\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {function} the function to apply to the Sprite:update()\r\n     **********/\r\n\r\n\r\n    onUpdate(fun) {\r\n        fun = fun || function () {\r\n            };\r\n\r\n        let update = this.update;\r\n\r\n        let __inst = this;\r\n\r\n        this.update = function (__inst) {\r\n            update(__inst);\r\n            fun(__inst);\r\n        };\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * <ul>\r\n     *     <li>A rectangular style position</li>\r\n     *      <li>Takes another sprite as argument</li>\r\n     *       <li>Returns basic true || false during runtime</li>\r\n     * </ul>\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {sprite}\r\n     **********/\r\n\r\n\r\n    /**\r\n     * Get the true || false results of a Collision between two Sprites(), based on their position Vectors and Sizes\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Sprite} sprite the alternate Sprite to process collision with\r\n     **********/\r\n\r\n\r\n    collidesRectangular(sprite) {\r\n\r\n        return Gamestack.Collision.spriteRectanglesCollide(this, sprite);\r\n\r\n    }\r\n\r\n\r\n    /*****************************\r\n     *  shoot(sprite)\r\n     *  -fire a shot from the sprite:: as in a firing gun or spaceship\r\n     *  -takes options{} for number of shots anglePerShot etc...\r\n     *  -TODO: complete and test this code\r\n     ***************************/\r\n\r\n    /**\r\n     * Sprite fires a projectile object\r\n     * <ul>\r\n     *     <li>Easy instantiator for bullets and propelled objects in GameStack</li>\r\n     *     <li>*TODO: This function is not-yet implemented in GameStack</li>\r\n     * </ul>\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {options} *numerous args\r\n     **********/\r\n\r\n\r\n    /**\r\n     * fire a projectile-subSprite from the Sprite\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Object} options an object of arguments\r\n     * @param {Animation} animation the animation to fire from the Sprite\r\n     * @param {number} speed the speed of the shot that is projected\r\n     * @param {Vector} position the initial position of the shot: defaults to current Sprite position\r\n     * @param {Vector} size the Vector size of the shot\r\n     * @param {Vector} rot_offset the rotational offset to apply: controls direction of the shot\r\n     **********/\r\n\r\n    shoot(options) {\r\n        //character shoots an animation\r\n\r\n        this.prep_key = 'shoot';\r\n\r\n        let animation = options.bullet || options.animation || new Animation();\r\n\r\n        let speed = options.speed || 1;\r\n\r\n        let position = options.position || new Vector3(this.position);\r\n\r\n        let size = options.size || new Vector3(10, 10, 0);\r\n\r\n        let rot_offset = options.rot_offset || new Vector3(0, 0, 0);\r\n\r\n        if (__gameInstance.isAtPlay) {\r\n\r\n            var bx = position.x, by = position.y, bw = size.x, bh = size.y;\r\n\r\n            var shot = __gameStack.add(new Sprite({\r\n\r\n                active: true,\r\n\r\n                position: position,\r\n\r\n                size: size,\r\n\r\n                image: animation.image,\r\n\r\n                rotation: new Vector3(0, 0, 0),\r\n\r\n                flipX: false\r\n\r\n            }));\r\n\r\n            shot.setAnimation(animation);\r\n\r\n            if (typeof(rot_offset) == 'number') {\r\n                rot_offset = new Vector3(rot_offset, 0, 0);\r\n            }\r\n\r\n            shot.position.x = bx, shot.position.y = by;\r\n            shot.rotation.x = 0 + rot_offset.x;\r\n\r\n            shot.stats = {\r\n                damage: 1\r\n\r\n            };\r\n\r\n            shot.speed.x = Math.cos((shot.rotation.x) * 3.14 / 180) * speed;\r\n\r\n            shot.speed.y = Math.sin((shot.rotation.x) * 3.14 / 180) * speed;\r\n\r\n            return shot;\r\n\r\n        }\r\n\r\n        return new Error(\"game was not in motion: Gamestack.isAtPlay must be true to create a shot.\");\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * create a subsprite of Sprite belonging to the current Sprite\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Object} options an object of arguments\r\n     * @param {Animation} animation the animation to fire from the Sprite\r\n     * @param {number} speed the speed of the shot that is projected\r\n     * @param {Vector} position the initial position of the shot: defaults to current Sprite position\r\n     * @param {Vector} size the Vector size of the shot\r\n     * @param {Vector} offset the positional offset to apply\r\n     **********/\r\n\r\n    subsprite(options) {\r\n\r\n        let animation = options.animation || new Animation();\r\n\r\n        let position = options.position || new Vector3(this.position);\r\n\r\n        let offset = options.offset || new Vector3(0, 0, 0);\r\n\r\n        let size = options.size || this.size;\r\n\r\n        if (__gameInstance.isAtPlay) {\r\n\r\n            var subsprite = __gameStack.add(new Sprite({\r\n\r\n                active: true,\r\n\r\n                position: position,\r\n\r\n                size: size,\r\n\r\n                offset: offset,\r\n\r\n                image: animation.image,\r\n\r\n                rotation: new Vector3(0, 0, 0),\r\n\r\n                flipX: false\r\n\r\n            }));\r\n\r\n            subsprite.setAnimation(animation);\r\n\r\n            return subsprite;\r\n\r\n        }\r\n        else\r\n        {\r\n            alert('No subsprite when not at play');\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * animate Sprite.selected_animation  by one frame\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Animation} animation to use, defaults to Sprite.selected_animation\r\n     **********/\r\n\r\n    animate(animation) {\r\n\r\n        if (__gameInstance.isAtPlay) {\r\n\r\n            if (animation) {\r\n                this.setAnimation(animation)\r\n            }\r\n\r\n            this.selected_animation.animate();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * run a function when the Sprite.selected_animation is complete\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Function} fun the function to call when the animation is complete\r\n     *\r\n     **********/\r\n\r\n    onAnimationComplete(fun) {\r\n        this.selected_animation.onComplete(fun);\r\n\r\n    }\r\n\r\n    /*****************************\r\n     *  accelY\r\n     *  -accelerate on Y-Axis with 'accel' and 'max' (speed) arguments\r\n     *  -example-use: gravitation of sprite || up / down movement\r\n     ***************************/\r\n\r\n    /**\r\n     * accelerate speed on the Y-Axis\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {number} accel the increment of acceleration\r\n     * @param {number} max the maximum for speed\r\n     *\r\n     **********/\r\n\r\n    accelY(accel, max) {\r\n\r\n        accel = Math.abs(accel);\r\n\r\n        if (typeof(max) == 'number') {\r\n            max = {y: max};\r\n\r\n        }\r\n\r\n        this.assertSpeed();\r\n\r\n        let diff = max.y - this.speed.y;\r\n\r\n        if (diff > 0) {\r\n            this.speed.y += Math.abs(diff) >= accel ? accel : diff;\r\n\r\n        }\r\n        ;\r\n\r\n        if (diff < 0) {\r\n            this.speed.y -= Math.abs(diff) >= accel ? accel : diff;\r\n\r\n        }\r\n        ;\r\n\r\n    }\r\n\r\n\r\n    /*****************************\r\n     *  accelX\r\n     *  -accelerate on X-Axis with 'accel' and 'max' (speed) arguments\r\n     *  -example-use: running of sprite || left / right movement\r\n     ***************************/\r\n\r\n\r\n\r\n\r\n    /**\r\n     * accelerate speed on the X-Axis\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {number} accel the increment of acceleration\r\n     * @param {number} max the maximum for speed\r\n     *\r\n     **********/\r\n\r\n\r\n    accelX(accel, max) {\r\n\r\n        accel = Math.abs(accel);\r\n\r\n        if (typeof(max) == 'number') {\r\n            max = {x: max};\r\n\r\n        }\r\n\r\n        this.assertSpeed();\r\n\r\n        let diff = max.x - this.speed.x;\r\n\r\n        if (diff > 0) {\r\n            this.speed.x += Math.abs(diff) >= accel ? accel : diff;\r\n\r\n        }\r\n        ;\r\n\r\n        if (diff < 0) {\r\n            this.speed.x -= Math.abs(diff) >= accel ? accel : diff;\r\n\r\n        }\r\n        ;\r\n\r\n    }\r\n\r\n\r\n    /*****************************\r\n     *  accel\r\n     *  -accelerate any acceleration -key\r\n     ***************************/\r\n\r\n\r\n    /**\r\n     * accelerate toward a max value on any object-property:: intended for self-use\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Object} prop The object to control\r\n     * @param {string} key the property-key for targeted property of prop argument\r\n     *\r\n     * @param {number} accel the increment of acceleration\r\n     *\r\n     * @param {number} max the max value to accelerate towards\r\n     *\r\n     *\r\n     **********/\r\n\r\n    accel(prop, key, accel, max) {\r\n\r\n        accel = Math.abs(accel);\r\n\r\n        if (typeof(max) == 'number') {\r\n            max = {x: max};\r\n\r\n        }\r\n\r\n        let speed = prop[key];\r\n\r\n        // this.assertSpeed();\r\n\r\n        let diff = max.x - prop[key];\r\n\r\n        if (diff > 0) {\r\n            prop[key] += Math.abs(diff) >= accel ? accel : diff;\r\n\r\n        }\r\n        ;\r\n\r\n        if (diff < 0) {\r\n            prop[key] -= Math.abs(diff) >= accel ? accel : diff;\r\n\r\n        }\r\n        ;\r\n\r\n    }\r\n\r\n\r\n    /*****************************\r\n     *  decel\r\n     *  -deceleration -key\r\n     ***************************/\r\n\r\n    /**\r\n     * decelerate toward a max value on any object-property:: intended for self-use\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Object} prop The object to control\r\n     * @param {string} key the property-key for targeted property of prop argument\r\n     *\r\n     * @param {number} decel the increment of deceleration\r\n     *\r\n     * @param {number} max the max value to decelerate towards\r\n     *\r\n     *\r\n     **********/\r\n\r\n    decel(prop, key, rate) {\r\n        if (typeof(rate) == 'object') {\r\n\r\n            rate = rate.rate;\r\n\r\n        }\r\n\r\n        rate = Math.abs(rate);\r\n\r\n        if (Math.abs(prop[key]) <= rate) {\r\n            prop[key] = 0;\r\n        }\r\n\r\n        else if (prop[key] > 0) {\r\n            prop[key] -= rate;\r\n\r\n        }\r\n        else if (prop[key] < 0) {\r\n            prop[key] += rate;\r\n\r\n        }\r\n        else {\r\n\r\n            prop[key] = 0;\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    /*****************************\r\n     *  decelY\r\n     *  -decelerate on the Y axis\r\n     *  -args: 1 float:amt\r\n     ***************************/\r\n\r\n\r\n    /**\r\n     * decelerate speed on the Y-Axis, toward zero\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {number} amt the increment of deceleration, negatives ignored\r\n     *\r\n     **********/\r\n\r\n    decelY(amt) {\r\n\r\n        amt = Math.abs(amt);\r\n\r\n        if (Math.abs(this.speed.y) <= amt) {\r\n            this.speed.y = 0;\r\n\r\n        }\r\n        else if (this.speed.y > amt) {\r\n\r\n            this.speed.y -= amt;\r\n        }\r\n        else if (this.speed.y < amt * -1) {\r\n\r\n            this.speed.y += amt;\r\n        }\r\n\r\n    }\r\n\r\n    /*****************************\r\n     *  decelX\r\n     *  -decelerate on the X axis\r\n     *  -args: 1 float:amt\r\n     ***************************/\r\n\r\n\r\n    /**\r\n     * decelerate speed on the X-Axis, toward zero\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {number} amt the increment of deceleration, negatives ignored\r\n     *\r\n     **********/\r\n\r\n    decelX(amt) {\r\n\r\n        amt = Math.abs(amt);\r\n\r\n\r\n        if (this.speed.x > amt) {\r\n\r\n            this.speed.x -= amt;\r\n        }\r\n        else if (this.speed.x < amt * -1) {\r\n\r\n            this.speed.x += amt;\r\n        }\r\n\r\n        if (Math.abs(this.speed.x) <= amt) {\r\n\r\n            this.speed.x = 0;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    shortest_stop(item, callback) {\r\n        var diff_min_y = item.min ? item.min.y : Math.abs(item.position.y - this.position.y + this.size.y);\r\n\r\n        var diff_min_x = item.min ? item.min.x : Math.abs(item.position.x - this.position.x + this.size.x);\r\n\r\n        var diff_max_y = item.max ? item.max.y : Math.abs(item.position.y + item.size.y - this.position.y);\r\n\r\n        var diff_max_x = item.max ? item.max.x : Math.abs(item.position.x + item.size.x - this.position.y);\r\n\r\n        var dimens = {top: diff_min_y, left: diff_min_x, bottom: diff_max_y, right: diff_max_x};\r\n\r\n        var minkey = \"\", min = 10000000;\r\n\r\n        for (var x in dimens) {\r\n            if (dimens[x] < min) {\r\n                min = dimens[x];\r\n                minkey = x; // a key of top left bottom or right\r\n\r\n            }\r\n        }\r\n\r\n        callback(minkey);\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * get the center of a Sprite\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     *\r\n     * @returns (Vector)\r\n     *\r\n     **********/\r\n\r\n    center() {\r\n\r\n\r\n        return new Vector(this.position.x + this.size.x / 2, this.position.y + this.size.y / 2, 0);\r\n\r\n    }\r\n\r\n    /*************\r\n     * #BE CAREFUL\r\n     * -with this function :: change sensitive / tricky / 4 way collision\r\n     * *************/\r\n\r\n\r\n    /**\r\n     * determine if Sprite overlaps on X axis with another Sprite\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Sprite} item the Sprite to compare with\r\n     * @param {number} padding the 0-1.0 float value of padding to use on self when testing overlap\r\n     * @returns {var} a true || false var\r\n     *\r\n     **********/\r\n\r\n    overlap_x(item, padding) {\r\n        if (!padding) {\r\n            padding = 0;\r\n        }\r\n\r\n        var paddingX = Math.round(padding * this.size.x),\r\n\r\n            paddingY = Math.round(padding * this.size.y), left = this.position.x + paddingX,\r\n            right = this.position.x + this.size.x - paddingX,\r\n\r\n            top = this.position.y + paddingY, bottom = this.position.y + this.size.y - paddingY;\r\n\r\n        return right > item.position.x && left < item.position.x + item.size.x;\r\n\r\n\r\n    }\r\n\r\n    /*************\r\n     * #BE CAREFUL\r\n     * -with this function :: change sensitive / tricky / 4 way collision\r\n     * *************/\r\n\r\n\r\n    /**\r\n     * determine if Sprite overlaps on Y axis with another Sprite\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Sprite} item the Sprite to compare with\r\n     * @param {number} padding the 0-1.0 float value of padding to use on self when testing overlap\r\n     * @returns (true || false}\r\n     *\r\n     **********/\r\n\r\n    overlap_y(item, padding) {\r\n        if (!padding) {\r\n            padding = 0;\r\n        }\r\n\r\n        var paddingX = Math.round(padding * this.size.x),\r\n\r\n            paddingY = Math.round(padding * this.size.y), left = this.position.x + paddingX,\r\n            right = this.position.x + this.size.x - paddingX,\r\n\r\n            top = this.position.y + paddingY, bottom = this.position.y + this.size.y - paddingY;\r\n\r\n        return bottom > item.position.y && top < item.position.y + item.size.y;\r\n\r\n    }\r\n\r\n    /*************\r\n     * #BE CAREFUL\r\n     * -with this function :: change sensitive / tricky / 4 way collision\r\n     * *************/\r\n\r\n\r\n\r\n    collide_stop_x(item)\r\n    {\r\n\r\n        var apart = false;\r\n\r\n            var ct = 10000;\r\n\r\n            while (!apart && ct > 0) {\r\n\r\n                ct--;\r\n\r\n                var diffX = this.center().sub(item.center()).x;\r\n\r\n                var distX = Math.abs(this.size.x / 2 + item.size.x / 2 - Math.round(this.size.x * this.padding.x));\r\n\r\n                if (Math.abs(diffX) < distX) {\r\n\r\n                    this.position.x -= diffX > 0 ? -1 : 1;\r\n\r\n\r\n\r\n                }\r\n                else\r\n                {\r\n\r\n                    apart = true;\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /*************\r\n     * #BE CAREFUL\r\n     * -with this function :: change sensitive / tricky / 4 way collision\r\n     * *************/\r\n\r\n\r\n    /**\r\n     * cause a fourway collision-stop between this and another Sprite :: objects will behave clastically and resist passing through one another\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Sprite} item the Sprite to compare with\r\n     *\r\n     **********/\r\n\r\n    collide_stop(item) {\r\n\r\n        if(this.id == item.id)\r\n        {\r\n            return false;\r\n\r\n        }\r\n\r\n       // this.position = this.position.sub(this.speed);\r\n\r\n        if(this.collidesRectangular(item)) {\r\n\r\n            var diff = this.center().sub(item.center());\r\n\r\n            if(this.overlap_x(item, this.padding.x + 0.1) && Math.abs(diff.x) < Math.abs(diff.y))\r\n           {\r\n\r\n               var apart = false;\r\n\r\n                   var ct = 10000;\r\n\r\n                   while (!apart && ct > 0) {\r\n\r\n                       ct--;\r\n\r\n                       var diffY = this.center().sub(item.center()).y;\r\n\r\n                       var distY = Math.abs(this.size.y / 2 + item.size.y / 2- Math.round(this.size.y * this.padding.y));\r\n\r\n                       if (Math.abs(diffY) < distY) {\r\n\r\n                           this.position.y -= diffY > 0 ? -1 : diffY < 0 ? 1 : 0;\r\n\r\n                           this.position.y = Math.round(this.position.y);\r\n\r\n                       }\r\n\r\n                     else {\r\n\r\n                           if (diffY <= 0){\r\n                               this.__inAir = false;\r\n                           };\r\n\r\n\r\n                          return apart = true;\r\n\r\n\r\n                       }\r\n\r\n\r\n               }\r\n\r\n\r\n\r\n           }\r\n\r\n\r\n            if(this.overlap_y(item, this.padding.y ) && Math.abs(diff.y) < Math.abs(diff.x)) {\r\n\r\n                this.collide_stop_x(item);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    collide_stop_top(item)\r\n    {\r\n\r\n\r\n        if(this.id == item.id)\r\n        {\r\n            return false;\r\n\r\n        }\r\n\r\n\r\n            if(this.overlap_x(item, this.padding.x + 0.1))\r\n            {\r\n\r\n                console.log('OVERLAP_X');\r\n\r\n                var paddingY = this.padding.y * this.size.y;\r\n\r\n                if(this.position.y + this.size.y - paddingY <= item.position.y)\r\n                {\r\n\r\n                    this.groundMaxY = item.position.y - this.size.y + paddingY;\r\n\r\n                }\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Restore a sprite from saved .json data\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     *\r\n     * @returns (Sprite)\r\n     **********/\r\n\r\n    restoreFrom(data) {\r\n        data.image = new GameImage(data.src || data.image.src);\r\n\r\n        return new Sprite(data);\r\n\r\n    }\r\n\r\n\r\n    /*****************************\r\n     *  fromFile(file_path)\r\n     *  -TODO : complete this function based on code to load Sprite() from file, located in the spritemaker.html file\r\n     *  -TODO: test this function\r\n     ***************************/\r\n\r\n    fromFile(file_path) {\r\n\r\n        if (typeof file_path == 'string') {\r\n\r\n            var __inst = this;\r\n\r\n            $.getJSON(file_path, function (data) {\r\n\r\n                __inst = new Sprite(data);\r\n\r\n            });\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n;\r\n\r\n/****************\r\n * TODO : Complete SpritePresetsOptions::\r\n *  Use these as options for Sprite Control, etc...\r\n ****************/\r\n\r\nGamestack.Sprite = Sprite;\r\n\r\nlet SpriteInitializersOptions = {\r\n\r\n    Clastics:{\r\n\r\n        top_collideable:function(sprite)\r\n        {\r\n\r\n            for(var x in Gamestack.__gameWindow.forces)\r\n            {\r\n                var force = Gamestack.__gameWindow.forces[x];\r\n\r\n                force.topClastics.push(sprite);\r\n\r\n            }\r\n\r\n\r\n            sprite.onUpdate(function(){\r\n\r\n\r\n            });\r\n\r\n        },\r\n\r\n        fourside_collideable:function(sprite)\r\n        {\r\n\r\n            for(var x in Gamestack.__gameWindow.forces)\r\n            {\r\n                var force = Gamestack.__gameWindow.forces[x];\r\n\r\n                force.clasticObjects.push(sprite);\r\n\r\n            }\r\n\r\n            sprite.onUpdate(function(){\r\n\r\n\r\n            });\r\n\r\n\r\n        }\r\n    },\r\n\r\n    MainGravity:{\r\n\r\n        very_light:function(sprite)\r\n        {\r\n            //Add a gravity to the game\r\n\r\n            var gravity = Gamestack.add(new Force({\r\n                name:\"very_light_grav\",\r\n                accel:0.05,\r\n                max:new Vector3(0, 3.5, 0),\r\n                subjects:[sprite], //sprite is the subject of this Force, sprite is pulled by this force\r\n                clasticObjects:[] //an empty array of collideable objects\r\n\r\n            }));\r\n\r\n            sprite.onUpdate(function(){\r\n\r\n\r\n            });\r\n\r\n        },\r\n\r\n        light:function(sprite)\r\n        {\r\n\r\n            var gravity = Gamestack.add(new Force({\r\n                name:\"light_grav\",\r\n                accel:0.1,\r\n                max:new Vector3(0, 4.5, 0),\r\n                subjects:[sprite], //sprite is the subject of this Force, sprite is pulled by this force\r\n                clasticObjects:[] //an empty array of collideable objects\r\n\r\n            }));\r\n\r\n\r\n            sprite.onUpdate(function(){\r\n\r\n\r\n            });\r\n\r\n        },\r\n\r\n        medium:function(sprite)\r\n        {\r\n\r\n            var gravity = Gamestack.add(new Force({\r\n                name:\"medium_grav\",\r\n                accel:0.2,\r\n                max:new Vector3(0, 7.5, 0),\r\n                subjects:[sprite], //sprite is the subject of this Force, sprite is pulled by this force\r\n                clasticObjects:[] //an empty array of collideable objects\r\n\r\n            }));\r\n\r\n\r\n            sprite.onUpdate(function(){\r\n\r\n\r\n            });\r\n\r\n        },\r\n\r\n\r\n        strong:function(sprite)\r\n        {\r\n\r\n            var gravity = Gamestack.add(new Force({\r\n                name:\"strong_grav\",\r\n                accel:0.4,\r\n                max:new Vector3(0, 10.5, 0),\r\n                subjects:[sprite], //sprite is the subject of this Force, sprite is pulled by this force\r\n                clasticObjects:[] //an empty array of collideable objects\r\n\r\n            }));\r\n\r\n            sprite.onUpdate(function(){\r\n\r\n\r\n            });\r\n\r\n        },\r\n\r\n        very_strong:function(sprite)\r\n        {\r\n\r\n            var gravity = Gamestack.add(new Force({\r\n                name:\"strong_grav\",\r\n                accel:0.5,\r\n                max:new Vector3(0, 12.5, 0),\r\n                subjects:[sprite], //sprite is the subject of this Force, sprite is pulled by this force\r\n                clasticObjects:[] //an empty array of collideable objects\r\n\r\n            }));\r\n\r\n            sprite.onUpdate(function(){\r\n\r\n\r\n            });\r\n\r\n        },\r\n\r\n    },\r\n\r\n\r\n    ControllerStickMotion: {\r\n\r\n        player_move_x: function (sprite) {\r\n\r\n            alert('applying initializer');\r\n\r\n            console.log('side_scroll_player_run:init-ing');\r\n\r\n            let __lib = Gamestack || Quick2d;\r\n\r\n            Gamestack.GamepadAdapter.on('stick_left', 0, function (x, y) {\r\n\r\n                console.log('stick-x:' + x);\r\n\r\n                if (Math.abs(x) < 0.2) {\r\n                    return 0;\r\n                }\r\n\r\n                var accel = 0.2; //todo : options for accel\r\n                var max = 7;\r\n\r\n                sprite.accelX(accel, x * max);\r\n\r\n                if (x < -0.2) {\r\n                    sprite.flipX = true;\r\n\r\n                }\r\n                else if (x > 0.2) {\r\n                    sprite.flipX = false;\r\n\r\n                }\r\n\r\n            });\r\n\r\n            sprite.onUpdate(function (spr) {\r\n\r\n                spr.decelX(0.1);\r\n\r\n                if (!spr.__falling) {\r\n                    spr.decelY(0.2)\r\n                }\r\n                ;\r\n\r\n            });\r\n\r\n\r\n        },\r\n\r\n        player_move_xy: function (sprite) {\r\n\r\n            alert('applying initializer');\r\n\r\n            console.log('side_scroll_player_run:init-ing');\r\n\r\n            let __lib = Gamestack || Quick2d;\r\n\r\n            Gamestack.GamepadAdapter.on('stick_left', 0, function (x, y) {\r\n\r\n                console.log('stick-x:' + x);\r\n\r\n                if (Math.abs(x) < 0.2) {\r\n                    x = 0;\r\n                }\r\n\r\n                if (Math.abs(y) < 0.2) {\r\n                    y = 0;\r\n                }\r\n\r\n                var accel = 0.2; //todo : options for accel\r\n                var max = 7;\r\n\r\n                sprite.accelX(accel, x * max);\r\n\r\n                sprite.accelY(accel, y * max);\r\n\r\n                if (x < -0.2) {\r\n                    sprite.flipX = true;\r\n\r\n                }\r\n                else if (x > 0.2) {\r\n                    sprite.flipX = false;\r\n\r\n                }\r\n\r\n            });\r\n\r\n            sprite.onUpdate(function (spr) {\r\n\r\n                sprite.decel(sprite.speed, 'x', 0.1);\r\n\r\n                sprite.decel(sprite.speed, 'y', 0.1);\r\n\r\n            });\r\n\r\n\r\n        },\r\n\r\n        player_rotate_x: function (sprite) {\r\n\r\n            let __lib = Gamestack || Quick2d;\r\n\r\n            Gamestack.GamepadAdapter.on('stick_left', 0, function (x, y) {\r\n\r\n                console.log('stick-x:' + x);\r\n\r\n                if (Math.abs(x) < 0.2) {\r\n                    return 0;\r\n                }\r\n\r\n                var accel = 0.25; //todo : options for accel\r\n                var max = 7;\r\n\r\n                sprite.accel(sprite.rot_speed, 'x', accel, x * max);\r\n\r\n                if (x < -0.2) {\r\n                    sprite.flipX = true;\r\n\r\n                }\r\n                else if (x > 0.2) {\r\n                    sprite.flipX = false;\r\n\r\n                }\r\n\r\n            });\r\n\r\n            sprite.onUpdate(function (spr) {\r\n\r\n                sprite.decel(sprite.rot_speed, 'x', 0.1);\r\n\r\n                if (!spr.__falling) {\r\n                    spr.decelY(0.2)\r\n                }\r\n                ;\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n};\r\n\r\n\r\nGamestack.options = Gamestack.options || {};\r\n\r\nGamestack.options.SpriteInitializers = SpriteInitializersOptions;;\r\n/**\r\n * Takes arguments of x, y, and (optionally) z, instantiates Vector object\r\n\r\n <ul>\r\n <li>Optional: use a Vector as the 'x' argument, and instantiate new distinct Vector from the argument</li>\r\n </ul>\r\n\r\n * @param   {number} x the x coordinate\r\n * @param   {number} y the y coordinate\r\n * @param   {number} z the z coordinate\r\n * @returns {Vector} a Vector object\r\n */\r\n\r\n\r\nclass Vector {\r\n    constructor(x, y, z, r) {\r\n\r\n        if(typeof(x) == 'object' && x.hasOwnProperty('x') && x.hasOwnProperty('y')) //optionally pass vector3\r\n        {\r\n            this.x = x.x;\r\n            this.y = x.y;\r\n            this.z = x.z || 0;\r\n\r\n            if(this.z == null)\r\n            {\r\n                this.z = 0;\r\n            }\r\n\r\n            return this;\r\n        }\r\n\r\n        if(z == null){z = 0;}\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.r = r;\r\n\r\n    }\r\n\r\n\r\n    sub(v)\r\n    {\r\n        if(typeof(v) == 'number')\r\n        {\r\n            v = {x:v, y:v, z:v};\r\n        }\r\n\r\n        return new Vector(this.x - v.x, this.y - v.y, this.z - v.z);\r\n\r\n    }\r\n\r\n    add(v)\r\n    {\r\n        if(typeof(v) == 'number')\r\n        {\r\n            v = {x:v, y:v, z:v};\r\n        }\r\n\r\n        return new Vector(this.x + v.x, this.y + v.y, this.z + v.z);\r\n\r\n    }\r\n\r\n    mult(v)\r\n    {\r\n        if(typeof(v) == 'number')\r\n        {\r\n            v = {x:v, y:v, z:v};\r\n        }\r\n\r\n        return new Vector(this.x * v.x, this.y * v.y, this.z * v.z);\r\n\r\n    }\r\n    div(v)\r\n    {\r\n        if(typeof(v) == 'number')\r\n        {\r\n            v = {x:v, y:v, z:v};\r\n        }\r\n\r\n        return new Vector(this.x / v.x, this.y / v.y, this.z / v.z);\r\n    }\r\n\r\n    round()\r\n    {\r\n        return new Vector(Math.round(this.x), Math.round(this.y), Math.round(this.z));\r\n\r\n    }\r\n    floor()\r\n    {\r\n        return new Vector(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z));\r\n\r\n    }\r\n    ceil()\r\n    {\r\n        return new Vector(Math.ceil(this.x), Math.ceil(this.y), Math.ceil(this.z));\r\n\r\n    }\r\n\r\n    equals(v)\r\n    {\r\n\r\n        return this.x == v.x && this.y == v.y && this.z == v.z;\r\n    }\r\n\r\n    trig_distance_xy(v)\r\n    {\r\n\r\n        var dist = this.sub(v);\r\n\r\n        return  Math.sqrt( dist.x * dist.x + dist.y * dist.y );\r\n\r\n    }\r\n\r\n    diff()\r\n    {\r\n        //TODO:this function\r\n\r\n\r\n    }\r\n\r\n    abs_diff()\r\n    {\r\n        //TODO:this function\r\n\r\n    }\r\n\r\n    is_between(v1, v2)\r\n    {\r\n       //TODO : overlap vectors return boolean\r\n\r\n        return this.x >= v1.x && this.x <= v2.x &&\r\n            this.y >= v1.y && this.y <= v2.y &&\r\n            this.z >= v1.z && this.z <= v2.z;\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nlet Vector3 = Vector, Pos = Vector, Size = Vector, Position = Vector, Vector2 = Vector, Rotation = Vector;\r\n\r\n\r\nGamestack.Vector = Vector;\r\n\r\n\r\n//The above are a list of synonymous expressions for Vector. All of these do the same thing in this library (store x,y,z values)\r\n;/**\r\n * AsyncSteps : Calls an eventual function of steps\r\n    -use functional args for error(), done(), promise()\r\n * @returns {Promise) a Promise object\r\n */\r\n\r\nclass AsyncSteps {\r\n    constructor(mainObject, options) {\r\n\r\n        const error = options.error || options.err || options.onerror;\r\n        const ondone = options.done || options.ondone;\r\n\r\n        const chunk = options.chunk || options.onchunk;\r\n\r\n        const promise = new Promise((done, error) => {\r\n\r\n            mainObject.onerror = () => error(mainObject.__errorMessage);\r\n\r\n            mainObject.onchunk = () => chunk(mainObject.iterables);\r\n\r\n            mainObject.ondone = () => ondone(mainObject.iterables);\r\n\r\n            });\r\n\r\n        this.__promise = promise;\r\n\r\n    }\r\n}"]}