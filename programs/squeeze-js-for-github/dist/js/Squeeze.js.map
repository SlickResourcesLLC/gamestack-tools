{"version":3,"sources":["../../ecma/Squeeze/concat/Squeeze.js"],"names":["Squeeze","EffectSequence","Animation","args","_anime","defaultArgs","name","description","frames","type","delay","frameSize","Vector3","frameBounds","VectorFrameBounds","frameOffset","flipX","duration","size","x","hasOwnProperty","image","GameImage","__gameStack","getArg","src","domElement","extras","apply2DFrames","parent","cix","selected_frame","timer","seesaw_mode","__frametype","framePos","y","key","fallback","fcount","quitLoop","min","max","push","termPoint","console","log","frames_reversed","slice","reverse","pop","concat","Math","round","length","resetFrames","update","engage","complete","__inst","call","tween","TWEEN","Tween","easing","curve","Easing","Linear","None","to","onUpdate","onComplete","isComplete","start","fun","Gamestack","animation","effects","JSManipulate","selected_effect_key","setEffect","selected_effect","triangleripple","effects_list","effect_guis","numberSteps","counter","canvas","document","createElement","testCtx","getContext","values","initValues","minFloat","portion","startValues","valueRanges","maxFloat","endValues","effect","JSON","parse","jstr","toLowerCase","sourceImageData","dataListCallback","image_data_list","img","data","filter","canvasCallback","canvasList","image_ix","copyImageData","ctx","dst","createImageData","width","height","set","c","ct","style","background","restore","save","putImageData","foldLeft","left","getImageData","translate","scale","foldTop","top","stop","animate","requestAnimationFrame","sprite","timer_diff","frameIndex","source_image","position","selected_animation","tween2","Rectangle","VectorBounds","z","Curves","linearNone","t","easeInQuadratic","easeOutQuadratic","easeInOutQuadratic","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuartic","easeOutQuartic","easeInOutQuartic","easeInQuintic","easeOutQuintic","easeInOutQuintic","Line","curve_string","get_curve_from_string","motion_curve","points","Vector","is_highlighted","offset","pointDist","rotation","iterations","growth","curve_options","n","p","num","minPointDist","get_curve_string","d","str","replace","curveCall","existing_canvas","id","setAttribute","context","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","position_old","test_graph_size","get_line_segment","current_point","target","add","curveMethod","ptrack","dist","sub","pct","trig_distance_xy","GeoMath","rotatePointsXY","yTrack","mult","origin","t_points","next_segment","t_len","point","point_highlighter","sqrt","Vector2","Canvas","draw","angle","theta","PI","cos","sin","Sprite","active","gravity","__initializers","_spr","each","ix","item","animations","motions","projectiles","create_id","sounds","collision_bounds","speed","acceleration","rot_speed","rot_accel","padding","GameStack","Sound","Motion","Projectile","onInit","onload","setAnimation","indexOf","keys","split","error","f","options","SpriteInitializers","f_init","init","info","framesize","__mapSize","Quick2d","pos","mx","my","currentSize","wth","htw","anime","w","h","WIDTH","HEIGHT","camera","__gameWindow","onScreen","keyString1","keyString2","obj","callback","extendedFunc","ef","Collision","spriteRectanglesCollide","prep_key","bullet","rot_offset","__gameInstance","isAtPlay","bx","by","bw","bh","shot","stats","damage","Error","subsprite","alert","accel","abs","assertSpeed","diff","prop","rate","amt","diff_min_y","diff_min_x","diff_max_y","diff_max_x","dimens","bottom","right","minkey","paddingX","paddingY","apart","diffX","center","distX","collidesRectangular","overlap_x","diffY","distY","__inAir","overlap_y","collide_stop_x","groundMaxY","file_path","$","getJSON","SpriteInitializersOptions","Clastics","top_collideable","forces","force","topClastics","fourside_collideable","clasticObjects","MainGravity","very_light","Force","subjects","light","medium","strong","very_strong","ControllerStickMotion","player_move_x","__lib","GamepadAdapter","on","accelX","spr","decelX","__falling","decelY","player_move_xy","accelY","decel","player_rotate_x","r","v","floor","ceil","v1","v2","Pos","Size","Position","Rotation"],"mappings":"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","file":"Squeeze.js","sourcesContent":["\r\n/**@author\r\nJordan Edward Blake\r\n * */\r\n\r\n\r\nfunction Squeeze()\r\n{\r\n    this.EffectSequence = EffectSequence;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n;/**\r\n * Takes an object of arguments and returns Animation() object.\r\n * @param   {Object} args object of arguments\r\n * @param   {string} args.name optional\r\n * @param   {string} args.description optional\r\n * @param   {string} args.type optional\r\n * @param   {Vector} args.size of the Animation object, has x and y properties\r\n * @param   {Vector} args.frameSize the size of frames in Animation, having x and y properties\r\n * @param   {VectorFrameBounds} args.frameBounds the bounds of the Animation having min, max, and termPoint properties\r\n * @param   {number} args.delay optional, the seconds to delay before running animation when started by the start() function\r\n\r\n * @param   {number} args.duration how many milliseconds the animation should take to complete\r\n *\r\n * @returns {Animation} an Animation object\r\n */\r\n\r\nclass Animation {\r\n    constructor(args = {}) {\r\n\r\n        args = args || {};\r\n\r\n        var _anime = this;\r\n\r\n        this.defaultArgs = {\r\n\r\n            name:\"my-animation\",\r\n\r\n            description:\"my-description\",\r\n\r\n            frames:[],\r\n\r\n            type:\"none\",\r\n\r\n            delay:0,\r\n\r\n            frameSize:new Vector3(44, 44, 0),\r\n\r\n            frameBounds:new VectorFrameBounds(new Vector3(0, 0, 0), new Vector3(0, 0, 0), new Vector3(0, 0, 0)),\r\n\r\n            frameOffset:new Vector3(0, 0, 0),\r\n\r\n            flipX:false,\r\n\r\n            duration:1000,\r\n\r\n            size:new Vector3(20, 20, 20)\r\n        };\r\n\r\n        for(var x in this.defaultArgs)\r\n        {\r\n            if(!args.hasOwnProperty(x))\r\n            {\r\n                args[x] = this.defaultArgs[x]\r\n\r\n            }\r\n\r\n        };\r\n\r\n        for(var x in this.args)\r\n        {\r\n           this[x] = args[x];\r\n\r\n        }\r\n\r\n\r\n        this.name = args.name || \"__\";\r\n\r\n        this.description = args.description || \"__\";\r\n\r\n\r\n        this.image = new GameImage(__gameStack.getArg(args, 'src', __gameStack.getArg(args, 'image', false)));\r\n\r\n        this.src = this.image.domElement.src;\r\n\r\n        this.domElement = this.image.domElement;\r\n\r\n        this.frameSize = this.getArg(args, 'frameSize', new Vector3(44, 44, 0));\r\n\r\n        this.frameBounds = this.getArg(args, 'frameBounds', new VectorFrameBounds(new Vector3(0, 0, 0), new Vector3(0, 0, 0), new Vector3(0, 0, 0)));\r\n\r\n        this.frameOffset = this.getArg(args, 'frameOffset', new Vector3(0, 0, 0));\r\n\r\n        this.extras = this.getArg(args, 'extras', false);\r\n\r\n      if(typeof(args) == 'object' && args.frameBounds && args.frameSize){  this.apply2DFrames(args.parent || {}) };\r\n\r\n        this.flipX = this.getArg(args, 'flipX', false);\r\n\r\n        this.cix = 0;\r\n\r\n        this.selected_frame = this.frames[0];\r\n\r\n        this.timer = 0;\r\n\r\n        this.duration = args.duration || 2000;\r\n\r\n        this.seesaw_mode = args.seesaw_mode || false;\r\n\r\n\r\n    }\r\n\r\n    singleFrame(frameSize, size)\r\n    {\r\n\r\n        this.__frametype = 'single';\r\n\r\n        this.frameSize = frameSize;\r\n\r\n        this.size = size || this.frameSize;\r\n\r\n        this.selected_frame = {\r\n            image: this.image,\r\n            frameSize: this.frameSize,\r\n            framePos: {x: 0, y: 0}\r\n        };\r\n\r\n        this.frames[0] = this.selected_frame;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    getArg(args, key, fallback) {\r\n\r\n        if (args.hasOwnProperty(key)) {\r\n\r\n            return args[key];\r\n\r\n        }\r\n        else {\r\n            return fallback;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    apply2DFrames() {\r\n\r\n        this.frames = [];\r\n\r\n        var fcount = 0;\r\n\r\n        var quitLoop = false;\r\n\r\n        for (let y = this.frameBounds.min.y; y <= this.frameBounds.max.y; y++) {\r\n\r\n            for (let x = this.frameBounds.min.x; x <= this.frameBounds.max.x; x++) {\r\n\r\n                let framePos = {x: x * this.frameSize.x + this.frameOffset.x, y: y * this.frameSize.y + this.frameOffset.y};\r\n\r\n                this.frames.push({image: this.image, frameSize: this.frameSize, framePos: framePos});\r\n\r\n                if( x >= this.frameBounds.termPoint.x && y >= this.frameBounds.termPoint.y)\r\n                {\r\n\r\n                    quitLoop = true;\r\n\r\n                    break;\r\n                }\r\n\r\n                fcount += 1;\r\n\r\n                if(quitLoop)\r\n                    break;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.frames[0] = !this.frames[0] ? {\r\n                image: this.image,\r\n                frameSize: this.frameSize,\r\n                framePos: {x: this.frameBounds.min.x, y: this.frameBounds.min.y}\r\n            } : this.frames[0];\r\n\r\n\r\n        if(this.seesaw_mode)\r\n        {\r\n            console.log('ANIMATION: applying seesaw');\r\n\r\n            var frames_reversed = this.frames.slice().reverse();\r\n\r\n            this.frames.pop();\r\n\r\n            this.frames = this.frames.concat(frames_reversed);\r\n\r\n        }\r\n\r\n       // this.selected_frame = this.frames[this.cix % this.frames.length] || this.frames[0];\r\n\r\n    }\r\n\r\n    resetFrames() //special reset function:: frames are re-rendered each reset()\r\n    {\r\n\r\n        this.apply2DFrames();\r\n\r\n    }\r\n\r\n    update() {\r\n\r\n        this.selected_frame = this.frames[Math.round(this.cix) % this.frames.length];\r\n\r\n\r\n    }\r\n\r\n\r\n    reset()\r\n{\r\n\r\n    this.resetFrames();\r\n\r\n    this.cix = 0;\r\n\r\n}\r\n\r\ncontinuous(duration)\r\n{\r\n\r\n    if(this.__frametype == 'single')\r\n    {\r\n        return 0;\r\n\r\n    }\r\n\r\n  this.apply2DFrames();\r\n\r\n    //update once:\r\n    this.update();\r\n\r\n\r\n    if(this.cix == 0)\r\n  {\r\n\r\n      this.engage();\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nengage(duration, complete)\r\n{\r\n\r\n    if(this.__frametype == 'single')\r\n    {\r\n        return 0;\r\n\r\n    }\r\n\r\n\r\n    let __inst = this;\r\n\r\n    this.complete = complete || this.complete || function(){  };\r\n\r\n    var duration = duration || typeof(this.duration) == 'number' ? this.duration : this.frames.length * 20;\r\n\r\n    if(this.cix == 0 && this.extras)\r\n    {\r\n        this.extras.call(); //fire any extras attached\r\n\r\n    }\r\n\r\n    //we have a target\r\n  this.tween = new TWEEN.Tween(this)\r\n        .easing(__inst.curve || TWEEN.Easing.Linear.None)\r\n\r\n        .to({cix:__inst.frames.length - 1}, duration)\r\n        .onUpdate(function() {\r\n            //console.log(objects[0].position.x,objects[0].position.y);\r\n\r\n         //   __inst.cix = Math.ceil(__inst.cix);\r\n\r\n        __inst.update();\r\n\r\n        })\r\n        .onComplete(function() {\r\n            //console.log(objects[0].position.x, objects[0].position.y);\r\n\r\n            if(__inst.complete)\r\n            {\r\n\r\n                __inst.complete();\r\n\r\n            }\r\n\r\n            __inst.cix = 0;\r\n\r\n            __inst.isComplete = true;\r\n\r\n        });\r\n\r\n\r\n  this.tween.start();\r\n\r\n\r\n}\r\n\r\nonComplete(fun)\r\n{\r\n    this.complete = fun;\r\n\r\n}\r\n\r\n    animate() {\r\n\r\n        this.apply2DFrames();\r\n\r\n        this.timer += 1;\r\n\r\n        if(this.delay == 0 || this.timer % this.delay == 0) {\r\n\r\n                if(this.cix == 0 && this.extras)\r\n                {\r\n                    this.extras.call(); //fire any extras attached\r\n\r\n                }\r\n\r\n                if(this.cix >= this.frames.length - 1 && typeof(this.complete) == 'function')\r\n                {\r\n                    this.complete(this);\r\n\r\n                }\r\n\r\n                this.cix = this.cix >= this.frames.length - 1 ? this.frameBounds.min.x : this.cix + 1;\r\n\r\n                this.update();\r\n\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nGamestack.Animation = Animation;;/*\r\n * Canvas\r\n *    draw animations, textures to the screen\r\n * */\r\n\r\nclass EffectSequence\r\n{\r\n    constructor(args = {})\r\n    {\r\n        console.log('Effect Sequence');\r\n\r\n        this.animation = args.animation || false;\r\n\r\n        this.effects = Gamestack.JSManipulate;\r\n\r\n        this.selected_effect_key = args.selected_effect_key || \"sawtoothripple\";\r\n\r\n        this.setEffect(args.selected_effect_key || args.selected_effect || this.effects.triangleripple);\r\n\r\n\r\n        this.effects_list = [];\r\n\r\n        this.effects_list[0] = this.selected_effect;\r\n\r\n        this.effect_guis = [];\r\n\r\n        this.numberSteps = 10;\r\n\r\n        this.curve = args.curve || TWEEN.Easing.Linear.None;\r\n\r\n        this.counter = 0;\r\n\r\n         this.duration = 3000;\r\n\r\n        this.seesaw_mode = true; //loop effects back to original state\r\n\r\n        this.canvas = document.createElement('canvas');\r\n\r\n        this.testCtx = this.canvas.getContext('2d');\r\n\r\n        this.values = {};\r\n\r\n        this.initValues(args);\r\n\r\n        this.minFloat = function(portion)\r\n        {\r\n            for(var x in this.startValues)\r\n            {\r\n\r\n                this.startValues[x] = this.valueRanges[x].max * portion;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.maxFloat = function(portion)\r\n        {\r\n            for(var x in this.endValues)\r\n            {\r\n\r\n                this.endValues[x] = this.valueRanges[x].max * portion;\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setEffect(effect)\r\n    {\r\n\r\n        for(var x in this.effects)\r\n        {\r\n            if(x==effect)\r\n            {\r\n\r\n                this.selected_effect = this.effects[x];\r\n\r\n            }\r\n            else if(effect == this.effects[x])\r\n            {\r\n\r\n                this.selected_effect_key = x;\r\n\r\n                this.selected_effect = effect;\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    initValues(args)\r\n    {\r\n        this.startValues = args.startValues || {};\r\n\r\n        this.endValues = args.endValues || {};\r\n\r\n        for(var x in this.selected_effect.valueRanges)\r\n        {\r\n\r\n            this.startValues[x] = this.selected_effect.valueRanges[x].min;\r\n\r\n            this.endValues[x] = this.selected_effect.valueRanges[x].max;\r\n\r\n        }\r\n\r\n        this.values =  JSON.parse(jstr(this.startValues));\r\n\r\n        this.valueRanges = this.selected_effect.valueRanges;\r\n\r\n\r\n    }\r\n\r\n    Effect(key)\r\n    {\r\n\r\n        if(typeof(key) == 'object')\r\n        {\r\n            this.selected_effect = key;\r\n\r\n        }\r\n        else if (typeof(key) == 'string')\r\n        {\r\n\r\n            for(var x in this.effects)\r\n            {\r\n\r\n                if(x.toLowerCase() == key.toLowerCase())\r\n                {\r\n                    this.selected_effect = this.effects[key];\r\n\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.initValues();\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    get_image_data_array(sourceImageData, dataListCallback)\r\n    {\r\n\r\n        __inst.image_data_list = [];\r\n\r\n            if (sourceImageData && this.selected_effect.hasOwnProperty('filter')) {\r\n\r\n                this.values = JSON.parse(jstr(this.startValues));\r\n\r\n                var __inst = this;\r\n\r\n                var tween =  new TWEEN.Tween(this.values).to(this.endValues, this.duration).easing(this.curve).onUpdate(function () {\r\n\r\n                    __inst.counter += 1;\r\n\r\n                    var img = {data:__inst.image_data_list.data.slice(0)} ;\r\n\r\n                    __inst.selected_effect.filter(img, __inst.values);\r\n\r\n\r\n\r\n                    __inst.image_data_list.push(img);\r\n\r\n\r\n                    console.log('tween update');\r\n\r\n\r\n\r\n                }).onComplete(function(){  __inst.counter = 0;\r\n\r\n\r\n                    __inst.image_data_list = __inst.seesaw_mode ? __inst.image_data_list.concat(__inst.image_data_list.slice().reverse()): __inst.image_data_list;\r\n\r\n\r\n                if(dataListCallback){\r\n\r\n                    dataListCallback(image_data_list); }\r\n\r\n\r\n\r\n                }).start();\r\n\r\n            }\r\n\r\n        }\r\n\r\n     get_canvas_array(sourceImageData, canvasCallback) {\r\n\r\n    this.canvasList = [];\r\n\r\n    if (sourceImageData && this.selected_effect.hasOwnProperty('filter')) {\r\n\r\n        var timer = 0;\r\n\r\n        var __inst = this;\r\n\r\n        this.image_ix = 0;\r\n\r\n\r\n        var copyImageData = function copyImageData(ctx, src) {\r\n            var dst = ctx.createImageData(src.width, src.height);\r\n            dst.data.set(src.data);\r\n            return dst;\r\n        };\r\n\r\n        if(!this.complete) {\r\n\r\n            this.values = JSON.parse(jstr(this.startValues));\r\n\r\n           __inst.tween = new TWEEN.Tween(this.values).to(this.endValues, this.duration).easing(this.curve).onUpdate(function () {\r\n\r\n                var c = document.createElement('CANVAS'), ct = c.getContext('2d');\r\n\r\n                c.width = sourceImageData.width;\r\n\r\n                c.height = sourceImageData.height;\r\n\r\n                c.style.background = \"blue\";\r\n\r\n                ct.restore();\r\n\r\n                ct.save();\r\n\r\n                var img = copyImageData(ct, sourceImageData);\r\n\r\n                __inst.selected_effect.filter(img, __inst.values);\r\n\r\n                ct.putImageData(img, 0, 0);\r\n\r\n                if(__inst.foldLeft)\r\n                {\r\n                    var left = ct.getImageData(0, 0, c.width / 2, c.height);\r\n\r\n                    ct.translate(c.width / 2, 0);\r\n\r\n                    ct.scale(-1, 1);\r\n\r\n                    ct.putImageData(left, 0, 0);\r\n\r\n                }\r\n\r\n               if(__inst.foldTop)\r\n               {\r\n                   var top = ct.getImageData(0, 0, c.width, c.height / 2);\r\n\r\n                   ct.translate(0, c.height / 2);\r\n\r\n                   ct.scale(1, -1);\r\n\r\n                   ct.putImageData(top, 0, 0);\r\n\r\n               }\r\n\r\n\r\n\r\n               __inst.canvasList.push(c);\r\n\r\n                console.log('tween update');\r\n\r\n\r\n\r\n\r\n            }).onComplete(function () {\r\n\r\n                console.log('complete');\r\n\r\n               if(!__inst.complete)\r\n                {\r\n\r\n                __inst.complete = true;\r\n\r\n\r\n                    __inst.canvasList = __inst.seesaw_mode ? __inst.canvasList.concat(__inst.canvasList.slice().reverse()): __inst.canvasList;\r\n\r\n                    if(canvasCallback){\r\n\r\n\r\n\r\n                        canvasCallback(__inst.canvasList) };\r\n\r\n\r\n                    __inst.tween.stop();\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n            }).start();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    var animate = function()\r\n    {\r\n        if(!__inst.complete) {\r\n\r\n            TWEEN.update();\r\n\r\n            requestAnimationFrame(animate);\r\n\r\n        }\r\n\r\n    }\r\n\r\n        animate();\r\n\r\n}\r\n\r\n    apply(sprite, canvas)\r\n    {\r\n\r\n        this.sprite = sprite;\r\n\r\n        this.canvas = canvas;\r\n\r\n        if(this.counter == 0) {\r\n\r\n            if (canvas && this.selected_effect && this.selected_effect.hasOwnProperty('filter')) {\r\n\r\n                this.timer_diff = 0;\r\n\r\n                var frameIndex = 0;\r\n\r\n                var ctx = canvas.getContext('2d');\r\n\r\n                this.source_image = this.source_image || false;\r\n\r\n\r\n                function copyImageData(ctx, src) {\r\n                    var dst = ctx.createImageData(src.width, src.height);\r\n                    dst.data.set(src.data);\r\n                    return dst;\r\n                }\r\n\r\n                this.values = JSON.parse(jstr(this.startValues));\r\n\r\n                var __inst = this;\r\n\r\n\r\n                __inst.image_data_list = [];\r\n\r\n              var tween =  new TWEEN.Tween(this.values).to(this.endValues, this.duration).easing(this.curve).onUpdate(function () {\r\n\r\n                    if (!__inst.source_image) {\r\n\r\n                        __inst.source_image = ctx.getImageData(sprite.position.x, sprite.position.y, sprite.size.x, sprite.size.y);\r\n\r\n                        console.log('image is set');\r\n\r\n                    }\r\n\r\n                    sprite.selected_animation.selected_frame.image.data = false;\r\n\r\n                    var img = copyImageData(ctx, __inst.source_image);\r\n\r\n                  //  console.log(jstr(__inst.values));\r\n\r\n\r\n\r\n                    __inst.selected_effect.filter(img, __inst.values);\r\n\r\n\r\n                  __inst.image_data_list.push(img);\r\n\r\n                  sprite.selected_animation.selected_frame.image.data = img;\r\n\r\n\r\n                  __inst.counter += 1;\r\n\r\n\r\n\r\n                }).onComplete(function(){\r\n\r\nif(__inst.seesaw_mode)\r\n{\r\n\r\n\r\n    var tween2 =  new TWEEN.Tween(__inst.values).to(__inst.startValues, __inst.duration).easing(__inst.curve).onUpdate(function () {\r\n\r\n        if (!__inst.source_image) {\r\n\r\n            __inst.source_image = ctx.getImageData(sprite.position.x, sprite.position.y, sprite.size.x, sprite.size.y);\r\n\r\n        }\r\n\r\n        sprite.selected_animation.selected_frame.image.data = false;\r\n\r\n        var img = copyImageData(ctx, __inst.source_image);\r\n\r\n        //  console.log(jstr(__inst.values));\r\n\r\n\r\n\r\n        __inst.selected_effect.filter(img, __inst.values);\r\n\r\n\r\n        __inst.image_data_list.push(img);\r\n\r\n        sprite.selected_animation.selected_frame.image.data = img;\r\n\r\n\r\n    }).onComplete(function(){  __inst.counter = 0;\r\n\r\n\r\n    }).start();\r\n\r\n}\r\n                  else\r\n                  {\r\n                      __inst.counter = 0;\r\n                  }\r\n\r\n\r\n              }).start();\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n;\r\n\r\n/**\r\n * Takes the min and max vectors of rectangular shape and returns Rectangle Object.\r\n * @param   {Object} args object of arguments\r\n * @param   {Vector} args.min the minimum vector point (x,y)\r\n * @param   {Vector} args.max the maximum vector point (x,y)\r\n *\r\n * @returns {Rectangle} a Rectangle object\r\n */\r\n\r\nclass Rectangle {\r\n\r\n    constructor(min, max) {\r\n\r\n        this.min = min;\r\n        this.max = max;\r\n\r\n    }\r\n\r\n\r\n}\r\n;\r\n\r\n\r\nlet VectorBounds = Rectangle;\r\n\r\n\r\n\r\nGamestack.Rectangle = Rectangle;\r\n\r\n\r\n\r\n/**\r\n * Takes the min and max vectors plus termPoint ('termination-point'), returns VectorFrameBounds\r\n *  *use this to define the bounds of an Animation object.\r\n * @param   {Object} args object of arguments\r\n * @param   {Vector} args.min the minimum vector point (x,y)\r\n * @param   {Vector} args.max the maximum vector point (x,y)\r\n * @param   {Vector} args.termPoint the termPoint vector point (x,y)\r\n * -While a min and max Vector(x,y) will describe the grid of Animation frames, the termPoint will indicate the last frame to show on the grid (Animations may stop early on the 'grid')\r\n * @returns {VectorFrameBounds} a VectorFrameBounds object\r\n */\r\n\r\n\r\nclass VectorFrameBounds extends Rectangle {\r\n\r\n    constructor(min, max, termPoint) {\r\n\r\n        super(min, max);\r\n\r\n        this.termPoint = termPoint || new Vector3(this.max.x, this.max.y, this.max.z);\r\n\r\n    }\r\n\r\n\r\n}\r\n;\r\n\r\n\r\n\r\nGamestack.VectorFrameBounds = VectorFrameBounds;\r\n\r\n\r\n\r\n\r\nvar Curves = { //ALL HAVE INPUT AND OUTPUT OF: 0-1.0\r\n    // no easing, no acceleration\r\n    linearNone: function (t) { return t },\r\n    // accelerating from zero velocity\r\n    easeInQuadratic: function (t) { return t*t },\r\n    // decelerating to zero velocity\r\n    easeOutQuadratic: function (t) { return t*(2-t) },\r\n    // acceleration until halfway, then deceleration\r\n    easeInOutQuadratic: function (t) { return t<.5 ? 2*t*t : -1+(4-2*t)*t },\r\n    // accelerating from zero velocity\r\n    easeInCubic: function (t) { return t*t*t },\r\n    // decelerating to zero velocity\r\n    easeOutCubic: function (t) { return (--t)*t*t+1 },\r\n    // acceleration until halfway, then deceleration\r\n    easeInOutCubic: function (t) { return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1 },\r\n    // accelerating from zero velocity\r\n    easeInQuartic: function (t) { return t*t*t*t },\r\n    // decelerating to zero velocity\r\n    easeOutQuartic: function (t) { return 1-(--t)*t*t*t },\r\n    // acceleration until halfway, then deceleration\r\n    easeInOutQuartic: function (t) { return t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t },\r\n    // accelerating from zero velocity\r\n    easeInQuintic: function (t) { return t*t*t*t*t },\r\n    // decelerating to zero velocity\r\n    easeOutQuintic: function (t) { return 1+(--t)*t*t*t*t },\r\n    // acceleration until halfway, then deceleration\r\n    easeInOutQuintic: function (t) { return t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t }\r\n}\r\n\r\n\r\nGamestack.Curves = Curves;\r\n\r\n\r\n/**\r\n * Takes several args and returns Line object. Intended for curved-line / trajectory of Projectile Object.\r\n * @param   {Object} args object of arguments\r\n * @param   {Easing} args.curve the curve applied to line see TWEEN.Easing , limited options for immediate line-drawing\r\n * @param   {number} args.duration the millisecond duration of Line\r\n * @param   {Vector} args.position the position vector\r\n *\r\n * @param   {number} args.pointDist the numeric point-distance\r\n *\r\n * @param   {Vector} args.size the size vector\r\n *\r\n * @param   {number} args.rotation the numeric rotation of -360 - 360\r\n *\r\n * @param   {number} args.growth the numeric growth\r\n *\r\n * -While a min and max Vector(x,y) will describe the grid of Animation frames, the termPoint will indicate the last frame to show on the grid (Animations may stop early on the 'grid')\r\n * @returns {VectorFrameBounds} a VectorFrameBounds object\r\n */\r\n\r\nclass Line\r\n{\r\n    constructor(args = {})\r\n    {\r\n\r\n        this.curve_string = args.curve_string || \"Linear_None\";\r\n\r\n        this.curve = this.get_curve_from_string(this.curve_string);\r\n\r\n        this.motion_curve = args.motion_curve || TWEEN.Easing.Linear.None;\r\n\r\n        if(typeof(args.curve) == 'function')\r\n        {\r\n            this.curve = args.curve;\r\n        }\r\n\r\n        this.points = [];\r\n\r\n        this.position = args.position ||  new Vector();\r\n\r\n        this.is_highlighted = args.is_highlighted || false;\r\n\r\n        this.offset = args.offset || new Vector();\r\n\r\n        this.pointDist = 5;\r\n\r\n        this.size = args.size || new Vector();\r\n\r\n        this.rotation = args.rotation || 0;\r\n\r\n        this.iterations = 1;\r\n\r\n        this.growth = args.growth || 1.2;\r\n\r\n        this.curve_options = Curves;\r\n\r\n    }\r\n\r\n    Iterations(n)\r\n    {\r\n\r\n       this.iterations = n;\r\n       return this;\r\n    }\r\n\r\n    Growth(n)\r\n    {\r\n        this.growth = n;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    Pos(p)\r\n    {\r\n\r\n        this.position = p;\r\n        return this;\r\n    }\r\n\r\n    PointDisp(num)\r\n    {\r\n        this.minPointDist = num;\r\n        return this;\r\n    }\r\n\r\n    Curve(c)\r\n    {\r\n        this.curve = c;\r\n        this.curve_string = this.get_curve_string(c);\r\n        return this;\r\n    }\r\n\r\n    Duration(d)\r\n    {\r\n        this.duration = d;\r\n\r\n        return this;\r\n    }\r\n\r\n    get_curve_from_string(str)\r\n    {\r\n\r\n        for(var x in this.curve_options) {\r\n\r\n            if(x.toLowerCase() == str.toLowerCase().replace('_', ''))\r\n            {\r\n                return this.curve_options[x];\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    get_curve_string(c)\r\n    {\r\n        for(var x in this.curve_options) {\r\n\r\n            if(this.curve_options[x] == c)\r\n            {\r\n                return x;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getGraphCanvas(curveCall, existing_canvas) {\r\n\r\n        var canvas = existing_canvas || document.createElement('canvas');\r\n\r\n        canvas.style.position = \"relative\";\r\n\r\n        canvas.id = 'curve-display';\r\n\r\n        canvas.setAttribute('class', 'motion-curve');\r\n\r\n        canvas.width = 180;\r\n        canvas.height = 100;\r\n\r\n        canvas.style.background = \"black\";\r\n\r\n        var context = canvas.getContext('2d');\r\n        context.fillStyle = \"rgb(0,0,0)\";\r\n        context.fillRect(0, 0, 180, 100);\r\n\r\n        context.lineWidth = 0.5;\r\n        context.strokeStyle = \"rgb(230,230,230)\";\r\n\r\n        context.beginPath();\r\n        context.moveTo(0, 20);\r\n        context.lineTo(180, 20);\r\n        context.moveTo(0, 80);\r\n        context.lineTo(180, 80);\r\n        context.closePath();\r\n        context.stroke();\r\n\r\n        context.lineWidth = 2;\r\n        context.strokeStyle = \"rgb(255,127,127)\";\r\n\r\n        var position = {x: 0, y: 80};\r\n        var position_old = {x: 0, y: 80};\r\n\r\n        this.test_graph_size = new Vector(185, 80 -20);\r\n\r\n       var points = this.get_line_segment(this.test_graph_size, 5, curveCall);\r\n\r\n        for(var x in points)\r\n        {\r\n            var position = new Vector(points[x].x, this.test_graph_size.y + 20 - points[x].y);\r\n\r\n            context.beginPath();\r\n            context.moveTo(position_old.x, position_old.y);\r\n            context.lineTo(position.x, position.y);\r\n            context.closePath();\r\n            context.stroke();\r\n\r\n            position_old.x = position.x;\r\n            position_old.y = position.y;\r\n        }\r\n\r\n        return canvas;\r\n    }\r\n\r\n    get_line_segment(size, pointDist, curveCall)\r\n    {\r\n        if(!size || !pointDist) //***PREVENT DOUBLE RUN\r\n        {\r\n\r\n            return 0;\r\n        }\r\n\r\n        var points = [];\r\n\r\n        var current_point = new Vector(0, 0, 0);\r\n\r\n        var position = new Vector(current_point),\r\n\r\n            target = new Vector(position.add(size)),\r\n\r\n            start = new Vector(position),\r\n\r\n            curveMethod = curveCall,\r\n\r\n            ptrack = new Vector(start);\r\n\r\n        for (position.x = position.x; position.x < target.x; position.x += 1) {\r\n\r\n            var dist = position.sub(start);\r\n\r\n            var pct = dist.x / size.x;\r\n\r\n            console.log(pct);\r\n\r\n            position.y = Math.round(curveMethod(pct) * size.y);\r\n\r\n            if (ptrack.trig_distance_xy(position) >= pointDist) {\r\n\r\n                var p = new Vector(Gamestack.GeoMath.rotatePointsXY(position.x, position.y, 0));\r\n\r\n                points.push(p);\r\n\r\n                current_point = new Vector(position);\r\n\r\n                ptrack = new Vector(current_point);\r\n\r\n            }\r\n        }\r\n\r\n        return points;\r\n\r\n    }\r\n\r\n    fill(size, pointDist)\r\n    {\r\n\r\n        if(!size || !pointDist) //***PREVENT DOUBLE RUN\r\n        {\r\n\r\n            return 0;\r\n        }\r\n\r\n        this.size = size;\r\n\r\n        this.pointDist = pointDist;\r\n\r\n        var __inst = this;\r\n\r\n        this.points = [];\r\n\r\n        var current_point = new Vector(this.position), yTrack = 0;\r\n\r\n\r\n        for(var x= 0; x <= this.iterations; x++) {\r\n\r\n            var position = new Vector(current_point),\r\n\r\n                target = new Vector(position.add(size)),\r\n\r\n                start = new Vector(position),\r\n\r\n                curveMethod = this.curve,\r\n\r\n                ptrack = new Vector(start);\r\n\r\n            for (position.x = position.x; position.x < target.x; position.x += 1) {\r\n\r\n                var dist = position.sub(start);\r\n\r\n                var pct = dist.x / size.x;\r\n\r\n                position.y = start.y +  Math.round(curveMethod(pct) * size.y);\r\n\r\n                if (current_point.trig_distance_xy(position) >= this.pointDist) {\r\n\r\n                    var p = new Vector(Gamestack.GeoMath.rotatePointsXY(position.x, position.y, this.rotation));\r\n\r\n                    this.points.push(p);\r\n\r\n                    current_point = new Vector(position);\r\n\r\n                }\r\n            }\r\n\r\n            size = size.mult(this.growth);\r\n\r\n\r\n        }\r\n    }\r\n\r\n    transpose(origin)\r\n    {\r\n\r\n        var t_points = [];\r\n\r\n        for(var x = 0; x < this.points.length; x++) {\r\n\r\n            t_points.push(this.points[x].add(origin));\r\n\r\n        }\r\n\r\n        return t_points;\r\n\r\n    }\r\n\r\n    add_segment(next_segment, offset)\r\n    {\r\n        for(var x = 0; x < next_segment.length; x++) {\r\n\r\n            next_segment[x] = new Vector(next_segment[x]).add(offset);\r\n\r\n            this.points.push(next_segment[x]);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    get_flipped_segment(points)\r\n    {\r\n\r\n        var t_points = points.slice(), t_len = t_points.length;\r\n\r\n        for(var x = 0; x < points.length; x++) {\r\n\r\n            t_points[t_len - x].x = points[x].x\r\n\r\n        }\r\n\r\n        return t_points;\r\n\r\n    }\r\n\r\n    Highlight(origin, ctx)\r\n    {\r\n\r\n        ctx = ctx || Gamestack.ctx;\r\n\r\n        for(var x in this.points)\r\n        {\r\n\r\n            var point = origin.add(this.points[x]).sub(Gamestack.point_highlighter.size.mult(0.5));\r\n\r\n            var dist = point.sub(Gamestack.point_highlighter.position);\r\n\r\n            var d = Math.sqrt( dist.x * dist.x + dist.y * dist.y );\r\n\r\n\r\n            if(d >= 10)\r\n            {\r\n                Gamestack.point_highlighter.position = new Vector2(origin.add(this.points[x]).sub(Gamestack.point_highlighter.size.mult(0.5)));\r\n            }\r\n\r\n\r\n               Canvas.draw(Gamestack.point_highlighter, ctx);\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nvar GeoMath = {\r\n\r\n        rotatePointsXY:function(x,y,angle) {\r\n\r\n            var theta = angle*Math.PI/180;\r\n\r\n            var point = {};\r\n            point.x = x * Math.cos(theta) - y * Math.sin(theta);\r\n            point.y = x * Math.sin(theta) + y * Math.cos(theta);\r\n\r\n            point.z = 0;\r\n\r\n            return point\r\n        }\r\n\r\n}\r\n\r\nGamestack.GeoMath = GeoMath;\r\n;/**\r\n * Takes an object of arguments and returns Sprite() object. Sprite() is a container for multiple Animations, Motions, and Sounds. Sprites have several behavioral functions for 2d-Game-Objects.\r\n\r\n * @param   {Object} args object of arguments\r\n * @param   {string} args.name optional\r\n * @param   {string} args.description optional\r\n\r\n * @param   {string} args.src the source file for the GameImage:Sprite.image :: use a string / file-path\r\n\r\n * @param   {Vector} args.size the size of the Sprite\r\n * @param   {Vector} args.position the position of the Sprite\r\n * @param   {Vector} args.padding the 'float-type' Vector of x and y padding to use when processing collision on the Sprite. A padding of new Vector(0.2, 0.2) will result in 1/5 of Sprite size for padding\r\n\r\n\r\n\r\n * @param   {Animation} args.selected_animation the selected_animation of the Sprite:: pass during creation or use Sprite.setAnimation after created\r\n *\r\n * @returns {Sprite} a Sprite object\r\n */\r\n\r\nclass Sprite {\r\n    constructor(args) {\r\n\r\n        if (!args) {\r\n            args = {};\r\n        }\r\n\r\n        if(args instanceof Animation)\r\n        {\r\n\r\n            args = {selected_animation:args, size:new Vector(args.frameSize)};\r\n        }\r\n\r\n        this.active = true; //active sprites are visible\r\n\r\n        this.name = args.name || \"__\";\r\n\r\n        this.description = args.description || \"__\";\r\n\r\n        this.gravity = \"medium\";\r\n\r\n        this.__initializers = __gameStack.getArg(args, '__initializers', []);\r\n\r\n        var _spr = this;\r\n\r\n        Gamestack.each(args, function (ix, item) { //apply all args\r\n\r\n            if (ix !== 'parent') {\r\n                _spr[ix] = item;\r\n            }\r\n\r\n        });\r\n\r\n        this.type = __gameStack.getArg(args, 'type', 'basic');\r\n\r\n        this.animations = __gameStack.getArg(args, 'animations', []);\r\n\r\n        this.motions = __gameStack.getArg(args, 'motions', []);\r\n\r\n        this.projectiles = __gameStack.getArg(args, 'projectiles', []);\r\n\r\n        let __inst = this;\r\n\r\n        this.id = __gameStack.getArg(args, 'id', this.create_id());\r\n\r\n        this.sounds = __gameStack.getArg(args, 'sounds', []);\r\n\r\n        this.image = new GameImage(__gameStack.getArg(args, 'src', __gameStack.getArg(args, 'image', false)));\r\n\r\n        this.size = new Vector(__gameStack.getArg(args, 'size', new Vector3(100, 100)));\r\n\r\n        this.position = new Vector( __gameStack.getArg(args, 'position', new Vector3(0, 0, 0)));\r\n\r\n        this.collision_bounds = __gameStack.getArg(args, 'collision_bounds', new VectorBounds(new Vector3(0, 0, 0), new Vector3(0, 0, 0)));\r\n\r\n        this.rotation =  new Vector(__gameStack.getArg(args, 'rotation', new Vector3(0, 0, 0)));\r\n\r\n        this.selected_animation = {};\r\n\r\n        this.speed = __gameStack.getArg(args, 'speed', new Vector3(0, 0, 0));\r\n\r\n        this.acceleration = __gameStack.getArg(args, 'acceleration', new Vector3(0, 0, 0));\r\n\r\n        this.rot_speed = __gameStack.getArg(args, 'rot_speed', new Vector3(0, 0, 0));\r\n\r\n        this.rot_accel = __gameStack.getArg(args, 'rot_accel', new Vector3(0, 0, 0));\r\n\r\n\r\n        this.padding = __gameStack.getArg(args, 'padding', new Vector3(0, 0, 0));\r\n\r\n        //Apply / instantiate Sound(), Motion(), and Animation() args...\r\n\r\n        GameStack.each(this.sounds, function (ix, item) {\r\n\r\n            __inst.sounds[ix] = new Sound(item);\r\n\r\n        });\r\n\r\n        GameStack.each(this.motions, function (ix, item) {\r\n\r\n            __inst.motions[ix] = new Motion(item);\r\n\r\n        });\r\n\r\n        GameStack.each(this.animations, function (ix, item) {\r\n\r\n            __inst.animations[ix] = new Animation(item);\r\n\r\n\r\n        });\r\n\r\n        GameStack.each(this.projectiles, function (ix, item) {\r\n\r\n            __inst.projectiles[ix] = new Projectile(item);\r\n\r\n        });\r\n\r\n        //Apply initializers:\r\n\r\n        GameStack.each(this.__initializers, function (ix, item) {\r\n\r\n            __inst.onInit(item);\r\n\r\n        });\r\n\r\n\r\n        if (args.selected_animation) {\r\n            this.selected_animation = new Animation(args.selected_animation);\r\n\r\n        }\r\n        else {\r\n\r\n            this.image.domElement.onload = function(){\r\n\r\n                __inst.setAnimation(__inst.animations[0] || new Animation({\r\n\r\n                        image:  __inst.image,\r\n\r\n                        frameSize: new Vector3( __inst.image.domElement.width,  __inst.image.domElement.height),\r\n\r\n                        frameBounds: new VectorFrameBounds(new Vector3(), new Vector3())\r\n\r\n\r\n                    }));\r\n\r\n            };\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * This function initializes sprites. Call to trigger all functions previously passed to onInit().\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     **********/\r\n\r\n    init() {\r\n\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * This function extends the init() function. Takes single function() argument OR single string argument\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {function} fun the function to be passed into the init() event of the Sprite()\r\n     **********/\r\n\r\n    onInit(fun) {\r\n\r\n        if (typeof fun == 'string') {\r\n\r\n            if (this.__initializers.indexOf(fun) < 0) {\r\n\r\n                this.__initializers.push(fun)\r\n            }\r\n            ;\r\n\r\n            var __inst = this;\r\n\r\n            var keys = fun.split('.');\r\n\r\n            console.log('finding init from string:' + fun);\r\n\r\n            if (!keys.length >= 2) {\r\n                return console.error('need min 2 string keys separated by \".\"');\r\n            }\r\n\r\n            var f = GameStack.options.SpriteInitializers[keys[0]][keys[1]];\r\n\r\n            if (typeof(f) == 'function') {\r\n\r\n                var __inst = this;\r\n\r\n                var f_init = this.init;\r\n\r\n                this.init = function () {\r\n\r\n                    f_init(__inst);\r\n\r\n                    f(__inst);\r\n\r\n                };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        else if (typeof fun == 'function') {\r\n\r\n            console.log('extending init:');\r\n\r\n\r\n            var f_init = this.init;\r\n            var __inst = this;\r\n\r\n            this.init = function () {\r\n\r\n                f_init(__inst);\r\n\r\n                fun(__inst);\r\n\r\n            };\r\n\r\n\r\n        }\r\n\r\n        else if (typeof fun == 'object') {\r\n\r\n            console.log('extending init:');\r\n\r\n            console.info('Quick2D does not yet implement onInit() from arg of object type');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*****************************\r\n     * Getters\r\n     ***************************/\r\n\r\n    /**\r\n     * This function gets the 'id' of the Sprite()\r\n     * @function\r\n     * @memberof Sprite\r\n     * @returns {string}\r\n     **********/\r\n\r\n    get_id() {\r\n        return this.id;\r\n    }\r\n\r\n\r\n\r\n    to_map_object(size, framesize) {\r\n\r\n        this.__mapSize = new Vector3(size || this.size);\r\n\r\n        this.frameSize = new Vector3(framesize || this.size);\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    /*****************************\r\n     * Setters and Creators\r\n     ***************************/\r\n\r\n    /**\r\n     * This function creates the 'id' of the Sprite():Called automatically on constructor()\r\n     * @function\r\n     * @memberof Sprite\r\n     * @returns {string}\r\n     **********/\r\n\r\n    create_id() {\r\n\r\n        return Quick2d.create_id();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * This function sets the size of the Sprite()\r\n     * @function\r\n     * @memberof Sprite\r\n     **********/\r\n\r\n    setSize(size) {\r\n\r\n        this.size = new Vector3(size.x, size.y, size.z);\r\n\r\n    }\r\n\r\n    /**\r\n     * This function sets the position of the Sprite()\r\n     * @function\r\n     * @memberof Sprite\r\n     **********/\r\n\r\n    setPos(pos) {\r\n        this.position = new Vector3(pos.x, pos.y, pos.z || 0);\r\n\r\n    }\r\n\r\n    /**\r\n     * This function sizes the Sprite according to minimum dimensions and existing w/h ratios\r\n     * @param {number} mx the maximum size.x for the resize\r\n     * @param {number} my the maximum size.y for the resize\r\n     * @function\r\n     * @memberof Sprite\r\n     **********/\r\n\r\n   getCappedSizeXY(mx, my, currentSize)\r\n    {\r\n\r\n        var size = new Vector3(currentSize || this.size);\r\n\r\n        var wth = size.y /  size.x;\r\n\r\n        var htw = size.x /  size.y;\r\n\r\n        if( size.x > mx)\r\n        {\r\n            size.x = mx;\r\n\r\n            size.y = size.x * wth;\r\n\r\n        }\r\n\r\n        if( size.y > my)\r\n        {\r\n            size.y = my;\r\n\r\n            size.x = size.y * htw;\r\n\r\n        }\r\n\r\n        return size;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    /*****************************\r\n     *  assertSpeed()\r\n     *  -assert the existence of a speed{} object\r\n     ***************************/\r\n\r\n    assertSpeed() {\r\n        if (!this.speed) {\r\n\r\n            this.speed = new Vector3(0, 0, 0);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    /*****************************\r\n     *  setAnimation(anime)\r\n     *  -set the select_animation of this sprite\r\n     ***************************/\r\n\r\n    /**\r\n     * This function sets the 'selected_animation' property of the Sprite():: *all Sprites must have a 'selected_animation'\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Animation}\r\n     **********/\r\n\r\n    setAnimation(anime) {\r\n\r\n        if (anime instanceof Animation && this.animations.indexOf(anime) < 0) {\r\n            this.animations.push(anime);\r\n        }\r\n\r\n        this.selected_animation = anime;\r\n\r\n        Gamestack.log('declared default animation');\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    /**\r\n     * This function indicates if this Sprite is onScreen within the Gamestack.WIDTH && Gamestack.HEIGHT dimensions, OR any w & h passed as arguments\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {number} w optional WIDTH argument, defaults to Gamestack.WIDTH\r\n     * @param {number} h optional HEIGHT argument, defaults to Gamestack.HEIGHT\r\n     **********/\r\n\r\n    onScreen(w, h) {\r\n\r\n        w = w || __gameStack.WIDTH;\r\n\r\n        h = h || __gameStack.HEIGHT;\r\n\r\n\r\n        var camera = __gameStack.camera ||__gameStack.__gameWindow.camera || new Vector3(0, 0, 0);\r\n\r\n        var p = new Vector3(this.position.x - camera.position.x, this.position.y - camera.position.y, this.position.z - camera.position.z);\r\n\r\n        var onScreen = p.x  > 0 - this.size.x && p.x < w + this.size.x\r\n        &&  p.y  > 0 - this.size.x && p.y < h + this.size.y ? true : false;\r\n\r\n        return onScreen;\r\n\r\n    }\r\n\r\n    /*****************************\r\n     * Updates\r\n     ***************************/\r\n\r\n    /*****************************\r\n     * update()\r\n     * -starts empty:: is used by Quick2d.js as the main sprite update\r\n     ***************************/\r\n\r\n    /**\r\n     * This function is the main update() function for the Sprite\r\n     * @function\r\n     * @memberof Sprite\r\n     **********/\r\n\r\n\r\n    update(sprite) {\r\n    }\r\n\r\n    /*****************************\r\n     * def_update()\r\n     * -applies speed and other default factors of movement::\r\n     * -is used by Quick2d.js as the system def_update (default update)\r\n     ***************************/\r\n\r\n    /**\r\n     * This function updates various speed and rotational-speed properties for the Sprite()\r\n     * @function\r\n     * @memberof Sprite\r\n     **********/\r\n\r\n    def_update(sprite) {\r\n\r\n\r\n        for (var x in this.speed) {\r\n\r\n            if (this.speed[x] > 0 || this.speed[x] < 0) {\r\n\r\n                this.position[x] += this.speed[x];\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for (var x in this.acceleration) {\r\n\r\n            if (this.acceleration[x] > 0 || this.acceleration[x] < 0) {\r\n\r\n                this.speed[x] += this.acceleration[x];\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for (var x in this.rot_speed) {\r\n\r\n            if ( this.rot_speed[x] > 0 || this.rot_speed[x] < 0) {\r\n\r\n                this.rotation[x] += this.rot_speed[x];\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        for (var x in this.rot_accel) {\r\n\r\n\r\n            if (this.rot_accel[x] > 0 || this.rot_accel[x] < 0) {\r\n\r\n                this.rot_speed[x] += this.rot_accel[x];\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function resolves a function nested in an object, from a string-key, and it is applied by Gamestack.js for persistence of data and Sprite() behaviors\r\n     * @function\r\n     * @memberof Sprite\r\n     **********/\r\n\r\n    resolveFunctionFromDoubleKeys(keyString1, keyString2, obj, callback) {\r\n\r\n        callback(typeof obj[keyString1][keyString2] == 'function' ? obj[keyString1][keyString2] : {});\r\n\r\n    }\r\n\r\n    /**\r\n     * This function extends an existing function, and is applied by Gamestack in onInit();\r\n     * @function\r\n     * @memberof Sprite\r\n     **********/\r\n\r\n    extendFunc(fun, extendedFunc) {\r\n\r\n        console.log('extending func');\r\n\r\n        var ef = extendedFunc;\r\n\r\n        var __inst = this;\r\n\r\n        return function () {\r\n\r\n\r\n            ef(__inst);\r\n\r\n            //any new function comes after\r\n\r\n            fun(__inst);\r\n\r\n\r\n        };\r\n\r\n    }\r\n\r\n\r\n    /*****************************\r\n     *  onUpdate(fun)\r\n     * -args: 1 function(sprite){ } //the self-instance/sprite is passed into the function()\r\n     * -overrides and maintains existing code for update(){} function\r\n     ***************************/\r\n\r\n\r\n    /**\r\n     * Extends the update() of this sprite with a new function to be called during update()\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {function} the function to apply to the Sprite:update()\r\n     **********/\r\n\r\n\r\n    onUpdate(fun) {\r\n        fun = fun || function () {\r\n            };\r\n\r\n        let update = this.update;\r\n\r\n        let __inst = this;\r\n\r\n        this.update = function (__inst) {\r\n            update(__inst);\r\n            fun(__inst);\r\n        };\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * <ul>\r\n     *     <li>A rectangular style position</li>\r\n     *      <li>Takes another sprite as argument</li>\r\n     *       <li>Returns basic true || false during runtime</li>\r\n     * </ul>\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {sprite}\r\n     **********/\r\n\r\n\r\n    /**\r\n     * Get the true || false results of a Collision between two Sprites(), based on their position Vectors and Sizes\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Sprite} sprite the alternate Sprite to process collision with\r\n     **********/\r\n\r\n\r\n    collidesRectangular(sprite) {\r\n\r\n        return Gamestack.Collision.spriteRectanglesCollide(this, sprite);\r\n\r\n    }\r\n\r\n\r\n    /*****************************\r\n     *  shoot(sprite)\r\n     *  -fire a shot from the sprite:: as in a firing gun or spaceship\r\n     *  -takes options{} for number of shots anglePerShot etc...\r\n     *  -TODO: complete and test this code\r\n     ***************************/\r\n\r\n    /**\r\n     * Sprite fires a projectile object\r\n     * <ul>\r\n     *     <li>Easy instantiator for bullets and propelled objects in GameStack</li>\r\n     *     <li>*TODO: This function is not-yet implemented in GameStack</li>\r\n     * </ul>\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {options} *numerous args\r\n     **********/\r\n\r\n\r\n    /**\r\n     * fire a projectile-subSprite from the Sprite\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Object} options an object of arguments\r\n     * @param {Animation} animation the animation to fire from the Sprite\r\n     * @param {number} speed the speed of the shot that is projected\r\n     * @param {Vector} position the initial position of the shot: defaults to current Sprite position\r\n     * @param {Vector} size the Vector size of the shot\r\n     * @param {Vector} rot_offset the rotational offset to apply: controls direction of the shot\r\n     **********/\r\n\r\n    shoot(options) {\r\n        //character shoots an animation\r\n\r\n        this.prep_key = 'shoot';\r\n\r\n        let animation = options.bullet || options.animation || new Animation();\r\n\r\n        let speed = options.speed || 1;\r\n\r\n        let position = options.position || new Vector3(this.position);\r\n\r\n        let size = options.size || new Vector3(10, 10, 0);\r\n\r\n        let rot_offset = options.rot_offset || new Vector3(0, 0, 0);\r\n\r\n        if (__gameInstance.isAtPlay) {\r\n\r\n            var bx = position.x, by = position.y, bw = size.x, bh = size.y;\r\n\r\n            var shot = __gameStack.add(new Sprite({\r\n\r\n                active: true,\r\n\r\n                position: position,\r\n\r\n                size: size,\r\n\r\n                image: animation.image,\r\n\r\n                rotation: new Vector3(0, 0, 0),\r\n\r\n                flipX: false\r\n\r\n            }));\r\n\r\n            shot.setAnimation(animation);\r\n\r\n            if (typeof(rot_offset) == 'number') {\r\n                rot_offset = new Vector3(rot_offset, 0, 0);\r\n            }\r\n\r\n            shot.position.x = bx, shot.position.y = by;\r\n            shot.rotation.x = 0 + rot_offset.x;\r\n\r\n            shot.stats = {\r\n                damage: 1\r\n\r\n            };\r\n\r\n            shot.speed.x = Math.cos((shot.rotation.x) * 3.14 / 180) * speed;\r\n\r\n            shot.speed.y = Math.sin((shot.rotation.x) * 3.14 / 180) * speed;\r\n\r\n            return shot;\r\n\r\n        }\r\n\r\n        return new Error(\"game was not in motion: Gamestack.isAtPlay must be true to create a shot.\");\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * create a subsprite of Sprite belonging to the current Sprite\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Object} options an object of arguments\r\n     * @param {Animation} animation the animation to fire from the Sprite\r\n     * @param {number} speed the speed of the shot that is projected\r\n     * @param {Vector} position the initial position of the shot: defaults to current Sprite position\r\n     * @param {Vector} size the Vector size of the shot\r\n     * @param {Vector} offset the positional offset to apply\r\n     **********/\r\n\r\n    subsprite(options) {\r\n\r\n        let animation = options.animation || new Animation();\r\n\r\n        let position = options.position || new Vector3(this.position);\r\n\r\n        let offset = options.offset || new Vector3(0, 0, 0);\r\n\r\n        let size = options.size || this.size;\r\n\r\n        if (__gameInstance.isAtPlay) {\r\n\r\n            var subsprite = __gameStack.add(new Sprite({\r\n\r\n                active: true,\r\n\r\n                position: position,\r\n\r\n                size: size,\r\n\r\n                offset: offset,\r\n\r\n                image: animation.image,\r\n\r\n                rotation: new Vector3(0, 0, 0),\r\n\r\n                flipX: false\r\n\r\n            }));\r\n\r\n            subsprite.setAnimation(animation);\r\n\r\n            return subsprite;\r\n\r\n        }\r\n        else\r\n        {\r\n            alert('No subsprite when not at play');\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * animate Sprite.selected_animation  by one frame\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Animation} animation to use, defaults to Sprite.selected_animation\r\n     **********/\r\n\r\n    animate(animation) {\r\n\r\n        if (__gameInstance.isAtPlay) {\r\n\r\n            if (animation) {\r\n                this.setAnimation(animation)\r\n            }\r\n\r\n            this.selected_animation.animate();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * run a function when the Sprite.selected_animation is complete\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Function} fun the function to call when the animation is complete\r\n     *\r\n     **********/\r\n\r\n    onAnimationComplete(fun) {\r\n        this.selected_animation.onComplete(fun);\r\n\r\n    }\r\n\r\n    /*****************************\r\n     *  accelY\r\n     *  -accelerate on Y-Axis with 'accel' and 'max' (speed) arguments\r\n     *  -example-use: gravitation of sprite || up / down movement\r\n     ***************************/\r\n\r\n    /**\r\n     * accelerate speed on the Y-Axis\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {number} accel the increment of acceleration\r\n     * @param {number} max the maximum for speed\r\n     *\r\n     **********/\r\n\r\n    accelY(accel, max) {\r\n\r\n        accel = Math.abs(accel);\r\n\r\n        if (typeof(max) == 'number') {\r\n            max = {y: max};\r\n\r\n        }\r\n\r\n        this.assertSpeed();\r\n\r\n        let diff = max.y - this.speed.y;\r\n\r\n        if (diff > 0) {\r\n            this.speed.y += Math.abs(diff) >= accel ? accel : diff;\r\n\r\n        }\r\n        ;\r\n\r\n        if (diff < 0) {\r\n            this.speed.y -= Math.abs(diff) >= accel ? accel : diff;\r\n\r\n        }\r\n        ;\r\n\r\n    }\r\n\r\n\r\n    /*****************************\r\n     *  accelX\r\n     *  -accelerate on X-Axis with 'accel' and 'max' (speed) arguments\r\n     *  -example-use: running of sprite || left / right movement\r\n     ***************************/\r\n\r\n\r\n\r\n\r\n    /**\r\n     * accelerate speed on the X-Axis\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {number} accel the increment of acceleration\r\n     * @param {number} max the maximum for speed\r\n     *\r\n     **********/\r\n\r\n\r\n    accelX(accel, max) {\r\n\r\n        accel = Math.abs(accel);\r\n\r\n        if (typeof(max) == 'number') {\r\n            max = {x: max};\r\n\r\n        }\r\n\r\n        this.assertSpeed();\r\n\r\n        let diff = max.x - this.speed.x;\r\n\r\n        if (diff > 0) {\r\n            this.speed.x += Math.abs(diff) >= accel ? accel : diff;\r\n\r\n        }\r\n        ;\r\n\r\n        if (diff < 0) {\r\n            this.speed.x -= Math.abs(diff) >= accel ? accel : diff;\r\n\r\n        }\r\n        ;\r\n\r\n    }\r\n\r\n\r\n    /*****************************\r\n     *  accel\r\n     *  -accelerate any acceleration -key\r\n     ***************************/\r\n\r\n\r\n    /**\r\n     * accelerate toward a max value on any object-property:: intended for self-use\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Object} prop The object to control\r\n     * @param {string} key the property-key for targeted property of prop argument\r\n     *\r\n     * @param {number} accel the increment of acceleration\r\n     *\r\n     * @param {number} max the max value to accelerate towards\r\n     *\r\n     *\r\n     **********/\r\n\r\n    accel(prop, key, accel, max) {\r\n\r\n        accel = Math.abs(accel);\r\n\r\n        if (typeof(max) == 'number') {\r\n            max = {x: max};\r\n\r\n        }\r\n\r\n        let speed = prop[key];\r\n\r\n        // this.assertSpeed();\r\n\r\n        let diff = max.x - prop[key];\r\n\r\n        if (diff > 0) {\r\n            prop[key] += Math.abs(diff) >= accel ? accel : diff;\r\n\r\n        }\r\n        ;\r\n\r\n        if (diff < 0) {\r\n            prop[key] -= Math.abs(diff) >= accel ? accel : diff;\r\n\r\n        }\r\n        ;\r\n\r\n    }\r\n\r\n\r\n    /*****************************\r\n     *  decel\r\n     *  -deceleration -key\r\n     ***************************/\r\n\r\n    /**\r\n     * decelerate toward a max value on any object-property:: intended for self-use\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Object} prop The object to control\r\n     * @param {string} key the property-key for targeted property of prop argument\r\n     *\r\n     * @param {number} decel the increment of deceleration\r\n     *\r\n     * @param {number} max the max value to decelerate towards\r\n     *\r\n     *\r\n     **********/\r\n\r\n    decel(prop, key, rate) {\r\n        if (typeof(rate) == 'object') {\r\n\r\n            rate = rate.rate;\r\n\r\n        }\r\n\r\n        rate = Math.abs(rate);\r\n\r\n        if (Math.abs(prop[key]) <= rate) {\r\n            prop[key] = 0;\r\n        }\r\n\r\n        else if (prop[key] > 0) {\r\n            prop[key] -= rate;\r\n\r\n        }\r\n        else if (prop[key] < 0) {\r\n            prop[key] += rate;\r\n\r\n        }\r\n        else {\r\n\r\n            prop[key] = 0;\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    /*****************************\r\n     *  decelY\r\n     *  -decelerate on the Y axis\r\n     *  -args: 1 float:amt\r\n     ***************************/\r\n\r\n\r\n    /**\r\n     * decelerate speed on the Y-Axis, toward zero\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {number} amt the increment of deceleration, negatives ignored\r\n     *\r\n     **********/\r\n\r\n    decelY(amt) {\r\n\r\n        amt = Math.abs(amt);\r\n\r\n        if (Math.abs(this.speed.y) <= amt) {\r\n            this.speed.y = 0;\r\n\r\n        }\r\n        else if (this.speed.y > amt) {\r\n\r\n            this.speed.y -= amt;\r\n        }\r\n        else if (this.speed.y < amt * -1) {\r\n\r\n            this.speed.y += amt;\r\n        }\r\n\r\n    }\r\n\r\n    /*****************************\r\n     *  decelX\r\n     *  -decelerate on the X axis\r\n     *  -args: 1 float:amt\r\n     ***************************/\r\n\r\n\r\n    /**\r\n     * decelerate speed on the X-Axis, toward zero\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {number} amt the increment of deceleration, negatives ignored\r\n     *\r\n     **********/\r\n\r\n    decelX(amt) {\r\n\r\n        amt = Math.abs(amt);\r\n\r\n\r\n        if (this.speed.x > amt) {\r\n\r\n            this.speed.x -= amt;\r\n        }\r\n        else if (this.speed.x < amt * -1) {\r\n\r\n            this.speed.x += amt;\r\n        }\r\n\r\n        if (Math.abs(this.speed.x) <= amt) {\r\n\r\n            this.speed.x = 0;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    shortest_stop(item, callback) {\r\n        var diff_min_y = item.min ? item.min.y : Math.abs(item.position.y - this.position.y + this.size.y);\r\n\r\n        var diff_min_x = item.min ? item.min.x : Math.abs(item.position.x - this.position.x + this.size.x);\r\n\r\n        var diff_max_y = item.max ? item.max.y : Math.abs(item.position.y + item.size.y - this.position.y);\r\n\r\n        var diff_max_x = item.max ? item.max.x : Math.abs(item.position.x + item.size.x - this.position.y);\r\n\r\n        var dimens = {top: diff_min_y, left: diff_min_x, bottom: diff_max_y, right: diff_max_x};\r\n\r\n        var minkey = \"\", min = 10000000;\r\n\r\n        for (var x in dimens) {\r\n            if (dimens[x] < min) {\r\n                min = dimens[x];\r\n                minkey = x; // a key of top left bottom or right\r\n\r\n            }\r\n        }\r\n\r\n        callback(minkey);\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * get the center of a Sprite\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     *\r\n     * @returns (Vector)\r\n     *\r\n     **********/\r\n\r\n    center() {\r\n\r\n\r\n        return new Vector(this.position.x + this.size.x / 2, this.position.y + this.size.y / 2, 0);\r\n\r\n    }\r\n\r\n    /*************\r\n     * #BE CAREFUL\r\n     * -with this function :: change sensitive / tricky / 4 way collision\r\n     * *************/\r\n\r\n\r\n    /**\r\n     * determine if Sprite overlaps on X axis with another Sprite\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Sprite} item the Sprite to compare with\r\n     * @param {number} padding the 0-1.0 float value of padding to use on self when testing overlap\r\n     * @returns {var} a true || false var\r\n     *\r\n     **********/\r\n\r\n    overlap_x(item, padding) {\r\n        if (!padding) {\r\n            padding = 0;\r\n        }\r\n\r\n        var paddingX = Math.round(padding * this.size.x),\r\n\r\n            paddingY = Math.round(padding * this.size.y), left = this.position.x + paddingX,\r\n            right = this.position.x + this.size.x - paddingX,\r\n\r\n            top = this.position.y + paddingY, bottom = this.position.y + this.size.y - paddingY;\r\n\r\n        return right > item.position.x && left < item.position.x + item.size.x;\r\n\r\n\r\n    }\r\n\r\n    /*************\r\n     * #BE CAREFUL\r\n     * -with this function :: change sensitive / tricky / 4 way collision\r\n     * *************/\r\n\r\n\r\n    /**\r\n     * determine if Sprite overlaps on Y axis with another Sprite\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Sprite} item the Sprite to compare with\r\n     * @param {number} padding the 0-1.0 float value of padding to use on self when testing overlap\r\n     * @returns (true || false}\r\n     *\r\n     **********/\r\n\r\n    overlap_y(item, padding) {\r\n        if (!padding) {\r\n            padding = 0;\r\n        }\r\n\r\n        var paddingX = Math.round(padding * this.size.x),\r\n\r\n            paddingY = Math.round(padding * this.size.y), left = this.position.x + paddingX,\r\n            right = this.position.x + this.size.x - paddingX,\r\n\r\n            top = this.position.y + paddingY, bottom = this.position.y + this.size.y - paddingY;\r\n\r\n        return bottom > item.position.y && top < item.position.y + item.size.y;\r\n\r\n    }\r\n\r\n    /*************\r\n     * #BE CAREFUL\r\n     * -with this function :: change sensitive / tricky / 4 way collision\r\n     * *************/\r\n\r\n\r\n\r\n    collide_stop_x(item)\r\n    {\r\n\r\n        var apart = false;\r\n\r\n            var ct = 10000;\r\n\r\n            while (!apart && ct > 0) {\r\n\r\n                ct--;\r\n\r\n                var diffX = this.center().sub(item.center()).x;\r\n\r\n                var distX = Math.abs(this.size.x / 2 + item.size.x / 2 - Math.round(this.size.x * this.padding.x));\r\n\r\n                if (Math.abs(diffX) < distX) {\r\n\r\n                    this.position.x -= diffX > 0 ? -1 : 1;\r\n\r\n\r\n\r\n                }\r\n                else\r\n                {\r\n\r\n                    apart = true;\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /*************\r\n     * #BE CAREFUL\r\n     * -with this function :: change sensitive / tricky / 4 way collision\r\n     * *************/\r\n\r\n\r\n    /**\r\n     * cause a fourway collision-stop between this and another Sprite :: objects will behave clastically and resist passing through one another\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     * @param {Sprite} item the Sprite to compare with\r\n     *\r\n     **********/\r\n\r\n    collide_stop(item) {\r\n\r\n        if(this.id == item.id)\r\n        {\r\n            return false;\r\n\r\n        }\r\n\r\n       // this.position = this.position.sub(this.speed);\r\n\r\n        if(this.collidesRectangular(item)) {\r\n\r\n            var diff = this.center().sub(item.center());\r\n\r\n            if(this.overlap_x(item, this.padding.x + 0.1) && Math.abs(diff.x) < Math.abs(diff.y))\r\n           {\r\n\r\n               var apart = false;\r\n\r\n                   var ct = 10000;\r\n\r\n                   while (!apart && ct > 0) {\r\n\r\n                       ct--;\r\n\r\n                       var diffY = this.center().sub(item.center()).y;\r\n\r\n                       var distY = Math.abs(this.size.y / 2 + item.size.y / 2- Math.round(this.size.y * this.padding.y));\r\n\r\n                       if (Math.abs(diffY) < distY) {\r\n\r\n                           this.position.y -= diffY > 0 ? -1 : diffY < 0 ? 1 : 0;\r\n\r\n                           this.position.y = Math.round(this.position.y);\r\n\r\n                       }\r\n\r\n                     else {\r\n\r\n                           if (diffY <= 0){\r\n                               this.__inAir = false;\r\n                           };\r\n\r\n\r\n                          return apart = true;\r\n\r\n\r\n                       }\r\n\r\n\r\n               }\r\n\r\n\r\n\r\n           }\r\n\r\n\r\n            if(this.overlap_y(item, this.padding.y ) && Math.abs(diff.y) < Math.abs(diff.x)) {\r\n\r\n                this.collide_stop_x(item);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    collide_stop_top(item)\r\n    {\r\n\r\n\r\n        if(this.id == item.id)\r\n        {\r\n            return false;\r\n\r\n        }\r\n\r\n\r\n            if(this.overlap_x(item, this.padding.x + 0.1))\r\n            {\r\n\r\n                console.log('OVERLAP_X');\r\n\r\n                var paddingY = this.padding.y * this.size.y;\r\n\r\n                if(this.position.y + this.size.y - paddingY <= item.position.y)\r\n                {\r\n\r\n                    this.groundMaxY = item.position.y - this.size.y + paddingY;\r\n\r\n                }\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Restore a sprite from saved .json data\r\n     *\r\n     * @function\r\n     * @memberof Sprite\r\n     *\r\n     * @returns (Sprite)\r\n     **********/\r\n\r\n    restoreFrom(data) {\r\n        data.image = new GameImage(data.src || data.image.src);\r\n\r\n        return new Sprite(data);\r\n\r\n    }\r\n\r\n\r\n    /*****************************\r\n     *  fromFile(file_path)\r\n     *  -TODO : complete this function based on code to load Sprite() from file, located in the spritemaker.html file\r\n     *  -TODO: test this function\r\n     ***************************/\r\n\r\n    fromFile(file_path) {\r\n\r\n        if (typeof file_path == 'string') {\r\n\r\n            var __inst = this;\r\n\r\n            $.getJSON(file_path, function (data) {\r\n\r\n                __inst = new Sprite(data);\r\n\r\n            });\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n;\r\n\r\n/****************\r\n * TODO : Complete SpritePresetsOptions::\r\n *  Use these as options for Sprite Control, etc...\r\n ****************/\r\n\r\nGamestack.Sprite = Sprite;\r\n\r\nlet SpriteInitializersOptions = {\r\n\r\n    Clastics:{\r\n\r\n        top_collideable:function(sprite)\r\n        {\r\n\r\n            for(var x in Gamestack.__gameWindow.forces)\r\n            {\r\n                var force = Gamestack.__gameWindow.forces[x];\r\n\r\n                force.topClastics.push(sprite);\r\n\r\n            }\r\n\r\n\r\n            sprite.onUpdate(function(){\r\n\r\n\r\n            });\r\n\r\n        },\r\n\r\n        fourside_collideable:function(sprite)\r\n        {\r\n\r\n            for(var x in Gamestack.__gameWindow.forces)\r\n            {\r\n                var force = Gamestack.__gameWindow.forces[x];\r\n\r\n                force.clasticObjects.push(sprite);\r\n\r\n            }\r\n\r\n            sprite.onUpdate(function(){\r\n\r\n\r\n            });\r\n\r\n\r\n        }\r\n    },\r\n\r\n    MainGravity:{\r\n\r\n        very_light:function(sprite)\r\n        {\r\n            //Add a gravity to the game\r\n\r\n            var gravity = Gamestack.add(new Force({\r\n                name:\"very_light_grav\",\r\n                accel:0.05,\r\n                max:new Vector3(0, 3.5, 0),\r\n                subjects:[sprite], //sprite is the subject of this Force, sprite is pulled by this force\r\n                clasticObjects:[] //an empty array of collideable objects\r\n\r\n            }));\r\n\r\n            sprite.onUpdate(function(){\r\n\r\n\r\n            });\r\n\r\n        },\r\n\r\n        light:function(sprite)\r\n        {\r\n\r\n            var gravity = Gamestack.add(new Force({\r\n                name:\"light_grav\",\r\n                accel:0.1,\r\n                max:new Vector3(0, 4.5, 0),\r\n                subjects:[sprite], //sprite is the subject of this Force, sprite is pulled by this force\r\n                clasticObjects:[] //an empty array of collideable objects\r\n\r\n            }));\r\n\r\n\r\n            sprite.onUpdate(function(){\r\n\r\n\r\n            });\r\n\r\n        },\r\n\r\n        medium:function(sprite)\r\n        {\r\n\r\n            var gravity = Gamestack.add(new Force({\r\n                name:\"medium_grav\",\r\n                accel:0.2,\r\n                max:new Vector3(0, 7.5, 0),\r\n                subjects:[sprite], //sprite is the subject of this Force, sprite is pulled by this force\r\n                clasticObjects:[] //an empty array of collideable objects\r\n\r\n            }));\r\n\r\n\r\n            sprite.onUpdate(function(){\r\n\r\n\r\n            });\r\n\r\n        },\r\n\r\n\r\n        strong:function(sprite)\r\n        {\r\n\r\n            var gravity = Gamestack.add(new Force({\r\n                name:\"strong_grav\",\r\n                accel:0.4,\r\n                max:new Vector3(0, 10.5, 0),\r\n                subjects:[sprite], //sprite is the subject of this Force, sprite is pulled by this force\r\n                clasticObjects:[] //an empty array of collideable objects\r\n\r\n            }));\r\n\r\n            sprite.onUpdate(function(){\r\n\r\n\r\n            });\r\n\r\n        },\r\n\r\n        very_strong:function(sprite)\r\n        {\r\n\r\n            var gravity = Gamestack.add(new Force({\r\n                name:\"strong_grav\",\r\n                accel:0.5,\r\n                max:new Vector3(0, 12.5, 0),\r\n                subjects:[sprite], //sprite is the subject of this Force, sprite is pulled by this force\r\n                clasticObjects:[] //an empty array of collideable objects\r\n\r\n            }));\r\n\r\n            sprite.onUpdate(function(){\r\n\r\n\r\n            });\r\n\r\n        },\r\n\r\n    },\r\n\r\n\r\n    ControllerStickMotion: {\r\n\r\n        player_move_x: function (sprite) {\r\n\r\n            alert('applying initializer');\r\n\r\n            console.log('side_scroll_player_run:init-ing');\r\n\r\n            let __lib = Gamestack || Quick2d;\r\n\r\n            Gamestack.GamepadAdapter.on('stick_left', 0, function (x, y) {\r\n\r\n                console.log('stick-x:' + x);\r\n\r\n                if (Math.abs(x) < 0.2) {\r\n                    return 0;\r\n                }\r\n\r\n                var accel = 0.2; //todo : options for accel\r\n                var max = 7;\r\n\r\n                sprite.accelX(accel, x * max);\r\n\r\n                if (x < -0.2) {\r\n                    sprite.flipX = true;\r\n\r\n                }\r\n                else if (x > 0.2) {\r\n                    sprite.flipX = false;\r\n\r\n                }\r\n\r\n            });\r\n\r\n            sprite.onUpdate(function (spr) {\r\n\r\n                spr.decelX(0.1);\r\n\r\n                if (!spr.__falling) {\r\n                    spr.decelY(0.2)\r\n                }\r\n                ;\r\n\r\n            });\r\n\r\n\r\n        },\r\n\r\n        player_move_xy: function (sprite) {\r\n\r\n            alert('applying initializer');\r\n\r\n            console.log('side_scroll_player_run:init-ing');\r\n\r\n            let __lib = Gamestack || Quick2d;\r\n\r\n            Gamestack.GamepadAdapter.on('stick_left', 0, function (x, y) {\r\n\r\n                console.log('stick-x:' + x);\r\n\r\n                if (Math.abs(x) < 0.2) {\r\n                    x = 0;\r\n                }\r\n\r\n                if (Math.abs(y) < 0.2) {\r\n                    y = 0;\r\n                }\r\n\r\n                var accel = 0.2; //todo : options for accel\r\n                var max = 7;\r\n\r\n                sprite.accelX(accel, x * max);\r\n\r\n                sprite.accelY(accel, y * max);\r\n\r\n                if (x < -0.2) {\r\n                    sprite.flipX = true;\r\n\r\n                }\r\n                else if (x > 0.2) {\r\n                    sprite.flipX = false;\r\n\r\n                }\r\n\r\n            });\r\n\r\n            sprite.onUpdate(function (spr) {\r\n\r\n                sprite.decel(sprite.speed, 'x', 0.1);\r\n\r\n                sprite.decel(sprite.speed, 'y', 0.1);\r\n\r\n            });\r\n\r\n\r\n        },\r\n\r\n        player_rotate_x: function (sprite) {\r\n\r\n            let __lib = Gamestack || Quick2d;\r\n\r\n            Gamestack.GamepadAdapter.on('stick_left', 0, function (x, y) {\r\n\r\n                console.log('stick-x:' + x);\r\n\r\n                if (Math.abs(x) < 0.2) {\r\n                    return 0;\r\n                }\r\n\r\n                var accel = 0.25; //todo : options for accel\r\n                var max = 7;\r\n\r\n                sprite.accel(sprite.rot_speed, 'x', accel, x * max);\r\n\r\n                if (x < -0.2) {\r\n                    sprite.flipX = true;\r\n\r\n                }\r\n                else if (x > 0.2) {\r\n                    sprite.flipX = false;\r\n\r\n                }\r\n\r\n            });\r\n\r\n            sprite.onUpdate(function (spr) {\r\n\r\n                sprite.decel(sprite.rot_speed, 'x', 0.1);\r\n\r\n                if (!spr.__falling) {\r\n                    spr.decelY(0.2)\r\n                }\r\n                ;\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n};\r\n\r\n\r\nGamestack.options = Gamestack.options || {};\r\n\r\nGamestack.options.SpriteInitializers = SpriteInitializersOptions;;\r\n/**\r\n * Takes arguments of x, y, and (optionally) z, instantiates Vector object\r\n\r\n <ul>\r\n <li>Optional: use a Vector as the 'x' argument, and instantiate new distinct Vector from the argument</li>\r\n </ul>\r\n\r\n * @param   {number} x the x coordinate\r\n * @param   {number} y the y coordinate\r\n * @param   {number} z the z coordinate\r\n * @returns {Vector} a Vector object\r\n */\r\n\r\n\r\nclass Vector {\r\n    constructor(x, y, z, r) {\r\n\r\n        if(typeof(x) == 'object' && x.hasOwnProperty('x') && x.hasOwnProperty('y')) //optionally pass vector3\r\n        {\r\n            this.x = x.x;\r\n            this.y = x.y;\r\n            this.z = x.z || 0;\r\n\r\n            if(this.z == null)\r\n            {\r\n                this.z = 0;\r\n            }\r\n\r\n            return this;\r\n        }\r\n\r\n        if(z == null){z = 0;}\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.r = r;\r\n\r\n    }\r\n\r\n\r\n    sub(v)\r\n    {\r\n        if(typeof(v) == 'number')\r\n        {\r\n            v = {x:v, y:v, z:v};\r\n        };\r\n\r\n        return new Vector(this.x - v.x, this.y - v.y, this.z - v.z);\r\n\r\n    }\r\n\r\n    add(v)\r\n    {\r\n        if(typeof(v) == 'number')\r\n        {\r\n            v = {x:v, y:v, z:v};\r\n        };\r\n\r\n        return new Vector(this.x + v.x, this.y + v.y, this.z + v.z);\r\n\r\n    }\r\n\r\n    mult(v)\r\n    {\r\n        if(typeof(v) == 'number')\r\n        {\r\n            v = {x:v, y:v, z:v};\r\n        };\r\n\r\n        return new Vector(this.x * v.x, this.y * v.y, this.z * v.z);\r\n\r\n    }\r\n    div(v)\r\n    {\r\n        if(typeof(v) == 'number')\r\n        {\r\n            v = {x:v, y:v, z:v};\r\n        };\r\n\r\n        return new Vector(this.x / v.x, this.y / v.y, this.z / v.z);\r\n    }\r\n\r\n    round()\r\n    {\r\n        return new Vector(Math.round(this.x), Math.round(this.y), Math.round(this.z));\r\n\r\n    }\r\n    floor()\r\n    {\r\n        return new Vector(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z));\r\n\r\n    }\r\n    ceil()\r\n    {\r\n        return new Vector(Math.ceil(this.x), Math.ceil(this.y), Math.ceil(this.z));\r\n\r\n    }\r\n\r\n    equals(v)\r\n    {\r\n\r\n        return this.x == v.x && this.y == v.y && this.z == v.z;\r\n    }\r\n\r\n    trig_distance_xy(v)\r\n    {\r\n\r\n        var dist = this.sub(v);\r\n\r\n        return  Math.sqrt( dist.x * dist.x + dist.y * dist.y );\r\n\r\n    }\r\n\r\n    diff()\r\n    {\r\n        //TODO:this function\r\n\r\n\r\n    }\r\n\r\n    abs_diff()\r\n    {\r\n        //TODO:this function\r\n\r\n    }\r\n\r\n    is_between(v1, v2)\r\n    {\r\n       //TODO : overlap vectors return boolean\r\n\r\n        return this.x >= v1.x && this.x <= v2.x &&\r\n            this.y >= v1.y && this.y <= v2.y &&\r\n            this.z >= v1.z && this.z <= v2.z;\r\n\r\n\r\n    }\r\n\r\n}\r\n;\r\n\r\nlet Vector3 = Vector, Pos = Vector, Size = Vector, Position = Vector, Vector2 = Vector, Rotation = Vector;\r\n\r\n\r\nGamestack.Vector = Vector;\r\n\r\n\r\n//The above are a list of synonymous expressions for Vector. All of these do the same thing in this library (store x,y,z values)\r\n"]}