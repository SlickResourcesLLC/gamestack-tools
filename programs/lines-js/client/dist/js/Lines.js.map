{"version":3,"sources":["../../../ecma/Lines/concat/Lines.js"],"names":["Lines","each","obj","callback","x","VectorBounds","Rectangle","Curves","linearNone","t","easeInQuadratic","easeOutQuadratic","easeInOutQuadratic","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuartic","easeOutQuartic","easeInOutQuartic","easeInQuintic","easeOutQuintic","easeInOutQuintic","Gamestack","Shapes","circle","radius","freq","points","fill","center","square","s","console","error","size","Vector","width","w","height","h","start","rect","triangle","base","Line","args","curve_string","curve","get_curve_from_string","motion_curve","TWEEN","Easing","Linear","None","position","is_highlighted","offset","pointDist","rotation","iterations","growth","curve_options","n","p","num","minPointDist","c","get_curve_string","d","duration","r","found","length","equals","str","toLowerCase","replace","curveCall","existing_canvas","canvas","document","createElement","style","id","setAttribute","background","context","getContext","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","y","position_old","test_graph_size","get_line_segment","current_point","target","add","curveMethod","ptrack","dist","sub","pct","log","Math","round","trig_distance_xy","GeoMath","rotatePointsXY","push","__inst","yTrack","mult","origin","t_points","next_segment","slice","t_len","ctx","point","point_highlighter","sqrt","Vector2","Canvas","draw","angle","theta","PI","cos","sin","z","hasOwnProperty","v","floor","ceil","v1","v2","Vector3","Pos","Size","Position","Rotation"],"mappings":";;;;;;;;AAAA;;;;AAIA,SAASA,KAAT,GACA;AACI,aAAKC,IAAL,GAAY,UAASC,GAAT,EAAcC,QAAd,EACZ;AACI,qBAAI,IAAIC,CAAR,IAAaF,GAAb,EACA;;AAEIC,iCAASC,CAAT,EAAYF,IAAIE,CAAJ,CAAZ;AAEH;AACJ,SARD;AAUH;;AAKD;AACA,IAAIC,eAAeC,SAAnB;;AAEA,IAAIC,SAAS,EAAE;AACX;AACAC,oBAAY,oBAAUC,CAAV,EAAa;AAAE,uBAAOA,CAAP;AAAU,SAF5B;AAGT;AACAC,yBAAiB,yBAAUD,CAAV,EAAa;AAAE,uBAAOA,IAAEA,CAAT;AAAY,SAJnC;AAKT;AACAE,0BAAkB,0BAAUF,CAAV,EAAa;AAAE,uBAAOA,KAAG,IAAEA,CAAL,CAAP;AAAgB,SANxC;AAOT;AACAG,4BAAoB,4BAAUH,CAAV,EAAa;AAAE,uBAAOA,IAAE,EAAF,GAAO,IAAEA,CAAF,GAAIA,CAAX,GAAe,CAAC,CAAD,GAAG,CAAC,IAAE,IAAEA,CAAL,IAAQA,CAAjC;AAAoC,SAR9D;AAST;AACAI,qBAAa,qBAAUJ,CAAV,EAAa;AAAE,uBAAOA,IAAEA,CAAF,GAAIA,CAAX;AAAc,SAVjC;AAWT;AACAK,sBAAc,sBAAUL,CAAV,EAAa;AAAE,uBAAQ,EAAEA,CAAH,GAAMA,CAAN,GAAQA,CAAR,GAAU,CAAjB;AAAoB,SAZxC;AAaT;AACAM,wBAAgB,wBAAUN,CAAV,EAAa;AAAE,uBAAOA,IAAE,EAAF,GAAO,IAAEA,CAAF,GAAIA,CAAJ,GAAMA,CAAb,GAAiB,CAACA,IAAE,CAAH,KAAO,IAAEA,CAAF,GAAI,CAAX,KAAe,IAAEA,CAAF,GAAI,CAAnB,IAAsB,CAA9C;AAAiD,SAdvE;AAeT;AACAO,uBAAe,uBAAUP,CAAV,EAAa;AAAE,uBAAOA,IAAEA,CAAF,GAAIA,CAAJ,GAAMA,CAAb;AAAgB,SAhBrC;AAiBT;AACAQ,wBAAgB,wBAAUR,CAAV,EAAa;AAAE,uBAAO,IAAG,EAAEA,CAAH,GAAMA,CAAN,GAAQA,CAAR,GAAUA,CAAnB;AAAsB,SAlB5C;AAmBT;AACAS,0BAAkB,0BAAUT,CAAV,EAAa;AAAE,uBAAOA,IAAE,EAAF,GAAO,IAAEA,CAAF,GAAIA,CAAJ,GAAMA,CAAN,GAAQA,CAAf,GAAmB,IAAE,IAAG,EAAEA,CAAL,GAAQA,CAAR,GAAUA,CAAV,GAAYA,CAAxC;AAA2C,SApBnE;AAqBT;AACAU,uBAAe,uBAAUV,CAAV,EAAa;AAAE,uBAAOA,IAAEA,CAAF,GAAIA,CAAJ,GAAMA,CAAN,GAAQA,CAAf;AAAkB,SAtBvC;AAuBT;AACAW,wBAAgB,wBAAUX,CAAV,EAAa;AAAE,uBAAO,IAAG,EAAEA,CAAH,GAAMA,CAAN,GAAQA,CAAR,GAAUA,CAAV,GAAYA,CAArB;AAAwB,SAxB9C;AAyBT;AACAY,0BAAkB,0BAAUZ,CAAV,EAAa;AAAE,uBAAOA,IAAE,EAAF,GAAO,KAAGA,CAAH,GAAKA,CAAL,GAAOA,CAAP,GAASA,CAAT,GAAWA,CAAlB,GAAsB,IAAE,KAAI,EAAEA,CAAN,GAASA,CAAT,GAAWA,CAAX,GAAaA,CAAb,GAAeA,CAA9C;AAAiD;AA1BzE,CAAb;;AA6BAa,UAAUf,MAAV,GAAmBA,MAAnB;;AAEA,IAAIgB,SAAS;;AAETC,gBAAO,gBAASC,MAAT,EAAiBC,IAAjB,EAAuB;;AAE1B,uBAAO;;AAEHD,gCAAOA,MAFJ;;AAIHE,gCAAO,EAJJ;;AAMHC,8BAAK,cAASC,MAAT,EAAiBH,IAAjB,EACL,CAIC;;AAXE,iBAAP;AAcH,SAlBQ;;AAoBTI,gBAAO,gBAASC,CAAT,EAAYL,IAAZ,EACP;AACIM,wBAAQC,KAAR,CAAc,2CAAd;;AAEA,uBAAM;;AAEFC,8BAAK,IAAIC,MAAJ,CAAWJ,CAAX,EAAcA,CAAd,CAFH;;AAIFK,+BAAMC,CAJJ;;AAMFC,gCAAOC,CANL;;AAQFb,8BAAKA,IARH;;AAUFC,gCAAO,EAVL;;AAYFC,8BAAK,cAASY,KAAT,EAAgBd,IAAhB,EACL,CAGC;AAhBC,iBAAN;AAmBH,SA3CQ;;AA6CTe,cAAK,cAASJ,CAAT,EAAYE,CAAZ,EAAeb,IAAf,EACL;AACIM,wBAAQC,KAAR,CAAc,mCAAd;;AAEA,uBAAM;;AAEFC,8BAAK,IAAIC,MAAJ,CAAWE,CAAX,EAAcE,CAAd,CAFH;;AAIFH,+BAAMC,CAJJ;;AAMFC,gCAAOC,CANL;;AAQFb,8BAAKA,IARH;;AAUFC,gCAAO,EAVL;;AAYFC,8BAAK,cAASY,KAAT,EAAgBd,IAAhB,EACL,CAGC;AAhBC,iBAAN;AAmBH,SApEQ;;AAsETgB,kBAAS,kBAASC,IAAT,EAAeJ,CAAf,EAAkBb,IAAlB,EACT;;AAEIM,wBAAQC,KAAR,CAAc,mCAAd;;AAEA,uBAAM;;AAEFU,8BAAKA,IAFH;;AAIFL,gCAAOA,MAJL;;AAMFZ,8BAAKA,IANH;;AAQFC,gCAAO,EARL;;AAUFC,8BAAK,cAASY,KAAT,EAAgBd,IAAhB,EACL,CAGC;AAdC,iBAAN;AAiBH;AA5FQ,CAAb;;AA+FAJ,UAAUC,MAAV,GAAmBA,MAAnB;;AAEA;;;;;;;;;;;;;;;;;;;IAmBMqB,I;AAEF,wBACA;AAAA,oBADYC,IACZ,uEADmB,EACnB;;AAAA;;AAEI,qBAAKC,YAAL,GAAoBD,KAAKC,YAAL,IAAqB,aAAzC;;AAEA,qBAAKC,KAAL,GAAa,KAAKC,qBAAL,CAA2B,KAAKF,YAAhC,CAAb;;AAEA,qBAAKG,YAAL,GAAoBJ,KAAKI,YAAL,IAAqBC,MAAMC,MAAN,CAAaC,MAAb,CAAoBC,IAA7D;;AAEA,oBAAG,OAAOR,KAAKE,KAAZ,IAAsB,UAAzB,EACA;AACI,6BAAKA,KAAL,GAAaF,KAAKE,KAAlB;AACH;;AAED,qBAAKpB,MAAL,GAAc,EAAd;;AAEA,qBAAK2B,QAAL,GAAgBT,KAAKS,QAAL,IAAkB,IAAInB,MAAJ,EAAlC;;AAEA,qBAAKoB,cAAL,GAAsBV,KAAKU,cAAL,IAAuB,KAA7C;;AAEA,qBAAKC,MAAL,GAAcX,KAAKW,MAAL,IAAe,IAAIrB,MAAJ,EAA7B;;AAEA,qBAAKsB,SAAL,GAAiB,CAAjB;;AAEA,qBAAKvB,IAAL,GAAYW,KAAKX,IAAL,IAAa,IAAIC,MAAJ,EAAzB;;AAEA,qBAAKuB,QAAL,GAAgBb,KAAKa,QAAL,IAAiB,CAAjC;;AAEA,qBAAKC,UAAL,GAAkB,CAAlB;;AAEA,qBAAKC,MAAL,GAAcf,KAAKe,MAAL,IAAe,GAA7B;;AAEA,qBAAKC,aAAL,GAAqBtD,MAArB;AAEH;;;;2CAEUuD,C,EACX;;AAEG,6BAAKH,UAAL,GAAkBG,CAAlB;AACA,+BAAO,IAAP;AACF;;;uCAEMA,C,EACP;AACI,6BAAKF,MAAL,GAAcE,CAAd;;AAEA,+BAAO,IAAP;AAEH;;;oCAEGC,C,EACJ;;AAEI,6BAAKT,QAAL,GAAgBS,CAAhB;AACA,+BAAO,IAAP;AACH;;;0CAESC,G,EACV;AACI,6BAAKC,YAAL,GAAoBD,GAApB;AACA,+BAAO,IAAP;AACH;;;sCAEKE,C,EACN;AACI,6BAAKnB,KAAL,GAAamB,CAAb;AACA,6BAAKpB,YAAL,GAAoB,KAAKqB,gBAAL,CAAsBD,CAAtB,CAApB;AACA,+BAAO,IAAP;AACH;;;yCAEQE,C,EACT;AACI,6BAAKC,QAAL,GAAgBD,CAAhB;;AAEA,+BAAO,IAAP;AACH;;;yCACQE,C,EACT;AACI,6BAAKZ,QAAL,GAAgBY,CAAhB;AACA,+BAAO,IAAP;AACH;;;qCACIhB,Q,EACL;;AAEI,4BAAIiB,QAAQ,KAAZ;;AAEA,6BAAI,IAAInE,IAAI,CAAZ,EAAeA,IAAI,KAAKuB,MAAL,CAAY6C,MAA/B,EAAuCpE,GAAvC,EACA;;AAEI,oCAAGkD,SAASmB,MAAT,CAAgB,KAAK9C,MAAL,CAAYvB,CAAZ,CAAhB,KAAoCA,IAAI,KAAKuB,MAAL,CAAY6C,MAAZ,GAAqB,CAAhE,EACA;AACID,gDAAQ,IAAR;AACA,+CAAO,IAAIpC,MAAJ,CAAW,KAAKR,MAAL,CAAYvB,IAAI,CAAhB,CAAX,CAAP;AAEH;;AAED,oCAAGA,KAAG,KAAKuB,MAAL,CAAY6C,MAAZ,GAAqB,CAAxB,IAA6B,CAACD,KAAjC,EACA;;AAEI,+CAAO,IAAIpC,MAAJ,CAAW,KAAKR,MAAL,CAAY,CAAZ,CAAX,CAAP;AAEH;AAEJ;AAEJ;;;sDAEqB+C,G,EACtB;;AAEI,6BAAI,IAAItE,CAAR,IAAa,KAAKyD,aAAlB,EAAiC;;AAE7B,oCAAGzD,EAAEuE,WAAF,MAAmBD,IAAIC,WAAJ,GAAkBC,OAAlB,CAA0B,GAA1B,EAA+B,EAA/B,CAAtB,EACA;AACI,+CAAO,KAAKf,aAAL,CAAmBzD,CAAnB,CAAP;AAEH;AAEJ;AAEJ;;;iDAGgB8D,C,EACjB;AACI,6BAAI,IAAI9D,CAAR,IAAa,KAAKyD,aAAlB,EAAiC;;AAE7B,oCAAG,KAAKA,aAAL,CAAmBzD,CAAnB,KAAyB8D,CAA5B,EACA;AACI,+CAAO9D,CAAP;AAEH;AAEJ;AAEJ;;;+CAEcyE,S,EAAWC,e,EAAiB;;AAEvC,4BAAIC,SAASD,mBAAmBE,SAASC,aAAT,CAAuB,QAAvB,CAAhC;;AAEAF,+BAAOG,KAAP,CAAa5B,QAAb,GAAwB,UAAxB;;AAEAyB,+BAAOI,EAAP,GAAY,eAAZ;;AAEAJ,+BAAOK,YAAP,CAAoB,OAApB,EAA6B,cAA7B;;AAEAL,+BAAO3C,KAAP,GAAe,GAAf;AACA2C,+BAAOzC,MAAP,GAAgB,GAAhB;;AAEAyC,+BAAOG,KAAP,CAAaG,UAAb,GAA0B,OAA1B;;AAEA,4BAAIC,UAAUP,OAAOQ,UAAP,CAAkB,IAAlB,CAAd;AACAD,gCAAQE,SAAR,GAAoB,YAApB;AACAF,gCAAQG,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,GAAvB,EAA4B,GAA5B;;AAEAH,gCAAQI,SAAR,GAAoB,GAApB;AACAJ,gCAAQK,WAAR,GAAsB,kBAAtB;;AAEAL,gCAAQM,SAAR;AACAN,gCAAQO,MAAR,CAAe,CAAf,EAAkB,EAAlB;AACAP,gCAAQQ,MAAR,CAAe,GAAf,EAAoB,EAApB;AACAR,gCAAQO,MAAR,CAAe,CAAf,EAAkB,EAAlB;AACAP,gCAAQQ,MAAR,CAAe,GAAf,EAAoB,EAApB;AACAR,gCAAQS,SAAR;AACAT,gCAAQU,MAAR;;AAEAV,gCAAQI,SAAR,GAAoB,CAApB;AACAJ,gCAAQK,WAAR,GAAsB,kBAAtB;;AAEA,4BAAIrC,WAAW,EAAClD,GAAG,CAAJ,EAAO6F,GAAG,EAAV,EAAf;AACA,4BAAIC,eAAe,EAAC9F,GAAG,CAAJ,EAAO6F,GAAG,EAAV,EAAnB;;AAEA,6BAAKE,eAAL,GAAuB,IAAIhE,MAAJ,CAAW,GAAX,EAAgB,KAAI,EAApB,CAAvB;;AAED,4BAAIR,SAAS,KAAKyE,gBAAL,CAAsB,KAAKD,eAA3B,EAA4C,CAA5C,EAA+CtB,SAA/C,CAAb;;AAEC,6BAAI,IAAIzE,CAAR,IAAauB,MAAb,EACA;AACI,oCAAI2B,WAAW,IAAInB,MAAJ,CAAWR,OAAOvB,CAAP,EAAUA,CAArB,EAAwB,KAAK+F,eAAL,CAAqBF,CAArB,GAAyB,EAAzB,GAA8BtE,OAAOvB,CAAP,EAAU6F,CAAhE,CAAf;;AAEAX,wCAAQM,SAAR;AACAN,wCAAQO,MAAR,CAAeK,aAAa9F,CAA5B,EAA+B8F,aAAaD,CAA5C;AACAX,wCAAQQ,MAAR,CAAexC,SAASlD,CAAxB,EAA2BkD,SAAS2C,CAApC;AACAX,wCAAQS,SAAR;AACAT,wCAAQU,MAAR;;AAEAE,6CAAa9F,CAAb,GAAiBkD,SAASlD,CAA1B;AACA8F,6CAAaD,CAAb,GAAiB3C,SAAS2C,CAA1B;AACH;;AAED,+BAAOlB,MAAP;AACH;;;iDAEgB7C,I,EAAMuB,S,EAAWoB,S,EAClC;AACI,4BAAG,CAAC3C,IAAD,IAAS,CAACuB,SAAb,EAAwB;AACxB;;AAEI,+CAAO,CAAP;AACH;;AAED,4BAAI9B,SAAS,EAAb;;AAEA,4BAAI0E,gBAAgB,IAAIlE,MAAJ,CAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAApB;;AAEA,4BAAImB,WAAW,IAAInB,MAAJ,CAAWkE,aAAX,CAAf;AAAA,4BAEIC,SAAS,IAAInE,MAAJ,CAAWmB,SAASiD,GAAT,CAAarE,IAAb,CAAX,CAFb;AAAA,4BAIIM,QAAQ,IAAIL,MAAJ,CAAWmB,QAAX,CAJZ;AAAA,4BAMIkD,cAAc3B,SANlB;AAAA,4BAQI4B,SAAS,IAAItE,MAAJ,CAAWK,KAAX,CARb;;AAUA,6BAAKc,SAASlD,CAAT,GAAakD,SAASlD,CAA3B,EAA8BkD,SAASlD,CAAT,GAAakG,OAAOlG,CAAlD,EAAqDkD,SAASlD,CAAT,IAAc,CAAnE,EAAsE;;AAElE,oCAAIsG,OAAOpD,SAASqD,GAAT,CAAanE,KAAb,CAAX;;AAEA,oCAAIoE,MAAMF,KAAKtG,CAAL,GAAS8B,KAAK9B,CAAxB;;AAEA4B,wCAAQ6E,GAAR,CAAYD,GAAZ;;AAEAtD,yCAAS2C,CAAT,GAAaa,KAAKC,KAAL,CAAWP,YAAYI,GAAZ,IAAmB1E,KAAK+D,CAAnC,CAAb;;AAEA,oCAAIQ,OAAOO,gBAAP,CAAwB1D,QAAxB,KAAqCG,SAAzC,EAAoD;;AAEhD,4CAAIM,IAAI,IAAI5B,MAAJ,CAAWb,UAAU2F,OAAV,CAAkBC,cAAlB,CAAiC5D,SAASlD,CAA1C,EAA6CkD,SAAS2C,CAAtD,EAAyD,CAAzD,CAAX,CAAR;;AAEAtE,+CAAOwF,IAAP,CAAYpD,CAAZ;;AAEAsC,wDAAgB,IAAIlE,MAAJ,CAAWmB,QAAX,CAAhB;;AAEAmD,iDAAS,IAAItE,MAAJ,CAAWkE,aAAX,CAAT;AAEH;AACJ;;AAED,+BAAO1E,MAAP;AAEH;;;qCAEIO,I,EAAMuB,S,EACX;;AAEI,4BAAG,CAACvB,IAAD,IAAS,CAACuB,SAAb,EAAwB;AACxB;;AAEI,+CAAO,CAAP;AACH;;AAED,6BAAKvB,IAAL,GAAYA,IAAZ;;AAEA,6BAAKuB,SAAL,GAAiBA,SAAjB;;AAEA,4BAAI2D,SAAS,IAAb;;AAEA,6BAAKzF,MAAL,GAAc,EAAd;;AAEA,4BAAI0E,gBAAgB,IAAIlE,MAAJ,CAAW,KAAKmB,QAAhB,CAApB;AAAA,4BAA+C+D,SAAS,CAAxD;;AAEA,6BAAI,IAAIjH,IAAG,CAAX,EAAcA,KAAK,KAAKuD,UAAxB,EAAoCvD,GAApC,EAAyC;;AAErC,oCAAIkD,WAAW,IAAInB,MAAJ,CAAWkE,aAAX,CAAf;AAAA,oCAEIC,SAAS,IAAInE,MAAJ,CAAWmB,SAASiD,GAAT,CAAarE,IAAb,CAAX,CAFb;AAAA,oCAIIM,QAAQ,IAAIL,MAAJ,CAAWmB,QAAX,CAJZ;AAAA,oCAMIkD,cAAc,KAAKzD,KANvB;AAAA,oCAQI0D,SAAS,IAAItE,MAAJ,CAAWK,KAAX,CARb;;AAUA,qCAAKc,SAASlD,CAAT,GAAakD,SAASlD,CAA3B,EAA8BkD,SAASlD,CAAT,GAAakG,OAAOlG,CAAlD,EAAqDkD,SAASlD,CAAT,IAAc,CAAnE,EAAsE;;AAElE,4CAAIsG,OAAOpD,SAASqD,GAAT,CAAanE,KAAb,CAAX;;AAEA,4CAAIoE,MAAMF,KAAKtG,CAAL,GAAS8B,KAAK9B,CAAxB;;AAEAkD,iDAAS2C,CAAT,GAAazD,MAAMyD,CAAN,GAAWa,KAAKC,KAAL,CAAWP,YAAYI,GAAZ,IAAmB1E,KAAK+D,CAAnC,CAAxB;;AAEA,4CAAII,cAAcW,gBAAd,CAA+B1D,QAA/B,KAA4C,KAAKG,SAArD,EAAgE;;AAE5D,oDAAIM,IAAI,IAAI5B,MAAJ,CAAWb,UAAU2F,OAAV,CAAkBC,cAAlB,CAAiC5D,SAASlD,CAA1C,EAA6CkD,SAAS2C,CAAtD,EAAyD,KAAKvC,QAA9D,CAAX,CAAR;;AAEA,qDAAK/B,MAAL,CAAYwF,IAAZ,CAAiBpD,CAAjB;;AAEAsC,gEAAgB,IAAIlE,MAAJ,CAAWmB,QAAX,CAAhB;AAEH;AACJ;;AAEDpB,uCAAOA,KAAKoF,IAAL,CAAU,KAAK1D,MAAf,CAAP;AAGH;AACJ;;;0CAES2D,M,EACV;;AAEI,4BAAIC,WAAW,EAAf;;AAEA,6BAAI,IAAIpH,IAAI,CAAZ,EAAeA,IAAI,KAAKuB,MAAL,CAAY6C,MAA/B,EAAuCpE,GAAvC,EAA4C;;AAExCoH,yCAASL,IAAT,CAAc,KAAKxF,MAAL,CAAYvB,CAAZ,EAAemG,GAAf,CAAmBgB,MAAnB,CAAd;AAEH;;AAED,+BAAOC,QAAP;AAEH;;;4CAEWC,Y,EAAcjE,M,EAC1B;AACI,6BAAI,IAAIpD,IAAI,CAAZ,EAAeA,IAAIqH,aAAajD,MAAhC,EAAwCpE,GAAxC,EAA6C;;AAEzCqH,6CAAarH,CAAb,IAAkB,IAAI+B,MAAJ,CAAWsF,aAAarH,CAAb,CAAX,EAA4BmG,GAA5B,CAAgC/C,MAAhC,CAAlB;;AAEA,qCAAK7B,MAAL,CAAYwF,IAAZ,CAAiBM,aAAarH,CAAb,CAAjB;AAEH;AAEJ;;;oDAGmBuB,M,EACpB;;AAEI,4BAAI6F,WAAW7F,OAAO+F,KAAP,EAAf;AAAA,4BAA+BC,QAAQH,SAAShD,MAAhD;;AAEA,6BAAI,IAAIpE,IAAI,CAAZ,EAAeA,IAAIuB,OAAO6C,MAA1B,EAAkCpE,GAAlC,EAAuC;;AAEnCoH,yCAASG,QAAQvH,CAAjB,EAAoBA,CAApB,GAAwBuB,OAAOvB,CAAP,EAAUA,CAAlC;AAEH;;AAED,+BAAOoH,QAAP;AAEH;;;0CAESD,M,EAAQK,G,EAClB;;AAEIA,8BAAMA,OAAOtG,UAAUsG,GAAvB;;AAEA,6BAAI,IAAIxH,CAAR,IAAa,KAAKuB,MAAlB,EACA;;AAEI,oCAAIkG,QAAQN,OAAOhB,GAAP,CAAW,KAAK5E,MAAL,CAAYvB,CAAZ,CAAX,EAA2BuG,GAA3B,CAA+BrF,UAAUwG,iBAAV,CAA4B5F,IAA5B,CAAiCoF,IAAjC,CAAsC,GAAtC,CAA/B,CAAZ;;AAEA,oCAAIZ,OAAOmB,MAAMlB,GAAN,CAAUrF,UAAUwG,iBAAV,CAA4BxE,QAAtC,CAAX;;AAEA,oCAAIc,IAAI0C,KAAKiB,IAAL,CAAWrB,KAAKtG,CAAL,GAASsG,KAAKtG,CAAd,GAAkBsG,KAAKT,CAAL,GAASS,KAAKT,CAA3C,CAAR;;AAGA,oCAAG7B,KAAK,EAAR,EACA;AACI9C,kDAAUwG,iBAAV,CAA4BxE,QAA5B,GAAuC,IAAI0E,OAAJ,CAAYT,OAAOhB,GAAP,CAAW,KAAK5E,MAAL,CAAYvB,CAAZ,CAAX,EAA2BuG,GAA3B,CAA+BrF,UAAUwG,iBAAV,CAA4B5F,IAA5B,CAAiCoF,IAAjC,CAAsC,GAAtC,CAA/B,CAAZ,CAAvC;AACH;;AAGEW,uCAAOC,IAAP,CAAY5G,UAAUwG,iBAAtB,EAAyCF,GAAzC;AAEN;;AAED,+BAAO,IAAP;AAEH;;;;;;AAKL,IAAIX,UAAU;;AAENC,wBAAe,wBAAS9G,CAAT,EAAW6F,CAAX,EAAakC,KAAb,EAAoB;;AAE/B,oBAAIC,QAAQD,QAAMrB,KAAKuB,EAAX,GAAc,GAA1B;;AAEA,oBAAIR,QAAQ,EAAZ;AACAA,sBAAMzH,CAAN,GAAUA,IAAI0G,KAAKwB,GAAL,CAASF,KAAT,CAAJ,GAAsBnC,IAAIa,KAAKyB,GAAL,CAASH,KAAT,CAApC;AACAP,sBAAM5B,CAAN,GAAU7F,IAAI0G,KAAKyB,GAAL,CAASH,KAAT,CAAJ,GAAsBnC,IAAIa,KAAKwB,GAAL,CAASF,KAAT,CAApC;;AAEAP,sBAAMW,CAAN,GAAU,CAAV;;AAEA,uBAAOX,KAAP;AACH;;AAbK,CAAd;;AAiBAvG,UAAU2F,OAAV,GAAoBA,OAApB;AACA;AACA;;;;;;;;;;;;;IAcM9E,M;AACF,wBAAY/B,CAAZ,EAAe6F,CAAf,EAAkBuC,CAAlB,EAAqBlE,CAArB,EAAwB;AAAA;;AAEpB,oBAAG,QAAOlE,CAAP,yCAAOA,CAAP,MAAa,QAAb,IAAyBA,EAAEqI,cAAF,CAAiB,GAAjB,CAAzB,IAAkDrI,EAAEqI,cAAF,CAAiB,GAAjB,CAArD,EAA4E;AAC5E;AACI,qCAAKrI,CAAL,GAASA,EAAEA,CAAX;AACA,qCAAK6F,CAAL,GAAS7F,EAAE6F,CAAX;AACA,qCAAKuC,CAAL,GAASpI,EAAEoI,CAAF,IAAO,CAAhB;;AAEA,oCAAG,KAAKA,CAAL,IAAU,IAAb,EACA;AACI,6CAAKA,CAAL,GAAS,CAAT;AACH;;AAED,uCAAO,IAAP;AACH;;AAED,oBAAGA,KAAK,IAAR,EAAa;AAACA,4BAAI,CAAJ;AAAO;;AAErB,qBAAKpI,CAAL,GAASA,CAAT;AACA,qBAAK6F,CAAL,GAASA,CAAT;AACA,qBAAKuC,CAAL,GAASA,CAAT;AACA,qBAAKlE,CAAL,GAASA,CAAT;AAEH;;;;oCAGGoE,C,EACJ;AACI,4BAAG,OAAOA,CAAP,IAAa,QAAhB,EACA;AACIA,oCAAI,EAACtI,GAAEsI,CAAH,EAAMzC,GAAEyC,CAAR,EAAWF,GAAEE,CAAb,EAAJ;AACH;;AAED,+BAAO,IAAIvG,MAAJ,CAAW,KAAK/B,CAAL,GAASsI,EAAEtI,CAAtB,EAAyB,KAAK6F,CAAL,GAASyC,EAAEzC,CAApC,EAAuC,KAAKuC,CAAL,GAASE,EAAEF,CAAlD,CAAP;AAEH;;;oCAEGE,C,EACJ;AACI,4BAAG,OAAOA,CAAP,IAAa,QAAhB,EACA;AACIA,oCAAI,EAACtI,GAAEsI,CAAH,EAAMzC,GAAEyC,CAAR,EAAWF,GAAEE,CAAb,EAAJ;AACH;;AAED,+BAAO,IAAIvG,MAAJ,CAAW,KAAK/B,CAAL,GAASsI,EAAEtI,CAAtB,EAAyB,KAAK6F,CAAL,GAASyC,EAAEzC,CAApC,EAAuC,KAAKuC,CAAL,GAASE,EAAEF,CAAlD,CAAP;AAEH;;;qCAEIE,C,EACL;AACI,4BAAG,OAAOA,CAAP,IAAa,QAAhB,EACA;AACIA,oCAAI,EAACtI,GAAEsI,CAAH,EAAMzC,GAAEyC,CAAR,EAAWF,GAAEE,CAAb,EAAJ;AACH;;AAED,+BAAO,IAAIvG,MAAJ,CAAW,KAAK/B,CAAL,GAASsI,EAAEtI,CAAtB,EAAyB,KAAK6F,CAAL,GAASyC,EAAEzC,CAApC,EAAuC,KAAKuC,CAAL,GAASE,EAAEF,CAAlD,CAAP;AAEH;;;oCACGE,C,EACJ;AACI,4BAAG,OAAOA,CAAP,IAAa,QAAhB,EACA;AACIA,oCAAI,EAACtI,GAAEsI,CAAH,EAAMzC,GAAEyC,CAAR,EAAWF,GAAEE,CAAb,EAAJ;AACH;;AAED,+BAAO,IAAIvG,MAAJ,CAAW,KAAK/B,CAAL,GAASsI,EAAEtI,CAAtB,EAAyB,KAAK6F,CAAL,GAASyC,EAAEzC,CAApC,EAAuC,KAAKuC,CAAL,GAASE,EAAEF,CAAlD,CAAP;AACH;;;wCAGD;AACI,+BAAO,IAAIrG,MAAJ,CAAW2E,KAAKC,KAAL,CAAW,KAAK3G,CAAhB,CAAX,EAA+B0G,KAAKC,KAAL,CAAW,KAAKd,CAAhB,CAA/B,EAAmDa,KAAKC,KAAL,CAAW,KAAKyB,CAAhB,CAAnD,CAAP;AAEH;;;wCAED;AACI,+BAAO,IAAIrG,MAAJ,CAAW2E,KAAK6B,KAAL,CAAW,KAAKvI,CAAhB,CAAX,EAA+B0G,KAAK6B,KAAL,CAAW,KAAK1C,CAAhB,CAA/B,EAAmDa,KAAK6B,KAAL,CAAW,KAAKH,CAAhB,CAAnD,CAAP;AAEH;;;uCAED;AACI,+BAAO,IAAIrG,MAAJ,CAAW2E,KAAK8B,IAAL,CAAU,KAAKxI,CAAf,CAAX,EAA8B0G,KAAK8B,IAAL,CAAU,KAAK3C,CAAf,CAA9B,EAAiDa,KAAK8B,IAAL,CAAU,KAAKJ,CAAf,CAAjD,CAAP;AAEH;;;uCAEME,C,EACP;;AAEI,+BAAO,KAAKtI,CAAL,IAAUsI,EAAEtI,CAAZ,IAAiB,KAAK6F,CAAL,IAAUyC,EAAEzC,CAA7B,IAAkC,KAAKuC,CAAL,IAAUE,EAAEF,CAArD;AACH;;;iDAEgBE,C,EACjB;;AAEI,4BAAIhC,OAAO,KAAKC,GAAL,CAAS+B,CAAT,CAAX;;AAEA,+BAAQ5B,KAAKiB,IAAL,CAAWrB,KAAKtG,CAAL,GAASsG,KAAKtG,CAAd,GAAkBsG,KAAKT,CAAL,GAASS,KAAKT,CAA3C,CAAR;AAEH;;;uCAGD;AACI;;;AAGH;;;2CAGD;AACI;;AAEH;;;2CAEU4C,E,EAAIC,E,EACf;AACG;;AAEC,+BAAO,KAAK1I,CAAL,IAAUyI,GAAGzI,CAAb,IAAkB,KAAKA,CAAL,IAAU0I,GAAG1I,CAA/B,IACH,KAAK6F,CAAL,IAAU4C,GAAG5C,CADV,IACe,KAAKA,CAAL,IAAU6C,GAAG7C,CAD5B,IAEH,KAAKuC,CAAL,IAAUK,GAAGL,CAFV,IAEe,KAAKA,CAAL,IAAUM,GAAGN,CAFnC;AAKH;;;;;;AAIL,IAAIO,UAAU5G,MAAd;AAAA,IAAsB6G,MAAM7G,MAA5B;AAAA,IAAoC8G,OAAO9G,MAA3C;AAAA,IAAmD+G,WAAW/G,MAA9D;AAAA,IAAsE6F,UAAU7F,MAAhF;AAAA,IAAwFgH,WAAWhH,MAAnG;;AAGAb,UAAUa,MAAV,GAAmBA,MAAnB;;AAGA","file":"Lines.js","sourcesContent":["/**@author\r\nJordan Edward Blake\r\n * */\r\n\r\nfunction Lines()\r\n{\r\n    this.each = function(obj, callback)\r\n    {\r\n        for(var x in obj)\r\n        {\r\n\r\n            callback(x, obj[x]);\r\n\r\n        }\r\n    };\r\n\r\n}\r\n\r\n\r\n\r\n\r\n;\r\nlet VectorBounds = Rectangle;\r\n\r\nvar Curves = { //ALL HAVE INPUT AND OUTPUT OF: 0-1.0\r\n    // no easing, no acceleration\r\n    linearNone: function (t) { return t },\r\n    // accelerating from zero velocity\r\n    easeInQuadratic: function (t) { return t*t },\r\n    // decelerating to zero velocity\r\n    easeOutQuadratic: function (t) { return t*(2-t) },\r\n    // acceleration until halfway, then deceleration\r\n    easeInOutQuadratic: function (t) { return t<.5 ? 2*t*t : -1+(4-2*t)*t },\r\n    // accelerating from zero velocity\r\n    easeInCubic: function (t) { return t*t*t },\r\n    // decelerating to zero velocity\r\n    easeOutCubic: function (t) { return (--t)*t*t+1 },\r\n    // acceleration until halfway, then deceleration\r\n    easeInOutCubic: function (t) { return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1 },\r\n    // accelerating from zero velocity\r\n    easeInQuartic: function (t) { return t*t*t*t },\r\n    // decelerating to zero velocity\r\n    easeOutQuartic: function (t) { return 1-(--t)*t*t*t },\r\n    // acceleration until halfway, then deceleration\r\n    easeInOutQuartic: function (t) { return t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t },\r\n    // accelerating from zero velocity\r\n    easeInQuintic: function (t) { return t*t*t*t*t },\r\n    // decelerating to zero velocity\r\n    easeOutQuintic: function (t) { return 1+(--t)*t*t*t*t },\r\n    // acceleration until halfway, then deceleration\r\n    easeInOutQuintic: function (t) { return t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t }\r\n}\r\n\r\nGamestack.Curves = Curves;\r\n\r\nvar Shapes = {\r\n\r\n    circle:function(radius, freq) {\r\n\r\n        return {\r\n\r\n            radius:radius,\r\n\r\n            points:[],\r\n\r\n            fill:function(center, freq)\r\n            {\r\n\r\n\r\n\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    square:function(s, freq)\r\n    {\r\n        console.error('STILL NEED TO BUILD THIS SQUARE IN GS-API');\r\n\r\n        return{\r\n\r\n            size:new Vector(s, s),\r\n\r\n            width:w,\r\n\r\n            height:h,\r\n\r\n            freq:freq,\r\n\r\n            points:[],\r\n\r\n            fill:function(start, freq)\r\n            {\r\n\r\n\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    rect:function(w, h, freq)\r\n    {\r\n        console.error('STILL NEED TO BUILD THIS TRIANGLE');\r\n\r\n        return{\r\n\r\n            size:new Vector(w, h),\r\n\r\n            width:w,\r\n\r\n            height:h,\r\n\r\n            freq:freq,\r\n\r\n            points:[],\r\n\r\n            fill:function(start, freq)\r\n            {\r\n\r\n\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    triangle:function(base, h, freq)\r\n    {\r\n\r\n        console.error('STILL NEED TO BUILD THIS TRIANGLE');\r\n\r\n        return{\r\n\r\n            base:base,\r\n\r\n            height:height,\r\n\r\n            freq:freq,\r\n\r\n            points:[],\r\n\r\n            fill:function(start, freq)\r\n            {\r\n\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n};\r\n\r\nGamestack.Shapes = Shapes;\r\n\r\n/**\r\n * Takes several args and returns Line object. Intended for curved-line / trajectory of Projectile Object.\r\n * @param   {Object} args object of arguments\r\n * @param   {Easing} args.curve the curve applied to line see TWEEN.Easing , limited options for immediate line-drawing\r\n * @param   {number} args.duration the millisecond duration of Line\r\n * @param   {Vector} args.position the position vector\r\n *\r\n * @param   {number} args.pointDist the numeric point-distance\r\n *\r\n * @param   {Vector} args.size the size vector\r\n *\r\n * @param   {number} args.rotation the numeric rotation of -360 - 360\r\n *\r\n * @param   {number} args.growth the numeric growth\r\n *\r\n * -While a min and max Vector(x,y) will describe the grid of Animation frames, the termPoint will indicate the last frame to show on the grid (Animations may stop early on the 'grid')\r\n * @returns {VectorFrameBounds} a VectorFrameBounds object\r\n */\r\n\r\nclass Line\r\n{\r\n    constructor(args = {})\r\n    {\r\n\r\n        this.curve_string = args.curve_string || \"Linear_None\";\r\n\r\n        this.curve = this.get_curve_from_string(this.curve_string);\r\n\r\n        this.motion_curve = args.motion_curve || TWEEN.Easing.Linear.None;\r\n\r\n        if(typeof(args.curve) == 'function')\r\n        {\r\n            this.curve = args.curve;\r\n        }\r\n\r\n        this.points = [];\r\n\r\n        this.position = args.position ||  new Vector();\r\n\r\n        this.is_highlighted = args.is_highlighted || false;\r\n\r\n        this.offset = args.offset || new Vector();\r\n\r\n        this.pointDist = 5;\r\n\r\n        this.size = args.size || new Vector();\r\n\r\n        this.rotation = args.rotation || 0;\r\n\r\n        this.iterations = 1;\r\n\r\n        this.growth = args.growth || 1.2;\r\n\r\n        this.curve_options = Curves;\r\n\r\n    }\r\n\r\n    Iterations(n)\r\n    {\r\n\r\n       this.iterations = n;\r\n       return this;\r\n    }\r\n\r\n    Growth(n)\r\n    {\r\n        this.growth = n;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    Pos(p)\r\n    {\r\n\r\n        this.position = p;\r\n        return this;\r\n    }\r\n\r\n    PointDisp(num)\r\n    {\r\n        this.minPointDist = num;\r\n        return this;\r\n    }\r\n\r\n    Curve(c)\r\n    {\r\n        this.curve = c;\r\n        this.curve_string = this.get_curve_string(c);\r\n        return this;\r\n    }\r\n\r\n    Duration(d)\r\n    {\r\n        this.duration = d;\r\n\r\n        return this;\r\n    }\r\n    Rotation(r)\r\n    {\r\n        this.rotation = r;\r\n        return this;\r\n    }\r\n    next(position)\r\n    {\r\n\r\n        var found = false;\r\n\r\n        for(var x = 0; x < this.points.length; x++)\r\n        {\r\n\r\n            if(position.equals(this.points[x]) &&  x < this.points.length - 1)\r\n            {\r\n                found = true;\r\n                return new Vector(this.points[x + 1]);\r\n\r\n            }\r\n\r\n            if(x==this.points.length - 1 && !found)\r\n            {\r\n\r\n                return new Vector(this.points[0]);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    get_curve_from_string(str)\r\n    {\r\n\r\n        for(var x in this.curve_options) {\r\n\r\n            if(x.toLowerCase() == str.toLowerCase().replace('_', ''))\r\n            {\r\n                return this.curve_options[x];\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    get_curve_string(c)\r\n    {\r\n        for(var x in this.curve_options) {\r\n\r\n            if(this.curve_options[x] == c)\r\n            {\r\n                return x;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getGraphCanvas(curveCall, existing_canvas) {\r\n\r\n        var canvas = existing_canvas || document.createElement('canvas');\r\n\r\n        canvas.style.position = \"relative\";\r\n\r\n        canvas.id = 'curve-display';\r\n\r\n        canvas.setAttribute('class', 'motion-curve');\r\n\r\n        canvas.width = 180;\r\n        canvas.height = 100;\r\n\r\n        canvas.style.background = \"black\";\r\n\r\n        var context = canvas.getContext('2d');\r\n        context.fillStyle = \"rgb(0,0,0)\";\r\n        context.fillRect(0, 0, 180, 100);\r\n\r\n        context.lineWidth = 0.5;\r\n        context.strokeStyle = \"rgb(230,230,230)\";\r\n\r\n        context.beginPath();\r\n        context.moveTo(0, 20);\r\n        context.lineTo(180, 20);\r\n        context.moveTo(0, 80);\r\n        context.lineTo(180, 80);\r\n        context.closePath();\r\n        context.stroke();\r\n\r\n        context.lineWidth = 2;\r\n        context.strokeStyle = \"rgb(255,127,127)\";\r\n\r\n        var position = {x: 0, y: 80};\r\n        var position_old = {x: 0, y: 80};\r\n\r\n        this.test_graph_size = new Vector(185, 80 -20);\r\n\r\n       var points = this.get_line_segment(this.test_graph_size, 5, curveCall);\r\n\r\n        for(var x in points)\r\n        {\r\n            var position = new Vector(points[x].x, this.test_graph_size.y + 20 - points[x].y);\r\n\r\n            context.beginPath();\r\n            context.moveTo(position_old.x, position_old.y);\r\n            context.lineTo(position.x, position.y);\r\n            context.closePath();\r\n            context.stroke();\r\n\r\n            position_old.x = position.x;\r\n            position_old.y = position.y;\r\n        }\r\n\r\n        return canvas;\r\n    }\r\n\r\n    get_line_segment(size, pointDist, curveCall)\r\n    {\r\n        if(!size || !pointDist) //***PREVENT DOUBLE RUN\r\n        {\r\n\r\n            return 0;\r\n        }\r\n\r\n        var points = [];\r\n\r\n        var current_point = new Vector(0, 0, 0);\r\n\r\n        var position = new Vector(current_point),\r\n\r\n            target = new Vector(position.add(size)),\r\n\r\n            start = new Vector(position),\r\n\r\n            curveMethod = curveCall,\r\n\r\n            ptrack = new Vector(start);\r\n\r\n        for (position.x = position.x; position.x < target.x; position.x += 1) {\r\n\r\n            var dist = position.sub(start);\r\n\r\n            var pct = dist.x / size.x;\r\n\r\n            console.log(pct);\r\n\r\n            position.y = Math.round(curveMethod(pct) * size.y);\r\n\r\n            if (ptrack.trig_distance_xy(position) >= pointDist) {\r\n\r\n                var p = new Vector(Gamestack.GeoMath.rotatePointsXY(position.x, position.y, 0));\r\n\r\n                points.push(p);\r\n\r\n                current_point = new Vector(position);\r\n\r\n                ptrack = new Vector(current_point);\r\n\r\n            }\r\n        }\r\n\r\n        return points;\r\n\r\n    }\r\n\r\n    fill(size, pointDist)\r\n    {\r\n\r\n        if(!size || !pointDist) //***PREVENT DOUBLE RUN\r\n        {\r\n\r\n            return 0;\r\n        }\r\n\r\n        this.size = size;\r\n\r\n        this.pointDist = pointDist;\r\n\r\n        var __inst = this;\r\n\r\n        this.points = [];\r\n\r\n        var current_point = new Vector(this.position), yTrack = 0;\r\n\r\n        for(var x= 0; x <= this.iterations; x++) {\r\n\r\n            var position = new Vector(current_point),\r\n\r\n                target = new Vector(position.add(size)),\r\n\r\n                start = new Vector(position),\r\n\r\n                curveMethod = this.curve,\r\n\r\n                ptrack = new Vector(start);\r\n\r\n            for (position.x = position.x; position.x < target.x; position.x += 1) {\r\n\r\n                var dist = position.sub(start);\r\n\r\n                var pct = dist.x / size.x;\r\n\r\n                position.y = start.y +  Math.round(curveMethod(pct) * size.y);\r\n\r\n                if (current_point.trig_distance_xy(position) >= this.pointDist) {\r\n\r\n                    var p = new Vector(Gamestack.GeoMath.rotatePointsXY(position.x, position.y, this.rotation));\r\n\r\n                    this.points.push(p);\r\n\r\n                    current_point = new Vector(position);\r\n\r\n                }\r\n            }\r\n\r\n            size = size.mult(this.growth);\r\n\r\n\r\n        }\r\n    }\r\n\r\n    transpose(origin)\r\n    {\r\n\r\n        var t_points = [];\r\n\r\n        for(var x = 0; x < this.points.length; x++) {\r\n\r\n            t_points.push(this.points[x].add(origin));\r\n\r\n        }\r\n\r\n        return t_points;\r\n\r\n    }\r\n\r\n    add_segment(next_segment, offset)\r\n    {\r\n        for(var x = 0; x < next_segment.length; x++) {\r\n\r\n            next_segment[x] = new Vector(next_segment[x]).add(offset);\r\n\r\n            this.points.push(next_segment[x]);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    get_flipped_segment(points)\r\n    {\r\n\r\n        var t_points = points.slice(), t_len = t_points.length;\r\n\r\n        for(var x = 0; x < points.length; x++) {\r\n\r\n            t_points[t_len - x].x = points[x].x\r\n\r\n        }\r\n\r\n        return t_points;\r\n\r\n    }\r\n\r\n    Highlight(origin, ctx)\r\n    {\r\n\r\n        ctx = ctx || Gamestack.ctx;\r\n\r\n        for(var x in this.points)\r\n        {\r\n\r\n            var point = origin.add(this.points[x]).sub(Gamestack.point_highlighter.size.mult(0.5));\r\n\r\n            var dist = point.sub(Gamestack.point_highlighter.position);\r\n\r\n            var d = Math.sqrt( dist.x * dist.x + dist.y * dist.y );\r\n\r\n\r\n            if(d >= 10)\r\n            {\r\n                Gamestack.point_highlighter.position = new Vector2(origin.add(this.points[x]).sub(Gamestack.point_highlighter.size.mult(0.5)));\r\n            }\r\n\r\n\r\n               Canvas.draw(Gamestack.point_highlighter, ctx);\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nvar GeoMath = {\r\n\r\n        rotatePointsXY:function(x,y,angle) {\r\n\r\n            var theta = angle*Math.PI/180;\r\n\r\n            var point = {};\r\n            point.x = x * Math.cos(theta) - y * Math.sin(theta);\r\n            point.y = x * Math.sin(theta) + y * Math.cos(theta);\r\n\r\n            point.z = 0;\r\n\r\n            return point\r\n        }\r\n\r\n}\r\n\r\nGamestack.GeoMath = GeoMath;\r\n;\r\n/**\r\n * Takes arguments of x, y, and (optionally) z, instantiates Vector object\r\n\r\n <ul>\r\n <li>Optional: use a Vector as the 'x' argument, and instantiate new distinct Vector from the argument</li>\r\n </ul>\r\n\r\n * @param   {number} x the x coordinate\r\n * @param   {number} y the y coordinate\r\n * @param   {number} z the z coordinate\r\n * @returns {Vector} a Vector object\r\n */\r\n\r\n\r\nclass Vector {\r\n    constructor(x, y, z, r) {\r\n\r\n        if(typeof(x) == 'object' && x.hasOwnProperty('x') && x.hasOwnProperty('y')) //optionally pass vector3\r\n        {\r\n            this.x = x.x;\r\n            this.y = x.y;\r\n            this.z = x.z || 0;\r\n\r\n            if(this.z == null)\r\n            {\r\n                this.z = 0;\r\n            }\r\n\r\n            return this;\r\n        }\r\n\r\n        if(z == null){z = 0;}\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.r = r;\r\n\r\n    }\r\n\r\n\r\n    sub(v)\r\n    {\r\n        if(typeof(v) == 'number')\r\n        {\r\n            v = {x:v, y:v, z:v};\r\n        }\r\n\r\n        return new Vector(this.x - v.x, this.y - v.y, this.z - v.z);\r\n\r\n    }\r\n\r\n    add(v)\r\n    {\r\n        if(typeof(v) == 'number')\r\n        {\r\n            v = {x:v, y:v, z:v};\r\n        }\r\n\r\n        return new Vector(this.x + v.x, this.y + v.y, this.z + v.z);\r\n\r\n    }\r\n\r\n    mult(v)\r\n    {\r\n        if(typeof(v) == 'number')\r\n        {\r\n            v = {x:v, y:v, z:v};\r\n        }\r\n\r\n        return new Vector(this.x * v.x, this.y * v.y, this.z * v.z);\r\n\r\n    }\r\n    div(v)\r\n    {\r\n        if(typeof(v) == 'number')\r\n        {\r\n            v = {x:v, y:v, z:v};\r\n        }\r\n\r\n        return new Vector(this.x / v.x, this.y / v.y, this.z / v.z);\r\n    }\r\n\r\n    round()\r\n    {\r\n        return new Vector(Math.round(this.x), Math.round(this.y), Math.round(this.z));\r\n\r\n    }\r\n    floor()\r\n    {\r\n        return new Vector(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z));\r\n\r\n    }\r\n    ceil()\r\n    {\r\n        return new Vector(Math.ceil(this.x), Math.ceil(this.y), Math.ceil(this.z));\r\n\r\n    }\r\n\r\n    equals(v)\r\n    {\r\n\r\n        return this.x == v.x && this.y == v.y && this.z == v.z;\r\n    }\r\n\r\n    trig_distance_xy(v)\r\n    {\r\n\r\n        var dist = this.sub(v);\r\n\r\n        return  Math.sqrt( dist.x * dist.x + dist.y * dist.y );\r\n\r\n    }\r\n\r\n    diff()\r\n    {\r\n        //TODO:this function\r\n\r\n\r\n    }\r\n\r\n    abs_diff()\r\n    {\r\n        //TODO:this function\r\n\r\n    }\r\n\r\n    is_between(v1, v2)\r\n    {\r\n       //TODO : overlap vectors return boolean\r\n\r\n        return this.x >= v1.x && this.x <= v2.x &&\r\n            this.y >= v1.y && this.y <= v2.y &&\r\n            this.z >= v1.z && this.z <= v2.z;\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nlet Vector3 = Vector, Pos = Vector, Size = Vector, Position = Vector, Vector2 = Vector, Rotation = Vector;\r\n\r\n\r\nGamestack.Vector = Vector;\r\n\r\n\r\n//The above are a list of synonymous expressions for Vector. All of these do the same thing in this library (store x,y,z values)\r\n"]}