{"version":3,"sources":["../../ecma/obj/GamepadAdapter.js"],"names":["Game","__gameInstance","GamepadAdapter","__gamepads","intervals","controller_stack","_gpinst","window","setInterval","gps","navigator","getGamepads","x","length","events","process","clearInterval","game_pad_index","key","game_pad","callback","args","gp","stick_left","y","stick_right","buttons","on","indexOf","parts","split","number","parseInt","e","console","error","push","gpEvents","process_buttons","process_axes","i","axes","axis1","axia2","ix","Math","ceil","pressed","update","clearance_1","gpc","bkey","isNaN","gamepads","gpix","Event","gamepad","GamepadEvents"],"mappings":"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","file":"GamepadAdapter.js","sourcesContent":["\r\nlet Game = __gameInstance || {};\r\n\r\nclass GamepadAdapter {\r\n\r\n    constructor() {\r\n\r\n\r\n        this.__gamepads = [];\r\n\r\n\r\n        this.intervals = [];\r\n\r\n        let controller_stack = this;\r\n\r\n        let _gpinst = this;\r\n\r\n        window.setInterval(function () {\r\n\r\n            var gps = navigator.getGamepads();\r\n\r\n            _gpinst.gps = gps;\r\n\r\n\r\n\r\n            for(var x = 0; x < gps.length; x++) {\r\n\r\n                var events = _gpinst.__gamepads[x] ? _gpinst.__gamepads[x] : {};\r\n\r\n             _gpinst.process(gps[x], events);\r\n\r\n            }\r\n\r\n\r\n        }, 20);\r\n\r\n\r\n\r\n    }\r\n\r\n    gamepads()\r\n    {\r\n\r\n        return  navigator.getGamepads();\r\n\r\n    }\r\n\r\n\r\n    disconnect_all() {\r\n\r\n        for (var x = 0; x < this.intervals.length; x++) {\r\n\r\n            window.clearInterval(this.intervals[x]);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    disconnect_by_index(game_pad_index) {\r\n\r\n        window.clearInterval(this.intervals[game_pad_index]);\r\n\r\n    }\r\n\r\n    hasAnyPad() {\r\n        return \"getGamepads\" in navigator;\r\n\r\n    }\r\n\r\n    Event(key, game_pad, callback) {\r\n        return {\r\n\r\n            key: key, game_pad:game_pad, callback: callback\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    GamepadEvents(args)\r\n    {\r\n\r\n        var gp = {};\r\n\r\n        gp.stick_left = args.stick_left || function(x, y)\r\n        {\r\n\r\n          //  console.log('Def call');\r\n\r\n        }\r\n\r\n\r\n        gp.stick_right = args.stick_right ||  function(x, y)\r\n        {\r\n\r\n        }\r\n\r\n        gp.buttons = [];\r\n\r\n        if(args.buttons)\r\n        {\r\n           gp.buttons = args.buttons;\r\n\r\n        }\r\n\r\n\r\n\r\n        gp.on = function(key, callback)\r\n        {\r\n\r\n\r\n\r\n            if(this[key] && key !== \"on\")\r\n            {\r\n\r\n                this[key] = callback;\r\n\r\n\r\n            }\r\n\r\n            else if(key.indexOf('button') >= 0 && key.indexOf('_') >= 0 )\r\n            {\r\n                var parts = key.split('_');\r\n\r\n                var number;\r\n\r\n                try\r\n                {\r\n\r\n                    number = parseInt(parts[1]);\r\n\r\n                    gp['buttons'][number] = callback;\r\n\r\n                }\r\n                catch (e)\r\n                    {\r\n                      console.error('could not parse \"on\" event with ' + key);\r\n\r\n                    }\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        this.__gamepads.push(gp);\r\n\r\n        return gp;\r\n\r\n    }\r\n\r\n\r\n\r\n    process(gp, gpEvents)\r\n    {\r\n\r\n        this.process_buttons(gp, gpEvents);\r\n\r\n        this.process_axes(gp, gpEvents);\r\n\r\n    }\r\n\r\n\r\n    process_axes(gp, events)\r\n    {\r\n\r\n        if(!gp || !gp['axes'])\r\n        {\r\n\r\n            return false;\r\n\r\n        }\r\n\r\n\r\n        for (var i = 0; i < gp.axes.length; i += 2) {\r\n            var axis1 = gp.axes[i], axia2 = gp.axes[i + 1];\r\n\r\n            var ix = (Math.ceil(i / 2) + 1), x = gp.axes[i], y = gp.axes[i + 1];\r\n\r\n\r\n\r\n            if(ix == 1 && events.stick_left)\r\n            {\r\n                events.stick_left(x, y);\r\n\r\n            }\r\n\r\n            if(ix == 2 && events.stick_right)\r\n            {\r\n                events.stick_right(x, y);\r\n\r\n            }\r\n\r\n            if (this.events && this.events['stick_' + i] && typeof(this.events['stick_' + i].callback) == 'function') {\r\n                this.events['stick_' + i].callback();\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    process_buttons(gp, events) {\r\n\r\n        if(!gp || !gp['buttons'])\r\n        {\r\n             return false;\r\n\r\n        }\r\n\r\n        for (var i = 0; i < gp.buttons.length; i++) {\r\n\r\n            if (gp.buttons[i].pressed) {\r\n\r\n               // console.log('button:' + i);\r\n\r\n            if(typeof(events.buttons[i]) == 'function')\r\n            {\r\n                 events.buttons[i](gp.buttons[i].pressed);\r\n            }\r\n            else if(typeof( events.buttons[i]) =='object' && typeof(events.buttons[i].update) == 'function')\r\n            {\r\n                events.buttons[i].update(events.buttons[i].pressed);\r\n\r\n            }\r\n\r\n\r\n                var clearance_1 = this.events && this.events[i], gpc, bkey = \"button_\" + i;\r\n\r\n                if (clearance_1) {\r\n                    gpc = this.events[bkey] && !isNaN(this.events[bkey].game_pad) ? this.gamepads[this.events[bkey].game_pad] : this.events[bkey].game_pad;\r\n                }\r\n                ;\r\n\r\n                if (clearance_1 && gpc && typeof(this.events[bkey].callback) == 'function') {\r\n                    //call the callback\r\n                    this.events[i].callback();\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    on(key, gpix, callback) {\r\n\r\n        if(typeof(this[key]) == 'function')\r\n        {\r\n\r\n\r\n        }\r\n\r\n        this.events.push(this.Event(key, gpix, callback))\r\n\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n\r\n\r\nif(!__gameInstance.GamepadAdapter)\r\n{\r\n    __gameInstance.GamepadAdapter = new GamepadAdapter();\r\n\r\n    __gameInstance.gamepads = [];\r\n\r\n\r\n   let gamepad = __gameInstance.GamepadAdapter.GamepadEvents({\r\n\r\n       stick_left:function()\r\n       {\r\n          // console.log('Left Stick callback');\r\n\r\n       }\r\n\r\n\r\n   });\r\n\r\n    __gameInstance.gamepads.push(gamepad);\r\n\r\n};\r\n\r\n\r\n\r\n"]}