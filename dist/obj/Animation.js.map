{"version":3,"sources":["../../ecma/obj/Animation.js"],"names":["Animation","args","frames","$Q","getArg","src","image","GameImage","attack_level","heal_level","delay","cix","_anime","Quazar","each","ix","item","frameSize","Vector3","frameBounds","VectorBounds","frameOffset","apply2DFrames","parent","flipX","priority","selected_frame","earlyTerm","hang","timer","key","fallback","hasOwnProperty","three_dimen","_a","frame","log","fcount","y","min","max","x","framePos","push","isNaN","length","update"],"mappings":"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","file":"Animation.js","sourcesContent":["/**\r\n * Created by The Blakes on 04-13-2017\r\n *\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Animation\r\n */\r\n\r\n\r\nclass Animation {\r\n    constructor(args) {\r\n\r\n        args = args || {};\r\n\r\n        this.frames = $Q.getArg(args, 'frames', []);\r\n\r\n        this.src = $Q.getArg(args, 'src', '!MISSING_ARG');\r\n\r\n        this.image = $Q.getArg(args, 'image', new GameImage(this.src));\r\n\r\n        this.attack_level = $Q.getArg(args, 'attack_level', 0);\r\n\r\n        this.heal_level = $Q.getArg(args, 'heal_level', 0);\r\n\r\n\r\n\r\n        this.delay = $Q.getArg(args, 'delay', 0);\r\n\r\n\r\n        this.cix = 0;\r\n\r\n        var _anime = this;\r\n\r\n\r\n        Quazar.each(args, function (ix, item) {\r\n\r\n            if (ix !== 'parent') {\r\n                _anime[ix] = item;\r\n            }\r\n\r\n\r\n        });\r\n\r\n        this.frameSize = this.getArg(args, 'frameSize', new Vector3(0, 0, 0));\r\n\r\n        this.frameBounds = this.getArg(args, 'frameBounds', new VectorBounds(new Vector3(0, 0, 0), new Vector3(0, 0, 0)));\r\n\r\n\r\n        this.frameOffset = this.getArg(args, 'frameOffset', new Vector3(0, 0, 0));\r\n\r\n\r\n        this.apply2DFrames(args.parent || {});\r\n\r\n\r\n        this.flipX = this.getArg(args, 'flipX', false);\r\n\r\n\r\n        this.priority = this.getArg(args, 'priority', 0);\r\n\r\n\r\n        this.cix = 0;\r\n\r\n\r\n        this.selected_frame = this.frames[0];\r\n\r\n\r\n        this.earlyTerm = this.getArg(args, 'earlyTerm', false);\r\n\r\n        this.hang =this.getArg(args, 'hang', false);\r\n\r\n\r\n        this.timer = 0;\r\n\r\n\r\n    }\r\n\r\n\r\n    getArg(args, key, fallback) {\r\n\r\n        if (args.hasOwnProperty(key)) {\r\n\r\n            return args[key];\r\n\r\n        }\r\n        else {\r\n            return fallback;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    apply3DFrames(frames) {\r\n\r\n        this.three_dimen = false;\r\n\r\n        let _a = this;\r\n\r\n\r\n        $Q.each(frames, function (ix, frame) {\r\n\r\n\r\n            if (typeof(frame) == 'Frame3D') {\r\n\r\n                _a.three_dimen = true;\r\n\r\n\r\n                //Assemble a web-gl texture 3D from\r\n\r\n                Quazar.log('TODO: apply webgl / threejs Texture3D set');\r\n\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    apply2DFrames(parent) {\r\n\r\n        //this.parent = parent;\r\n\r\n\r\n        this.frames = [];\r\n\r\n\r\n        var fcount = 0;\r\n\r\n\r\n        for (let y = this.frameBounds.min.y; y <= this.frameBounds.max.y; y++) {\r\n\r\n            for (let x = this.frameBounds.min.x; x <= this.frameBounds.max.x; x++) {\r\n\r\n                //Quazar.log('assembling animation with:' + jstr(this.frameBounds) + ':frames len:' + this.frames.length);\r\n\r\n\r\n\r\n                let framePos = {x: x * this.frameSize.x + this.frameOffset.x, y: y * this.frameSize.y + this.frameOffset.y};\r\n\r\n                this.frames.push({image: this.image, frameSize: this.frameSize, framePos: framePos});\r\n\r\n\r\n                fcount += 1;\r\n\r\n                if(!isNaN(this.earlyTerm))\r\n                {\r\n\r\n                    if(fcount >= this.earlyTerm) {\r\n                        return 0;\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.frames[0] = !this.frames[0] ? {\r\n                image: this.image,\r\n                frameSize: this.frameSize,\r\n                framePos: {x: this.frameBounds.min.x, y: this.frameBounds.min.y}\r\n            } : this.frames[0];\r\n\r\n        this.selected_frame = this.frames[0];\r\n\r\n\r\n    }\r\n\r\n    reset() //special reset function:: frames are re-rendered each reset()\r\n    {\r\n\r\n        //1. reset the GameImage\r\n\r\n\r\n        //2. apply the frames\r\n\r\n        this.apply2DFrames(this.parent);\r\n\r\n    }\r\n\r\n    update() {\r\n\r\n        this.selected_frame = this.frames[this.cix % this.frames.length];\r\n\r\n\r\n    }\r\n\r\n    reset()\r\n{\r\n\r\n    this.cix = 0;\r\n\r\n}\r\n\r\n\r\n    animate() {\r\n\r\n        this.timer += 1;\r\n\r\n        Quazar.log('ANIMATING with frame count:' + this.frames.length);\r\n\r\n\r\n\r\n        if(this.timer % this.delay == 0) {\r\n\r\n            if(this.hang)\r\n            {\r\n                this.cix = this.cix + 1;\r\n\r\n                if(this.cix > this.frames.length - 1)\r\n                {\r\n                    this.cix =  this.frames.length - 1;\r\n\r\n                }\r\n\r\n            }\r\n            else\r\n            {\r\n                this.cix = this.cix >= this.frames.length - 1 ? this.frameBounds.min.x : this.cix + 1;\r\n            }\r\n\r\n\r\n            this.update();\r\n\r\n        }\r\n\r\n    }\r\n\r\n};\r\n"]}