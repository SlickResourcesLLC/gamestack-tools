{"version":3,"sources":["../../../ecma/obj/Sprite.js"],"names":["__gameInstance","Sprite","name","description","args","_spr","Quazar","each","ix","item","type","$Q","getArg","animations","motionstacks","__inst","sounds","image","GameImage","size","Vector2","position","Vector3","rotation","selected_animation","selected_motionstack","selected_physics","onGround","clasticTo","damagedBy","speed","accel","rot_speed","rot_accel","travel_mode_keys","travel_modes","create_travel_mode","travel_mode","stats","create_stats","id","setid","$","Motionstack","Animation","Date","getUTCMilliseconds","w","h","x","y","key","decel","max_speed","options","targets","Array","target","startCurve","endCurve","loopFactor","tween_movement_sequence","__playerInstance","push","TWEEN","Tween","to","targetY","easing","Easing","Cubic","Out","onUpdate","console","log","onComplete","jump_position_tween","start","ctrl","event_args_list","alert","event_prep","prep_key","isAtPlay","hasOwnProperty","switch","height","duration","isNaN","stat","z","event_arg","spread","angleSpread","total","totalBullets","numberBullets","animation","bullet","screenDuration","setAnimation","evt","length","max","assertSpeed","max_y","extras","rate","controller_index","controller","__sprite","object","anime","normalKey","images","objects","_inst","__collections","ic","coll","obj","__typeProfile","constructor","list"],"mappings":"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","file":"Sprite.js","sourcesContent":["let __gameInstance = __gameInstance || {};\r\n\r\n\r\nclass Sprite {\r\n    constructor(name, description, args) {\r\n\r\n        this.name = name || \"__\";\r\n\r\n        this.description = description || \"__\";\r\n\r\n\r\n        var _spr = this;\r\n\r\n        Quazar.each(args, function (ix, item) {\r\n\r\n            if (ix !== 'parent') {\r\n                _spr[ix] = item;\r\n            }\r\n\r\n\r\n        });\r\n\r\n        this.type = $Q.getArg(args, 'type', 'basic');\r\n\r\n        this.animations = $Q.getArg(args, 'animations', []);\r\n\r\n        this.motionstacks = $Q.getArg(args, 'motionstacks', []);\r\n\r\n        let __inst = this;\r\n\r\n\r\n\r\n        this.sounds = {};\r\n\r\n\r\n        this.image = $Q.getArg(args, 'image', new GameImage($Q.getArg(args, 'src', false)));\r\n\r\n\r\n        this.size = $Q.getArg(args, 'size', new Vector2(100, 100));\r\n\r\n\r\n        this.position = $Q.getArg(args, 'position', new Vector3(0, 0, 0));\r\n\r\n\r\n        this.rotation = $Q.getArg(args, 'rotation', new Vector3(0, 0, 0));\r\n\r\n        this.selected_animation = {};\r\n\r\n        this.selected_motionstack = {};\r\n\r\n        this.selected_physics = {};\r\n\r\n        this.onGround = false;\r\n\r\n\r\n        this.clasticTo = []; //an array of sprite types\r\n\r\n\r\n        this.damagedBy = []; //an array of animation types\r\n\r\n\r\n        this.speed =  $Q.getArg(args, 'speed', new Vector3(0, 0, 0)); //store constant speed value\r\n\r\n\r\n        this.accel =  $Q.getArg(args, 'accel', new Vector3(0, 0, 0)); //store constant accel value\r\n\r\n\r\n        this.rot_speed =  $Q.getArg(args, 'rot_speed', new Vector3(0, 0, 0));\r\n\r\n        this.rot_accel =  $Q.getArg(args, 'rot_accel', new Vector3(0, 0, 0));\r\n\r\n\r\n        this.travel_mode_keys = [\r\n            'none',\r\n            'topscroll_freeflight',\r\n            'tsidescroll_freeflight',\r\n            'sidescroll_runner'\r\n\r\n        ];\r\n\r\n        this.travel_modes = [\r\n\r\n            this.create_travel_mode('topscroll_freeflight', 0.3, 0.3, 5.0),\r\n\r\n            this.create_travel_mode('sidescroll_freeflight', 0.3, 0.3, 5.0),\r\n\r\n            this.create_travel_mode('sidescroll_runner', 0.3, 0.3, 7.0)\r\n\r\n        ];\r\n\r\n        this.travel_mode = this.create_travel_mode('none', 0, 0, 0);\r\n\r\n        this.stats = this.create_stats();\r\n\r\n        this.id = this.setid();\r\n\r\n        $.each(this.motionstacks, function(ix, item){\r\n\r\n            __inst.motionstacks[ix] = new Motionstack(item);\r\n\r\n        });\r\n\r\n\r\n        $.each(this.animations, function(ix, item){\r\n\r\n            __inst.animations[ix] = new Animation(item);\r\n\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    setid()\r\n     {\r\n         return new Date().getUTCMilliseconds();\r\n\r\n     }\r\n\r\n     get_id()\r\n     {\r\n\r\n         return this.id;\r\n     }\r\n\r\n    onScreen(w, h) {\r\n        return this.position.x + this.size.x >= 0 && this.position.x < w\r\n            && this.position.y + this.size.y >= 0 && this.position.y < h;\r\n\r\n    }\r\n\r\n    type_options()\r\n    {\r\n\r\n        return[\r\n\r\n            'player',\r\n            'enemy',\r\n            'powerup',\r\n            'attachment',\r\n            'projectile'\r\n\r\n        ]\r\n\r\n    }\r\n\r\n    create_travel_mode(key, accel, decel, max_speed)\r\n    {\r\n\r\n        return{key, accel, decel, max_speed}\r\n\r\n    }\r\n\r\n    create_stats()\r\n    {\r\n        return{\r\n\r\n            \"health\":100,\r\n            \"magic\":10,\r\n            \"strength\":20,\r\n            \"ammo\":10,\r\n            \"max_speed\":5.0\r\n        }\r\n\r\n    }\r\n\r\n    update() {}\r\n\r\n    def_update() {\r\n\r\n\r\n        for(var x in this.speed)\r\n        {\r\n\r\n            if(this.speed[x] > 0 || this.speed[x] < 0)\r\n            {\r\n\r\n                this.position[x] += this.speed[x];\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for(var x in this.accel)\r\n        {\r\n\r\n            if(this.accel[x] > 0 || this.accel[x] < 0)\r\n            {\r\n\r\n                this.speed[x] += this.accel[x];\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for(var x in this.rot_speed)\r\n        {\r\n\r\n            if(this.rot_speed[x] > 0 || this.rot_speed[x] < 0)\r\n            {\r\n\r\n                this.rotation[x] += this.rot_speed[x];\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        for(var x in this.rot_accel)\r\n        {\r\n\r\n\r\n            if(this.rot_accel[x] > 0 || this.rot_accel[x] < 0)\r\n            {\r\n\r\n                this.rot_speed[x] += this.rot_accel[x];\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    move(options) //move from one position to another , or spread movement over a complex line, with curved acceleration\r\n    {\r\n\r\n        if (!options.targets instanceof Array) {\r\n\r\n            options.targets = options.targets ? [options.targets] : [options.target || false]\r\n\r\n        }\r\n        ;\r\n\r\n\r\n        if (options.startCurve) {\r\n\r\n        }\r\n\r\n        if (options.endCurve) {\r\n\r\n        }\r\n\r\n        if (options.loopFactor) { //use repeating of startCurve and endCurve over each loopFactor amount of targets\r\n\r\n        }\r\n\r\n\r\n        this.tween_movement_sequence = [];\r\n\r\n\r\n        Quazar.each(options.targets, function (ix, item) {\r\n\r\n            if (item && typeof(item) == 'object') {\r\n\r\n            }\r\n\r\n        });\r\n\r\n        //do the movement as described\r\n\r\n\r\n        var __playerInstance = this; //grab a reference to the player\r\n\r\n        __playerInstance.speed.y = -0.8;\r\n\r\n\r\n        this.tween_movement_sequence.push(this.tween_movement_sequence[ix] || new TWEEN.Tween(this.position)\r\n                .to({y: targetY}, 350)\r\n                .easing(TWEEN.Easing.Cubic.Out)\r\n                .onUpdate(function () {\r\n                        console.log(this.x, this.y);\r\n                    }\r\n                ).onComplete(function () {\r\n\r\n                    //  alert('complete');\r\n\r\n                    __playerInstance.jump_position_tween = false;\r\n\r\n                })\r\n                .start());\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    event_prep(key, ctrl, args) {\r\n        return {key: key, ctrl: ctrl, args: args}\r\n\r\n    }\r\n\r\n\r\n    event_arg(key, ctrl, args) {\r\n\r\n        if (__gameInstance.event_args_list instanceof Array !== true) {\r\n            __gameInstance.event_args_list = [];\r\n\r\n        }\r\n\r\n\r\n        alert('applying event arguments');\r\n\r\n        __gameInstance.event_args_list.push(this.event_prep(key, ctrl, args));\r\n\r\n    }\r\n\r\n    line_movement() //an array movement\r\n    {\r\n\r\n\r\n    }\r\n\r\n    jump(options) {\r\n\r\n        //character does a jump move\r\n\r\n        this.prep_key = 'jump';\r\n\r\n        if (__gameInstance.isAtPlay) //do a jump move only if the game is running... else this call is instructional ...aka prepare a jump\r\n        {\r\n            //do the jump as described\r\n\r\n            if(options.hasOwnProperty('switch') && this[options.switch] !== true)\r\n            {\r\n                return false;\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n            var height = options.height, duration = options.duration, speed = options.speed;\r\n\r\n            if (!isNaN(height)) {\r\n                height = this.stat('jump_height') || 40;\r\n            }\r\n\r\n            var targetY = this.position.y - height;\r\n\r\n            var __playerInstance = this; //grab a reference to the player\r\n\r\n            if (!this.speed) {\r\n                this.speed = {x: 0, y: 0, z: 0};\r\n\r\n            }\r\n\r\n            this.speed.y = -0.8;\r\n\r\n            this.jump_position_tween = this.jump_position_tween || new TWEEN.Tween(this.position)\r\n                    .to({y: targetY}, 350)\r\n                    .easing(TWEEN.Easing.Cubic.Out)\r\n                    .onUpdate(function () {\r\n                            console.log(this.x, this.y);\r\n                        }\r\n                    ).onComplete(function () {\r\n\r\n                        //  alert('complete');\r\n\r\n                        __playerInstance.jump_position_tween = false;\r\n\r\n                    })\r\n                    .start();\r\n\r\n\r\n            this.onGround = false;\r\n\r\n            return this;\r\n\r\n        }\r\n\r\n        else {\r\n\r\n\r\n            this.event_arg(this.prep_key, '_', options);\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n\r\n    shoot(options) {\r\n        //character shoots an animation\r\n\r\n\r\n        this.prep_key = 'shoot';\r\n\r\n\r\n        let spread = options.spread || options.angleSpread || false;\r\n\r\n        let total = options.total || options.totalBullets || options.numberBullets || false;\r\n\r\n        let animation = options.bullet || options.animation || false;\r\n\r\n        let duration = options.duration || options.screenDuration || false;\r\n\r\n        let speed = options.speed || false;\r\n\r\n        if (__gameInstance.isAtPlay) {\r\n\r\n\r\n        }\r\n        else {\r\n\r\n            this.event_arg(this.prep_key, '_', options);\r\n\r\n        }\r\n\r\n\r\n        return this;\r\n\r\n\r\n    }\r\n\r\n    allow(options)\r\n    {\r\n        this.prep_key = 'animate';\r\n\r\n\r\n        this.event_arg(this.prep_key, '_', options);\r\n\r\n\r\n    }\r\n\r\n    animate(animation) {\r\n\r\n        alert('calling animation');\r\n\r\n\r\n\r\n        if (__gameInstance.isAtPlay) {\r\n\r\n            this.setAnimation(animation);\r\n\r\n            return this;\r\n\r\n        }\r\n        else {\r\n            var evt = __gameInstance.event_args_list[__gameInstance.event_args_list.length - 1];\r\n\r\n            evt.animation = animation;\r\n\r\n            return this;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    velocityY(accel, max) {\r\n\r\n        this.assertSpeed();\r\n\r\n        if(this.speed.y < max.y)\r\n        {\r\n            this.speed.y += accel;\r\n\r\n        }\r\n\r\n        this.position.y += this.speed.y;\r\n\r\n\r\n\r\n    }\r\n\r\n    collide(item)\r\n    {\r\n\r\n        var max_y = item.max ? item.max.y : item.position.y;\r\n\r\n        if(this.position.y + this.size.y >= max_y)\r\n        {\r\n\r\n            this.position.y = max_y - this.size.y;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    assertSpeed() {\r\n        if (!this.speed) {\r\n\r\n            this.speed = new Vector3(0, 0, 0);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    swing()\r\n    {\r\n\r\n\r\n    }\r\n\r\n\r\n    accel(options) {\r\n\r\n        this.prep_key = 'accel';\r\n\r\n        //targeting position\r\n\r\n        if (__gameInstance.isAtPlay) {\r\n\r\n            this.assertSpeed();\r\n\r\n            if(options.hasOwnProperty('switch') && this[options.switch] !== true)\r\n            {\r\n                return false;\r\n\r\n            }\r\n            else\r\n            {\r\n\r\n              //  this[options.switch] = false;\r\n\r\n            }\r\n\r\n            if(options.extras && options.speed !== 0)\r\n            {\r\n\r\n                for(var x in options.extras)\r\n                {\r\n                    this[x] = options.extras[x];\r\n\r\n                }\r\n            }\r\n\r\n            if(this.speed[options.key] < options.speed)\r\n            {\r\n\r\n                this.speed[options.key] += options.accel;\r\n\r\n            }\r\n            else if(this.speed[options.key] > options.speed)\r\n            {\r\n\r\n                this.speed[options.key] -= options.accel;\r\n\r\n            }\r\n            else if(options.speed == 0)\r\n            {\r\n                this.speed[options.key] = 0;\r\n\r\n            }\r\n\r\n\r\n        }\r\n        else {\r\n\r\n\r\n            this.event_arg(this.prep_key, '_', options);\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    deccelX(rate) {\r\n        if (typeof(rate) == 'object') {\r\n\r\n            rate = rate.rate;\r\n\r\n        }\r\n\r\n        if (this.speed['x'] > rate) {\r\n            this.speed['x'] -= rate;\r\n\r\n        }\r\n        else if (this.speed['x'] < rate) {\r\n            this.speed['x'] += rate;\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n            this.speed['x'] = 0;\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    on(options) {\r\n\r\n\r\n        let controller_index = options.controller || false;\r\n\r\n        let __sprite = this;\r\n\r\n        var evt = __gameInstance.event_args_list[__gameInstance.event_args_list.length - 1];\r\n\r\n        evt.object = __sprite;\r\n\r\n        evt.ctrl = options.ctrl;\r\n\r\n        for (var x in options) {\r\n\r\n\r\n            evt.args[x] = options[x];\r\n\r\n        }\r\n\r\n       // alert('event done');\r\n    }\r\n\r\n\r\n    setAnimation(anime) {\r\n\r\n        this.animations['default'] = anime;\r\n\r\n        this.selected_animation = anime;\r\n\r\n        Quazar.log('declared default animation');\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    defaultAnimation(anime) {\r\n\r\n        this.animations['default'] = anime;\r\n\r\n        Quazar.log('declared default animation');\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n\r\n    getImage(key) {\r\n        key = this.normalKey(key);\r\n\r\n        return this.images[key] || false;\r\n\r\n    }\r\n\r\n\r\n    getAnimation(key) {\r\n        key = this.normalKey(key);\r\n\r\n        return this.animations[key] || false;\r\n\r\n    }\r\n\r\n\r\n    add(objects) // add any object to the sprite\r\n    {\r\n\r\n        if (!objects instanceof Array) {\r\n            objects = [objects];\r\n\r\n        }\r\n        ;\r\n\r\n        let _inst = this;\r\n\r\n        Quazar.each(this.__collections, function (ic, coll) {\r\n\r\n            Quazar.each(objects, function (ix, obj) {\r\n\r\n                if (obj instanceof coll.__typeProfile.constructor) {\r\n                    coll.list.push(obj); //add the object to collection by class-type\r\n\r\n                }\r\n\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n"]}